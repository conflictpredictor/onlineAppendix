=========================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_07470_19680\rev_07470-19680.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b0db7_3d003\rev_b0db7-3d003.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a112d_186d5\rev_a112d-186d5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e9d1e_9b21e\rev_e9d1e-9b21e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9de1b_d8830\rev_9de1b-d8830.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b48bb_1d41c\rev_b48bb-1d41c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_d1b30_16edb\rev_d1b30-16edb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2741e_78d8f\rev_2741e-78d8f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f8f44_9ccbc\rev_f8f44-9ccbc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_adf08_2486c\rev_adf08-2486c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6076b_f09b6\rev_6076b-f09b6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f9726_6076b\rev_f9726-6076b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7c5d4_c0e9e\rev_7c5d4-c0e9e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_10933_c0e9e\rev_10933-c0e9e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_052e8_42d31\rev_052e8-42d31.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ed07f_f4d92\rev_ed07f-f4d92.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_eaf6b_43812\rev_eaf6b-43812.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ad0cc_39716\rev_ad0cc-39716.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_39716_22211\rev_39716-22211.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_dcb19_465a8\rev_dcb19-465a8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_505b8_e327c\rev_505b8-e327c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_785c9_3f2ec\rev_785c9-3f2ec.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_11e16_894fa\rev_11e16-894fa.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_53e37_d69b0\rev_53e37-d69b0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c84aa_35535\rev_c84aa-35535.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9af1e_1c6c8\rev_9af1e-1c6c8.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private Collection<String> getS3PrefixesForRequest(String requestId) {
    SingularityRequestHistory history = Iterables.getFirst(historyManager.getRequestHistory(requestId, Optional.of(OrderDirection.ASC), 0, 1), null);

    if (history == null) {
      throw WebExceptions.notFound("No request history found for %s", requestId);
    }

    final long start = history.getCreatedAt();

    history = Iterables.getFirst(historyManager.getRequestHistory(requestId, Optional.of(OrderDirection.DESC), 0, 1), null);

    long end = System.currentTimeMillis();

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513269164667\fstmerge_var1_7769041835701852025
    if (history != null && history.getEventType() == RequestHistoryType.DELETED || history.getEventType() == RequestHistoryType.PAUSED) {
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513269164667\fstmerge_base_5317792366695093326
    if (history != null && history.getState() == RequestHistoryType.DELETED || history.getState() == RequestHistoryType.PAUSED) {
=======
    if (history != null && (history.getState() == RequestHistoryType.DELETED || history.getState() == RequestHistoryType.PAUSED)) {
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513269164667\fstmerge_var2_536133322069036067
      end = history.getCreatedAt() + TimeUnit.DAYS.toMillis(1);
    }

    Collection<String> prefixes = SingularityS3FormatHelper.getS3KeyPrefixes(configuration.get().getS3KeyFormat(), requestId, start, end);

    LOG.trace("Request {} got S3 prefixes {} for start {}, end {}", requestId, prefixes, start, end);

    return prefixes;
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_9af1e_1c6c8\rev_rev_left_9af1e-rev_right_1c6c8\SingularityService\src\main\java\com\hubspot\singularity\resources\S3LogResource.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fc019_1c6c8\rev_fc019-1c6c8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1c6c8_0dd64\rev_1c6c8-0dd64.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_0f988_9d387\rev_0f988-9d387.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8f7a6_31c18\rev_8f7a6-31c18.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_415f7_d1daa\rev_415f7-d1daa.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b892e_6fbd3\rev_b892e-6fbd3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_31c18_3b080\rev_31c18-3b080.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3b080_fcef8\rev_3b080-fcef8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2a7ca_8fa10\rev_2a7ca-8fa10.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_84290_a1322\rev_84290-a1322.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_43859_29bd7\rev_43859-29bd7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_309e7_29bd7\rev_309e7-29bd7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_29bd7_0c325\rev_29bd7-0c325.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_17cf3_fe829\rev_17cf3-fe829.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fe829_a48e2\rev_fe829-a48e2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b3c72_e2169\rev_b3c72-e2169.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_32b9a_9cace\rev_32b9a-9cace.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ae037_b1db4\rev_ae037-b1db4.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_0b31a_4f3f6\rev_0b31a-4f3f6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4f3f6_aeed0\rev_4f3f6-aeed0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b3c72_77e1c\rev_b3c72-77e1c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cd2bd_cc760\rev_cd2bd-cc760.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8f238_52151\rev_8f238-52151.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_95986_d5ded\rev_95986-d5ded.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9c2ae_c121e\rev_9c2ae-c121e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b7c5c_67741\rev_b7c5c-67741.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_59eb8_e77d9\rev_59eb8-e77d9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1b51f_e77d9\rev_1b51f-e77d9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e77d9_60c0e\rev_e77d9-60c0e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_affa8_ca71e\rev_affa8-ca71e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6394d_064da\rev_6394d-064da.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cf47d_064da\rev_cf47d-064da.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6c860_cda87\rev_6c860-cda87.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7e780_cda87\rev_7e780-cda87.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_04285_32a85\rev_04285-32a85.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9a95c_32a85\rev_9a95c-32a85.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cda87_d3150\rev_cda87-d3150.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c8a91_9c3de\rev_c8a91-9c3de.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c40a4_115a2\rev_c40a4-115a2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_73e62_5fd59\rev_73e62-5fd59.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e9b09_56c6e\rev_e9b09-56c6e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a29d0_26d79\rev_a29d0-26d79.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b511b_352b3\rev_b511b-352b3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_be3bb_a6db3\rev_be3bb-a6db3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6b1b6_26efb\rev_6b1b6-26efb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_58975_869fb\rev_58975-869fb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_53e0f_eff57\rev_53e0f-eff57.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6b17a_388b2\rev_6b17a-388b2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_43c40_e7b62\rev_43c40-e7b62.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2b314_33577\rev_2b314-33577.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_115a2_a20ab\rev_115a2-a20ab.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_34cde_a4ac9\rev_34cde-a4ac9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9f0dc_dfdd7\rev_9f0dc-dfdd7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_88fbc_ce05e\rev_88fbc-ce05e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_205df_79fbb\rev_205df-79fbb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ce05e_b2f5e\rev_ce05e-b2f5e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8b9e3_21301\rev_8b9e3-21301.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a231c_8295d\rev_a231c-8295d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7a024_006a2\rev_7a024-006a2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_15099_f877f\rev_15099-f877f.revisions
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271425691\fstmerge_var1_8559270994629192042
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271425691\fstmerge_base_4624935911530962929
TASK_LOST_WHILE_DOWN("lost while down", true, false)
=======
TASK_LOST_WHILE_DOWN("lost while down", true)
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271425691\fstmerge_var2_9149496660538106792

File path: C:\download\ssmerge\Singularity\revisions\rev_15099_f877f\rev_rev_left_15099-rev_right_f877f\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271441132\fstmerge_var1_2953617728785933439
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271441132\fstmerge_base_8197641151116541703
public void startup(MasterInfo masterInfo, boolean registered) {
    final long start = System.currentTimeMillis();

    final String uri = mesosClient.getMasterUri(masterInfo);

    LOG.info("Starting up... fetching state data from: " + uri);

    try {
      MesosMasterStateObject state = mesosClient.getMasterState(uri);

      slaveAndRackManager.loadSlavesAndRacksFromMaster(state);

      // two things need to happen:
      // 1- we need to look for active tasks that are no longer active (assume that there is no such thing as a missing active task.)
      // 2- we need to reschedule the world.

      checkForMissingActiveTasks(state, registered);
      enqueueHealthAndNewTaskchecks();

    } catch (Exception e) {
      throw Throwables.propagate(e);
    }

    startStartables();

    LOG.info("Finished startup after {}", JavaUtils.duration(start));
  }
=======
public void startup(MasterInfo masterInfo, boolean registered) {
    final long start = System.currentTimeMillis();

    final String uri = mesosClient.getMasterUri(masterInfo);

    LOG.info("Starting up... fetching state data from: " + uri);

    try {
      MesosMasterStateObject state = mesosClient.getMasterState(uri);

      slaveAndRackManager.loadSlavesAndRacksFromMaster(state);

      checkForCompletedActiveTasks(state);
      enqueueHealthAndNewTaskchecks();

    } catch (Exception e) {
      throw Throwables.propagate(e);
    }

    startStartables();

    LOG.info("Finished startup after {}", JavaUtils.duration(start));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271441132\fstmerge_var2_4860367532017248325

File path: C:\download\ssmerge\Singularity\revisions\rev_15099_f877f\rev_rev_left_15099-rev_right_f877f\SingularityService\src\main\java\com\hubspot\singularity\mesos\SingularityStartup.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271457039\fstmerge_var1_7540778123313330119
private String populateGenericEmailTemplate(JadeTemplate template, SingularityRequest request, Optional<SingularityTaskId> taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, Optional<ExtendedTaskState> taskState,
      Map<String, Object> additionalBindings) {
    Builder<String, Object> templateSubs = ImmutableMap.<String, Object> builder();

    templateSubs.put("request_id", request.getId());
    templateSubs.put("singularity_request_link", getSingularityRequestLink(request));

    if (taskId.isPresent()) {
      templateSubs.put("singularity_task_link", getSingularityTaskLink(taskId.get()));
      templateSubs.put("stdout", getTaskLogFile(taskId.get(), "stdout").or(new String[0]));
      templateSubs.put("stderr", getTaskLogFile(taskId.get(), "stderr").or(new String[0]));
      templateSubs.put("duration_left", DurationFormatUtils.formatDurationHMS(TimeUnit.SECONDS.toMillis(configuration.getKillAfterTasksDoNotRunDefaultSeconds())));
      templateSubs.put("task_id", taskId.get().getId());
      templateSubs.put("deploy_id", taskId.get().getDeployId());

      templateSubs.put("task_directory", taskManager.getDirectory(taskId.get()).or("directory missing"));

      Optional<SingularityTask> task = taskManager.getTask(taskId.get());

      if (task.isPresent()) {
        templateSubs.put("slave_hostname", task.get().getOffer().getHostname());
      }
    }

    templateSubs.put("taskScheduled", request.isScheduled());

    templateSubs.put("taskWillRetry", request.getNumRetriesOnFailure().or(0) > 0);
    templateSubs.put("num_retries", request.getNumRetriesOnFailure().or(0));

    if (taskState.isPresent()) {
      templateSubs.put("status", taskState.get().getDisplayName());
      templateSubs.put("taskStateLost", (taskState.get() == ExtendedTaskState.TASK_LOST));
      templateSubs.put("taskStateFailed", (taskState.get() == ExtendedTaskState.TASK_FAILED));
    }

    templateSubs.put("task_updates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateSubs.put("taskEverRan", taskEverRan(taskHistory));

    for (Map.Entry<String, Object> bindingEntry : additionalBindings.entrySet()) {
      templateSubs.put(bindingEntry.getKey(), bindingEntry.getValue());
    }

    return Jade4J.render(template, templateSubs.build());
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271457039\fstmerge_base_7983928523230050530
private String populateGenericEmailTemplate(JadeTemplate template, SingularityRequest request, Optional<SingularityTaskId> taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, Optional<ExtendedTaskState> taskState,
      Map<String, Object> additionalBindings) {
    Builder<String, Object> templateSubs = ImmutableMap.<String, Object> builder();

    templateSubs.put("request_id", request.getId());
    templateSubs.put("singularity_request_link", getSingularityRequestLink(request));

    if (taskId.isPresent()) {
      templateSubs.put("singularity_task_link", getSingularityTaskLink(taskId.get()));
      templateSubs.put("stdout", getTaskLogFile(taskId.get(), "stdout").or(new String[0]));
      templateSubs.put("stderr", getTaskLogFile(taskId.get(), "stderr").or(new String[0]));
      templateSubs.put("duration_left", DurationFormatUtils.formatDurationHMS(TimeUnit.SECONDS.toMillis(configuration.getKillAfterTasksDoNotRunDefaultSeconds())));
      templateSubs.put("task_id", taskId.get().getId());
      templateSubs.put("deploy_id", taskId.get().getDeployId());

      templateSubs.put("task_directory", taskManager.getDirectory(taskId.get()).or("directory missing"));

      Optional<SingularityTask> task = taskManager.getTask(taskId.get());

      if (task.isPresent()) {
        templateSubs.put("slave_hostname", task.get().getOffer().getHostname());
      }
    }

    templateSubs.put("taskScheduled", request.isScheduled());

    templateSubs.put("taskWillRetry", request.getNumRetriesOnFailure().or(0) > 0);
    templateSubs.put("num_retries", request.getNumRetriesOnFailure().or(0));

    if (taskState.isPresent()) {
      templateSubs.put("status", taskState.get().getDisplayName());
      templateSubs.put("taskStateLost", ((taskState.get() == ExtendedTaskState.TASK_LOST) || (taskState.get() == ExtendedTaskState.TASK_LOST_WHILE_DOWN)));
      templateSubs.put("taskStateFailed", (taskState.get() == ExtendedTaskState.TASK_FAILED));
    }

    templateSubs.put("task_updates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateSubs.put("taskEverRan", taskEverRan(taskHistory));

    for (Map.Entry<String, Object> bindingEntry : additionalBindings.entrySet()) {
      templateSubs.put(bindingEntry.getKey(), bindingEntry.getValue());
    }

    return Jade4J.render(template, templateSubs.build());
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271457039\fstmerge_var2_7864884665757060993

File path: C:\download\ssmerge\Singularity\revisions\rev_15099_f877f\rev_rev_left_15099-rev_right_f877f\SingularityService\src\main\java\com\hubspot\singularity\smtp\SingularityMailer.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f877f_e2f10\rev_f877f-e2f10.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c7290_1a043\rev_c7290-1a043.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3912b_98374\rev_3912b-98374.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_8295d-d00b1.revisions
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271626947\fstmerge_var1_7647458075339978360
TASK_STAGING("staging", false)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271626947\fstmerge_base_5044301422000993151
TASK_STAGING("staging", false, false)
=======
TASK_STAGING("staging", false, Optional.of(TaskState.TASK_STAGING))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271626947\fstmerge_var2_4365197364356517400

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627033\fstmerge_var1_9221267880969953017
TASK_STARTING("starting", false)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627033\fstmerge_base_7494025554675353901
TASK_STARTING("starting", false, false)
=======
TASK_STARTING("starting", false, Optional.of(TaskState.TASK_STARTING))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627033\fstmerge_var2_4429998633457020159

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627125\fstmerge_var1_7633645191811861866
TASK_RUNNING("running", false)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627125\fstmerge_base_7370044108118515339
TASK_RUNNING("running", false, false)
=======
TASK_RUNNING("running", false, Optional.of(TaskState.TASK_RUNNING))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627125\fstmerge_var2_7601121915272313173

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627206\fstmerge_var1_433172952521314806
TASK_CLEANING("cleaning", false)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627206\fstmerge_base_1424924647491492943
TASK_CLEANING("cleaning", false, false)
=======
TASK_CLEANING("cleaning", false, Optional.<TaskState> absent())
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627206\fstmerge_var2_6125706878921205230

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627285\fstmerge_var1_596341157787426037
TASK_FINISHED("finished", true)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627285\fstmerge_base_6278407755295647115
TASK_FINISHED("finished", true, false)
=======
TASK_FINISHED("finished", true, Optional.of(TaskState.TASK_FINISHED))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627285\fstmerge_var2_3385669118303190335

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627366\fstmerge_var1_8989921003389356867
TASK_FAILED("failed", true)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627366\fstmerge_base_2466682674933199987
TASK_FAILED("failed", true, true)
=======
TASK_FAILED("failed", true, Optional.of(TaskState.TASK_FAILED))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627366\fstmerge_var2_4977949773262754034

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627446\fstmerge_var1_8384949588051075861
TASK_KILLED("killed", true)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627446\fstmerge_base_387413977984868185
TASK_KILLED("killed", true, false)
=======
TASK_KILLED("killed", true, Optional.of(TaskState.TASK_KILLED))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627446\fstmerge_var2_6213425412478227133

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameEnumConst
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627525\fstmerge_var1_8245249942771843543
TASK_LOST("lost", true)
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627525\fstmerge_base_3045003305780718455
TASK_LOST("lost", true, false)
=======
TASK_LOST("lost", true, Optional.of(TaskState.TASK_LOST))
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627525\fstmerge_var2_8840012078754492953

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public static ExtendedTaskState fromTaskState(TaskState taskState) {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627604\fstmerge_var1_4437633811042689235
    switch (taskState) {
      case TASK_FAILED:
        return TASK_FAILED;
      case TASK_FINISHED:
        return TASK_FINISHED;
      case TASK_KILLED:
        return TASK_KILLED;
      case TASK_STARTING:
        return TASK_STARTING;
      case TASK_STAGING:
        return TASK_STAGING;
      case TASK_LOST:
        return TASK_LOST;
      case TASK_RUNNING:
        return TASK_RUNNING;
    }

    throw new IllegalStateException(String.format("TaskState: %s not found", taskState));
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627604\fstmerge_base_7484806124331954989
    switch (taskState) {
    case TASK_FAILED:
      return TASK_FAILED;
    case TASK_FINISHED:
      return TASK_FINISHED;
    case TASK_KILLED:
      return TASK_KILLED;
    case TASK_STARTING:
      return TASK_STARTING;
    case TASK_STAGING:
      return TASK_STAGING;
    case TASK_LOST:
      return TASK_LOST;
    case TASK_RUNNING:
      return TASK_RUNNING;
    default:
      throw new IllegalStateException(String.format("TaskState: %s not found", taskState));
    }
=======
    ExtendedTaskState extendedTaskState = map.get(taskState);
    Preconditions.checkArgument(extendedTaskState != null);
    return extendedTaskState;
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271627604\fstmerge_var2_6529184100952330279
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityBase\src\main\java\com\hubspot\singularity\ExtendedTaskState.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public Collection<SingularityTaskRequest> getScheduledTasks() {
    final String requestUri = String.format(TASKS_GET_SCHEDULED_FORMAT, getHost(), contextPath);

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271658234\fstmerge_var1_1267806671968273164
    return getCollection(requestUri, "scheduled tasks", TASKS_COLLECTION);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271658234\fstmerge_base_7065911691508294467
    LOG.info(String.format("Getting active tasks - (%s)", requestUri));

    final long start = System.currentTimeMillis();

    Response getResponse = getUri(requestUri);

    checkResponse("get active tasks", getResponse);

    LOG.info(String.format("Successfully got active tasks from Singularity in %sms", System.currentTimeMillis() - start));

    try {
      return objectMapper.readValue(getResponse.getResponseBodyAsStream(), TASKS_COLLECTION);
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }
=======
    LOG.info(String.format("Getting scheduled tasks - (%s)", requestUri));

    final long start = System.currentTimeMillis();

    Response getResponse = getUri(requestUri);

    checkResponse("get scheduled tasks", getResponse);

    LOG.info(String.format("Successfully got scheduled tasks from Singularity in %sms", System.currentTimeMillis() - start));

    try {
      return objectMapper.readValue(getResponse.getResponseBodyAsStream(), TASKS_REQUEST_COLLECTION);
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271658234\fstmerge_var2_1413981020558552679
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityClient\src\main\java\com\hubspot\singularity\client\SingularityClient.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: smallMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271735673\fstmerge_var1_8884510662104302382
public List<TaskStatus> getLastActiveTaskStatuses() {
    return getAsyncChildren(LAST_ACTIVE_TASK_STATUSES_PATH_ROOT, taskStatusTranscoder);
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271735673\fstmerge_base_3317592516316889832
=======
public List<SingularityTaskStatusHolder> getLastActiveTaskStatuses() {
    return getAsyncChildren(LAST_ACTIVE_TASK_STATUSES_PATH_ROOT, taskStatusTranscoder);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271735673\fstmerge_var2_852121071048989674

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\data\TaskManager.java
Conflict type: EditSameMC
Number of Conflicts: 2
Different Spacing: 0
Consecutive Lines: 2
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 2, 0, 0
Conflict body: 
@Override
  public void statusUpdate(SchedulerDriver driver, Protos.TaskStatus status) {
    final String taskId = status.getTaskId().getValue();

    long timestamp = System.currentTimeMillis();

    if (status.hasTimestamp()) {
      timestamp = (long) status.getTimestamp() * 1000;
    }

    LOG.debug("Task {} is now {} ({}) at {} ", taskId, status.getState(), status.getMessage(), timestamp);

    final SingularityTaskId taskIdObj = SingularityTaskId.fromString(taskId);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_var1_3897820964896431613
    final Optional<SingularityTask> maybeActiveTask = taskManager.getActiveTask(taskId);
    final ExtendedTaskState taskState = ExtendedTaskState.fromTaskState(status.getState());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_base_6536440891703076438
    final ExtendedTaskState taskState = ExtendedTaskState.fromTaskState(status.getState());
    final Optional<SingularityTask> maybeActiveTask = taskManager.getActiveTask(taskId);
=======
    final SingularityTaskStatusHolder newTaskStatusHolder = new SingularityTaskStatusHolder(taskIdObj, Optional.of(status), System.currentTimeMillis(), serverId);
    final Optional<SingularityTaskStatusHolder> previousTaskStatusHolder = taskManager.getLastActiveTaskStatus(taskIdObj);
    final ExtendedTaskState taskState = ExtendedTaskState.fromTaskState(status.getState());
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_var2_1759502673461120233

    if (isDuplicateOrIgnorableStatusUpdate(previousTaskStatusHolder, newTaskStatusHolder)) {
      LOG.trace("Ignoring status update {} to {}", taskState, taskIdObj);
      saveNewTaskStatusHolder(taskIdObj, newTaskStatusHolder, taskState);
      return;
    }

    final Optional<SingularityTask> maybeActiveTask = taskManager.getActiveTask(taskId);
    Optional<SingularityPendingDeploy> pendingDeploy = null;

    if (maybeActiveTask.isPresent() && status.getState() == TaskState.TASK_RUNNING) {
      pendingDeploy = deployManager.getPendingDeploy(taskIdObj.getRequestId());

      healthchecker.enqueueHealthcheck(maybeActiveTask.get(), pendingDeploy);
    }

    final SingularityTaskHistoryUpdate taskUpdate = new SingularityTaskHistoryUpdate(taskIdObj, timestamp, taskState, status.hasMessage() ? Optional.of(status.getMessage()) : Optional.<String> absent());

    if (taskState.isDone() && !maybeActiveTask.isPresent() && !taskManager.taskHistoryUpdateExists(taskUpdate)) {
      if (SingularityTaskHistoryUpdate.getCurrentState(taskManager.getTaskHistoryUpdates(taskIdObj)) == SimplifiedTaskState.DONE) {
        LOG.info("Ignoring taskUpdate {} because task {} is already done from a different update", status.getState(), taskIdObj);
        return;
      }
    }

    final SingularityCreateResult taskHistoryUpdateCreateResult = taskManager.saveTaskHistoryUpdate(taskUpdate);

    logSupport.checkDirectory(taskIdObj);

    if (taskState.isDone()) {
      healthchecker.cancelHealthcheck(taskId);
      newTaskChecker.cancelNewTaskCheck(taskId);

      taskManager.deleteKilledRecord(taskIdObj);

      scheduler.handleCompletedTask(maybeActiveTask, taskIdObj, timestamp, taskState, taskHistoryUpdateCreateResult, stateCacheProvider.get());

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_var1_3897820964896431613
      taskManager.deleteLastActiveTaskStatus(taskIdObj);
    } else {
      if (maybeActiveTask.isPresent()) {
        if (pendingDeploy == null) {
          pendingDeploy = deployManager.getPendingDeploy(taskIdObj.getRequestId());
        }

        if (!pendingDeploy.isPresent() || !pendingDeploy.get().getDeployMarker().getDeployId().equals(taskIdObj.getDeployId())) {
          newTaskChecker.enqueueNewTaskCheck(maybeActiveTask.get());
        }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_base_6536440891703076438
      if (!pendingDeploy.isPresent() || !pendingDeploy.get().getDeployMarker().getDeployId().equals(taskIdObj.getDeployId())) {
        newTaskChecker.enqueueNewTaskCheck(maybeActiveTask.get());
=======
      // TODO do we need a new task check if we have hit TASK_RUNNING?
      if (!pendingDeploy.isPresent() || !pendingDeploy.get().getDeployMarker().getDeployId().equals(taskIdObj.getDeployId())) {
        newTaskChecker.enqueueNewTaskCheck(maybeActiveTask.get());
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271759794\fstmerge_var2_1759502673461120233
      }

      taskManager.saveLastActiveTaskStatus(taskIdObj, status);
    }

    saveNewTaskStatusHolder(taskIdObj, newTaskStatusHolder, taskState);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\mesos\SingularityMesosScheduler.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271767137\fstmerge_var1_7930116331473186521
public void startup(MasterInfo masterInfo, SchedulerDriver driver) {
    final long start = System.currentTimeMillis();

    final String uri = mesosClient.getMasterUri(MesosUtils.getMasterHostAndPort(masterInfo));

    LOG.info("Starting up... fetching state data from: " + uri);

    try {
      MesosMasterStateObject state = mesosClient.getMasterState(uri);

      slaveAndRackManager.loadSlavesAndRacksFromMaster(state);

      enqueueHealthAndNewTaskchecks();

      taskReconciliation.reconcileTasks(driver);
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }

    startStartables();

    LOG.info("Finished startup after {}", JavaUtils.duration(start));
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271767137\fstmerge_base_3851468212610717285
=======
public void startup(MasterInfo masterInfo, SchedulerDriver driver) {
    final long start = System.currentTimeMillis();

    final String uri = mesosClient.getMasterUri(masterInfo);

    LOG.info("Starting up... fetching state data from: " + uri);

    try {
      zkDataMigrationRunner.checkMigrations();

      MesosMasterStateObject state = mesosClient.getMasterState(uri);

      slaveAndRackManager.loadSlavesAndRacksFromMaster(state);

      enqueueHealthAndNewTaskchecks();

      taskReconciliation.startReconciliation(driver);
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }

    startStartables();

    LOG.info("Finished startup after {}", JavaUtils.duration(start));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271767137\fstmerge_var2_8779725017101796118

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\mesos\SingularityStartup.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: renamedMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271774329\fstmerge_var1_1932832974395210357
@Inject
  public RequestResource(SingularityValidator validator, DeployManager deployManager, RequestManager requestManager, SingularityMailer mailer) {
    super(requestManager, deployManager);

    this.validator = validator;
    this.mailer = mailer;
    this.deployManager = deployManager;
    this.requestManager = requestManager;
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271774329\fstmerge_base_8466466843158129681
=======
@Inject
  public RequestResource(SingularityValidator validator, DeployManager deployManager, RequestManager requestManager, SingularityMailer mailer) {
    super(requestManager, deployManager, validator);

    this.validator = validator;

    this.mailer = mailer;
    this.deployManager = deployManager;
    this.requestManager = requestManager;
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271774329\fstmerge_var2_7194335073639861768

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\resources\RequestResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Inject
  public SingularityMailer(SingularityConfiguration configuration, Optional<SMTPConfiguration> maybeSmtpConfiguration, SingularityCloser closer, TaskManager taskManager, AsyncHttpClient asyncHttpClient,
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809718\fstmerge_var1_7104739041384341497
      ObjectMapper objectMapper, @Named(SingularityServiceModule.TASK_COMPLETED_TEMPLATE) JadeTemplate taskCompletedTemplate, @Named(SingularityServiceModule.REQUEST_IN_COOLDOWN_TEMPLATE) JadeTemplate requestInCooldownTemplate,
      @Named(SingularityServiceModule.REQUEST_MODIFIED_TEMPLATE) JadeTemplate requestModifiedTemplate, SingularityExceptionNotifier exceptionNotifier) {
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809718\fstmerge_base_7303414334456196021
      ObjectMapper objectMapper, @Named(SingularityServiceModule.TASK_FAILED_TEMPLATE) JadeTemplate taskFailedTemplate, @Named(SingularityServiceModule.REQUEST_IN_COOLDOWN_TEMPLATE) JadeTemplate requestInCooldownTemplate,
      @Named(SingularityServiceModule.TASK_NOT_RUNNING_WARNING_TEMPLATE) JadeTemplate taskNotRunningWarningTemplate, SingularityExceptionNotifier exceptionNotifier) {
=======
      ObjectMapper objectMapper, @Named(SingularityServiceModule.TASK_COMPLETED_TEMPLATE) JadeTemplate taskCompletedTemplate, @Named(SingularityServiceModule.REQUEST_IN_COOLDOWN_TEMPLATE) JadeTemplate requestInCooldownTemplate,
      @Named(SingularityServiceModule.REQUEST_MODIFIED_TEMPLATE) JadeTemplate requestModifiedTemplate, SingularityExceptionNotifier exceptionNotifier) {
    super(closer);

>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809718\fstmerge_var2_8416720167168820316
    this.maybeSmtpConfiguration = maybeSmtpConfiguration;
    this.configuration = configuration;
    this.uiHostnameAndPath = configuration.getUiConfiguration().getBaseUrl();
    this.taskManager = taskManager;
    this.asyncHttpClient = asyncHttpClient;
    this.objectMapper = objectMapper;
    this.adminJoiner = Joiner.on(", ").skipNulls();

    if (maybeSmtpConfiguration.isPresent()) {
      mailSenderExecutorService = Optional.of(
          new ThreadPoolExecutor(maybeSmtpConfiguration.get().getMailThreads(), maybeSmtpConfiguration.get().getMailMaxThreads(), 0L, TimeUnit.MILLISECONDS,
              new LinkedBlockingQueue<Runnable>(),
              new ThreadFactoryBuilder().setNameFormat("SingularityMailer-%d")
              .build()));
    } else {
      mailSenderExecutorService = Optional.absent();
    }

    this.requestModifiedTemplate = requestModifiedTemplate;
    this.taskCompletedTemplate = taskCompletedTemplate;
    this.requestInCooldownTemplate = requestInCooldownTemplate;

    this.exceptionNotifier = exceptionNotifier;
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\smtp\SingularityMailer.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809810\fstmerge_var1_1441149289598373482
private void populateTaskEmailProperties(Builder<String, Object> templateProperties, SingularityTaskId taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, ExtendedTaskState taskState) {
    templateProperties.put("singularityTaskLink", getSingularityTaskLink(taskId));
    templateProperties.put("stdout", getTaskLogFile(taskId, "stdout").or(new String[0]));
    templateProperties.put("stderr", getTaskLogFile(taskId, "stderr").or(new String[0]));
    templateProperties.put("taskId", taskId.getId());
    templateProperties.put("deployId", taskId.getDeployId());

    templateProperties.put("taskDirectory", taskManager.getDirectory(taskId).or("directory missing"));

    Optional<SingularityTask> task = taskManager.getTask(taskId);

    if (task.isPresent()) {
      templateProperties.put("slaveHostname", task.get().getOffer().getHostname());
    }

    boolean needsBeenPrefix = (taskState == ExtendedTaskState.TASK_LOST) || (taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("status", String.format("%s%s", needsBeenPrefix ? "been " : "", taskState.getDisplayName()));
    templateProperties.put("taskStateLost", taskState == ExtendedTaskState.TASK_LOST);
    templateProperties.put("taskStateFailed", taskState == ExtendedTaskState.TASK_FAILED);
    templateProperties.put("taskStateFinished", taskState == ExtendedTaskState.TASK_FINISHED);
    templateProperties.put("taskStateKilled", taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("taskUpdates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateProperties.put("taskRan", didTaskRun(taskHistory));
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809810\fstmerge_base_3430850992057322595
=======
private void populateTaskEmailProperties(Builder<String, Object> templateProperties, SingularityTaskId taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, ExtendedTaskState taskState) {
    templateProperties.put("singularityTaskLink", getSingularityTaskLink(taskId));
    templateProperties.put("stdout", getTaskLogFile(taskId, "stdout").or(new String[0]));
    templateProperties.put("stderr", getTaskLogFile(taskId, "stderr").or(new String[0]));
    templateProperties.put("taskId", taskId.getId());
    templateProperties.put("deployId", taskId.getDeployId());

    templateProperties.put("taskDirectory", taskManager.getDirectory(taskId).or("directory missing"));

    Optional<SingularityTask> task = taskManager.getTask(taskId);

    if (task.isPresent()) {
      templateProperties.put("slaveHostname", task.get().getOffer().getHostname());
    }

    boolean needsBeenPrefix = taskState == ExtendedTaskState.TASK_LOST || taskState == ExtendedTaskState.TASK_KILLED;

    templateProperties.put("status", String.format("%s%s", needsBeenPrefix ? "been " : "", taskState.getDisplayName()));
    templateProperties.put("taskStateLost", taskState == ExtendedTaskState.TASK_LOST);
    templateProperties.put("taskStateFailed", taskState == ExtendedTaskState.TASK_FAILED);
    templateProperties.put("taskStateFinished", taskState == ExtendedTaskState.TASK_FINISHED);
    templateProperties.put("taskStateKilled", taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("taskUpdates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateProperties.put("taskRan", didTaskRun(taskHistory));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513271809810\fstmerge_var2_2308691087268505639

File path: C:\download\ssmerge\Singularity\revisions\rev_8295d_d00b1\rev_rev_left_8295d-rev_right_d00b1\SingularityService\src\main\java\com\hubspot\singularity\smtp\SingularityMailer.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_57273_4b630\rev_57273-4b630.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_d85f7_22a2b\rev_d85f7-22a2b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cbf2b_c0e27\rev_cbf2b-c0e27.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f14af_651bc\rev_f14af-651bc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_64826_3cb58\rev_64826-3cb58.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7d6fc_ceffd\rev_7d6fc-ceffd.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ceffd_9bb61\rev_ceffd-9bb61.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_aa164_219c9\rev_aa164-219c9.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public static void main(String... args) {
    final long start = System.currentTimeMillis();

    try {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272436029\fstmerge_var1_8624697044857752928
      final Injector injector = Guice.createInjector(new SingularityRunnerBaseModule(new SingularityS3ConfigurationLoader(), new SingularityExecutorConfigurationLoader(), new SingularityExecutorCleanupConfigurationLoader()), new SingularityExecutorModule(), new SingularityClientModule());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272436029\fstmerge_base_8994462487816111985
      final Injector injector = Guice.createInjector(new SingularityRunnerBaseModule(new SingularityS3ConfigurationLoader(), new SingularityExecutorConfigurationLoader(), new SingularityExecutorCleanupConfigurationLoader()), new SingularityExecutorModule());
=======
      final Injector injector = Guice.createInjector(Stage.PRODUCTION, new SingularityRunnerBaseModule(new SingularityS3ConfigurationLoader(), new SingularityExecutorConfigurationLoader(), new SingularityExecutorCleanupConfigurationLoader()), new SingularityExecutorModule());

>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272436029\fstmerge_var2_718374200295917575
      final SingularityExecutorCleanupRunner runner = injector.getInstance(SingularityExecutorCleanupRunner.class);

      LOG.info("Starting cleanup");

      final SingularityExecutorCleanupStatistics statistics = runner.cleanup();

      LOG.info("Finished with {} after {}", statistics, JavaUtils.duration(start));

      System.exit(0);
    } catch (Throwable t) {
      LOG.error("Finished after {} with error", JavaUtils.duration(start), t);
      System.exit(1);
    }
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_aa164_219c9\rev_rev_left_aa164-rev_right_219c9\SingularityExecutorCleanup\src\main\java\com\hubspot\singularity\executor\cleanup\SingularityExecutorCleanupRunner.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272545647\fstmerge_var1_8911184325130238092
@Inject
  public SingularityNewTaskChecker(SingularityConfiguration configuration, LoadBalancerClient lbClient, TaskManager taskManager, SingularityCloser closer, SingularityExceptionNotifier exceptionNotifier) {
    super(closer);

    this.configuration = configuration;
    this.taskManager = taskManager;
    this.lbClient = lbClient;

    taskIdToCheck = Maps.newConcurrentMap();
    killAfterUnhealthyMillis = TimeUnit.SECONDS.toMillis(configuration.getKillAfterTasksDoNotRunDefaultSeconds());

    executorService = Executors.newScheduledThreadPool(configuration.getCheckNewTasksScheduledThreads(), new ThreadFactoryBuilder().setNameFormat("SingularityNewTaskChecker-%d").build());

    this.exceptionNotifier = exceptionNotifier;
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272545647\fstmerge_base_3977678235542614878
@Inject
  public SingularityNewTaskChecker(SingularityConfiguration configuration, LoadBalancerClient lbClient, TaskManager taskManager, SingularityCloser closer, SingularityExceptionNotifier exceptionNotifier) {
    super(closer);

    this.configuration = configuration;
    this.taskManager = taskManager;
    this.lbClient = lbClient;

    this.taskIdToCheck = Maps.newConcurrentMap();
    this.killAfterUnhealthyMillis = TimeUnit.SECONDS.toMillis(configuration.getKillAfterTasksDoNotRunDefaultSeconds());

    this.executorService = Executors.newScheduledThreadPool(configuration.getCheckNewTasksScheduledThreads(), new ThreadFactoryBuilder().setNameFormat("SingularityNewTaskChecker-%d").build());

    this.exceptionNotifier = exceptionNotifier;
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272545647\fstmerge_var2_5102690325488906604

File path: C:\download\ssmerge\Singularity\revisions\rev_aa164_219c9\rev_rev_left_aa164-rev_right_219c9\SingularityService\src\main\java\com\hubspot\singularity\scheduler\SingularityNewTaskChecker.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272469644\fstmerge_var1_8940406917830164623
  public void initialize(Bootstrap<SingularityConfiguration> bootstrap) {
    GuiceBundle<SingularityConfiguration> guiceBundle = GuiceBundle.<SingularityConfiguration>newBuilder()
        .addModule(new SingularityServiceModule())
        .addModule(new SingularityMesosClientModule())
        .enableAutoConfig(getClass().getPackage().getName())
        .setConfigClass(SingularityConfiguration.class)
        .build(Stage.DEVELOPMENT);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272469644\fstmerge_base_5657086655083959458
  public void initialize(Bootstrap<SingularityConfiguration> bootstrap) {
    GuiceBundle<SingularityConfiguration> guiceBundle = GuiceBundle.<SingularityConfiguration>newBuilder()
        .addModule(new SingularityServiceModule())
        .enableAutoConfig(getClass().getPackage().getName())
        .setConfigClass(SingularityConfiguration.class)
        .build(Stage.DEVELOPMENT);
=======
  public void initialize(final Bootstrap<SingularityConfiguration> bootstrap) {
    final GuiceBundle<SingularityConfiguration> guiceBundle = GuiceBundle.defaultBuilder(SingularityConfiguration.class)
        .modules(new SingularityServiceModule())
        .build();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272469644\fstmerge_var2_5824540273372523345
    bootstrap.addBundle(guiceBundle);

    bootstrap.addBundle(new CorsBundle());
    bootstrap.addBundle(new ViewBundle());
    bootstrap.addBundle(new AssetsBundle("/static/static/", "/static/"));
    bootstrap.addBundle(new MigrationsBundle<SingularityConfiguration>() {
      @Override
      public DataSourceFactory getDataSourceFactory(final SingularityConfiguration configuration) {
        return configuration.getDatabaseConfiguration().get();
      }
    });

    bootstrap.getObjectMapper().registerModule(new ProtobufModule());
    bootstrap.getObjectMapper().setSerializationInclusion(Include.NON_NULL);
    bootstrap.getObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_aa164_219c9\rev_rev_left_aa164-rev_right_219c9\SingularityService\src\main\java\com\hubspot\singularity\SingularityService.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272472882\fstmerge_var1_5704217681616681319
private static ObjectMapper createObjectMapper() {
    return Jackson.newObjectMapper()
        .setSerializationInclusion(Include.NON_NULL)
        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
        .registerModule(new ProtobufModule())
        .registerModule(new GuavaModule());
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272472882\fstmerge_base_4654580547770759819
private static ObjectMapper createObjectMapper() {
    return Jackson.newObjectMapper()
        .setSerializationInclusion(Include.NON_NULL)
        .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)
        .registerModule(new ProtobufModule());
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272472882\fstmerge_var2_2565970111267469872

File path: C:\download\ssmerge\Singularity\revisions\rev_aa164_219c9\rev_rev_left_aa164-rev_right_219c9\SingularityService\src\main\java\com\hubspot\singularity\SingularityServiceModule.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cfda2_e9beb\rev_cfda2-e9beb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_23e89_90e14\rev_23e89-90e14.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public void run(final T configuration, final Environment environment) throws Exception {

    for (ConfigurationAwareModule<T> configurationAwareModule : configurationAwareModules) {
      configurationAwareModule.setConfiguration(configuration);
    }

    final DropwizardModule dropwizardModule = new DropwizardModule();

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272658829\fstmerge_var1_7417669949569091074
    final Injector injector =
        Guice.createInjector(guiceStage,
            ImmutableSet.<Module>builder()
            .addAll(guiceModules)
            .addAll(configurationAwareModules)
            .add(new GuiceEnforcerModule())
            .add(new JerseyServletModule())
            .add(dropwizardModule).add(new Module() {
              @Override
              public void configure(final Binder binder) {
                binder.bind(Environment.class).toInstance(environment);
                binder.bind(configClass).toInstance(configuration);

                binder.bind(GuiceContainer.class).to(DropwizardGuiceContainer.class).in(Scopes.SINGLETON);

                binder.bind(ServerProvider.class).toInstance(new ServerProvider(environment));
                binder.bind(new TypeLiteral<Function<ResourceConfig, ServletContainer>>() {}).annotatedWith(GUICE_BUNDLE_NAMED).to(GuiceContainerReplacer.class).in(Scopes.SINGLETON);
              }
            }).build());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272658829\fstmerge_base_868395718555850033
    final Injector injector = Guice.createInjector(guiceStage,
        ImmutableSet.<Module> builder()
        .addAll(guiceModules)
        .addAll(configurationAwareModules)
        .add(new GuiceEnforcerModule())
        .add(new JerseyServletModule())
        .add(dropwizardModule)
        .add(new Module() {
          @Override
          public void configure(final Binder binder) {
            binder.bind(Environment.class).toInstance(environment);
            binder.bind(configClass).toInstance(configuration);

            binder.bind(GuiceContainer.class).to(DropwizardGuiceContainer.class).in(Scopes.SINGLETON);

            binder.bind(new TypeLiteral<Function<ResourceConfig, ServletContainer>>() {
            }).annotatedWith(GUICE_BUNDLE_NAMED).to(GuiceContainerReplacer.class).in(Scopes.SINGLETON);
          }
        }).build());
=======
    final Injector injector =
        Guice.createInjector(guiceStage,
            ImmutableSet.<Module>builder()
            .addAll(guiceModules)
            .addAll(configurationAwareModules)
            .add(new GuiceEnforcerModule())
            .add(new JerseyServletModule())
            .add(dropwizardModule).add(new Module() {
              @Override
              public void configure(final Binder binder) {
                binder.bind(Environment.class).toInstance(environment);
                binder.bind(configClass).toInstance(configuration);

                binder.bind(GuiceContainer.class).to(DropwizardGuiceContainer.class).in(Scopes.SINGLETON);

                binder.bind(new TypeLiteral<Function<ResourceConfig, ServletContainer>>() {}).annotatedWith(GUICE_BUNDLE_NAMED).to(GuiceContainerReplacer.class).in(Scopes.SINGLETON);
              }
            }).build());
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272658829\fstmerge_var2_5995649759543853010

    injector.injectMembers(this);
    checkState(replacer != null, "No guice container replacer was injected!");

    for (Managed managed : dropwizardModule.getManaged()) {
      LOG.info("Added guice injected managed Object: {}", managed.getClass().getName());
      environment.lifecycle().manage(managed);
    }

    for (Task task : dropwizardModule.getTasks()) {
      environment.admin().addTask(task);
      LOG.info("Added guice injected Task: {}", task.getClass().getName());
    }

    for (HealthCheck healthcheck : dropwizardModule.getHealthChecks()) {
      environment.healthChecks().register(healthcheck.getClass().getSimpleName(), healthcheck);
      LOG.info("Added guice injected health check: {}", healthcheck.getClass().getName());
    }

    for (ServerLifecycleListener serverLifecycleListener : dropwizardModule.getServerLifecycleListeners()) {
      environment.lifecycle().addServerLifecycleListener(serverLifecycleListener);
    }

    environment.jersey().replace(replacer);
    environment.servlets().addFilter("Guice Filter", GuiceFilter.class).addMappingForUrlPatterns(null, false, environment.getApplicationContext().getContextPath() + "*");
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_23e89_90e14\rev_rev_left_23e89-rev_right_90e14\SingularityService\src\main\java\com\hubspot\singularity\guice\GuiceBundle.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public void start() {
    LOG.info("Starting a {} with a {} delay", getClass().getSimpleName(), JavaUtils.durationFromMillis(pollTimeUnit.toMillis(pollDelay)));

    executorService.scheduleWithFixedDelay(new Runnable() {

      @Override
      public void run() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272671424\fstmerge_var1_6391580440465242918
        runActionIfLeader();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272671424\fstmerge_base_3470859708589056257
        if (leaderLatch.hasLeadership()) {
          if (schedulerLockType == SchedulerLockType.LOCK) {
            mesosScheduler.lock();
          }

          try {
            runActionOnPoll(mesosScheduler);
          } catch (Throwable t) {
            LOG.error("Caught an exception while running {} -- aborting", getClass().getSimpleName(), t);
            exceptionNotifier.notify(t);
            abort.abort();
          } finally {
            if (schedulerLockType == SchedulerLockType.LOCK) {
              mesosScheduler.release();
            }
          }
        }
=======
        runActionIfLeaderAndMesosIsRunning();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272671424\fstmerge_var2_2910028392790506812
      }

    }, pollDelay, pollDelay, pollTimeUnit);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_23e89_90e14\rev_rev_left_23e89-rev_right_90e14\SingularityService\src\main\java\com\hubspot\singularity\scheduler\SingularityLeaderOnlyPoller.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private void exit() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647753\fstmerge_var1_3578072157299160899
    try {
      serverProvider.get().stop();
    } catch (Throwable t) {
      LOG.error("Failed to call stop() on server", t);
    } finally {
      System.exit(1);
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647753\fstmerge_base_2464632079354066834
    // TODO - this one is terrifying. Even though it is fine that singularity wants to terminate itself, it should do so through the dw framework to
    // ensure that the managed objects are shut down correctly.
    System.exit(1);
=======
    Optional<Server> server = serverProvider.get();
    if (server.isPresent()) {
      try {
        server.get().stop();
      } catch (Exception e) {
        LOG.warn("While aborting server", e);
      } finally {
        System.exit(1);
      }
    } else {
      LOG.warn("SingularityAbort called before server has fully initialized!");
      System.exit(1); // Use the hammer.
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647753\fstmerge_var2_3562304306209995245
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_23e89_90e14\rev_rev_left_23e89-rev_right_90e14\SingularityService\src\main\java\com\hubspot\singularity\SingularityAbort.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: copiedMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647845\fstmerge_var1_2729847748241151040
private void sendAbortNotification(AbortReason abortReason) {
    final String message = String.format("Singularity on %s is aborting due to %s", hostAndPort.getHostText());

    sendAbortMail(message);

    exceptionNotifier.notify(message);
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647845\fstmerge_base_7808771868812688669
=======
private void sendAbortNotification(AbortReason abortReason) {
    final String message = String.format("Singularity on %s is aborting due to %s", hostAndPort.getHostText(), abortReason);

    sendAbortMail(message);

    exceptionNotifier.notify(message);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513272647845\fstmerge_var2_7897724020904879775

File path: C:\download\ssmerge\Singularity\revisions\rev_23e89_90e14\rev_rev_left_23e89-rev_right_90e14\SingularityService\src\main\java\com\hubspot\singularity\SingularityAbort.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_712d5_1710f\rev_712d5-1710f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_909a9_dc5bf\rev_909a9-dc5bf.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_712d5_d7d71\rev_712d5-d7d71.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ad0db_82071\rev_ad0db-82071.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_313f2_1331d\rev_313f2-1331d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_5c6d8_9e019\rev_5c6d8-9e019.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fded6_1543d\rev_fded6-1543d.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273599216\fstmerge_var1_4788497554723778855
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273599216\fstmerge_base_8223113244902515412
@Inject
  public SingularityClient(@Named(SingularityClientModule.CONTEXT_PATH) String contextPath, @Named(SingularityClientModule.HTTP_CLIENT_NAME) AsyncHttpClient httpClient, @Named(SingularityClientModule.OBJECT_MAPPER_NAME) ObjectMapper objectMapper, @Named(SingularityClientModule.HOSTS_PROPERTY_NAME) String hosts) {
    this.httpClient = httpClient;
    this.objectMapper = objectMapper;
    this.contextPath = contextPath;

    this.hosts = hosts.split(",");
    this.random = new Random();
  }
=======
@Inject
  @Deprecated
  public SingularityClient(@Named(SingularityClientModule.CONTEXT_PATH) String contextPath, @Named(SingularityClientModule.HTTP_CLIENT_NAME) AsyncHttpClient httpClient, @Named(SingularityClientModule.OBJECT_MAPPER_NAME) ObjectMapper objectMapper, @Named(SingularityClientModule.HOSTS_PROPERTY_NAME) String hosts) {
    this(contextPath, httpClient, objectMapper, Arrays.asList(hosts.split(",")));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273599216\fstmerge_var2_6229686177354710370

File path: C:\download\ssmerge\Singularity\revisions\rev_fded6_1543d\rev_rev_left_fded6-rev_right_1543d\SingularityClient\src\main\java\com\hubspot\singularity\client\SingularityClient.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  protected void configure() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273614168\fstmerge_var1_8376611536546684278
    ObjectMapper objectMapper = JavaUtils.newObjectMapper();
    HttpClient httpClient = new NingHttpClient(HttpConfig.newBuilder().setObjectMapper(objectMapper).build());

    bind(HttpClient.class).annotatedWith(Names.named(HTTP_CLIENT_NAME)).toInstance(httpClient);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273614168\fstmerge_base_4136212671370517574
    bind(AsyncHttpClient.class).annotatedWith(Names.named(HTTP_CLIENT_NAME)).toInstance(new AsyncHttpClient());
=======
    bind(SingularityClient.class).toProvider(SingularityClientProvider.class).in(Scopes.SINGLETON);
    bind(AsyncHttpClient.class).annotatedWith(Names.named(HTTP_CLIENT_NAME)).toInstance(new AsyncHttpClient());

    if (hosts != null) {
      bindHosts(binder()).toInstance(hosts);
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513273614168\fstmerge_var2_3300273370078452446
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_fded6_1543d\rev_rev_left_fded6-rev_right_1543d\SingularityClient\src\main\java\com\hubspot\singularity\client\SingularityClientModule.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9e019_fded6\rev_9e019-fded6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fded6_2fcea\rev_fded6-2fcea.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8a9cc_39d51\rev_8a9cc-39d51.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3850f_8b6ce\rev_3850f-8b6ce.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b2cee_3fe5b\rev_b2cee-3fe5b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2e6cd_3dc98\rev_2e6cd-3dc98.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1a052_7d772\rev_1a052-7d772.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b1644_79981\rev_b1644-79981.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_79981_3be8f\rev_79981-3be8f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a58dd_bab1e\rev_a58dd-bab1e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_bab1e_b1644\rev_bab1e-b1644.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_db749_6096e\rev_db749-6096e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_83423_d29a7\rev_83423-d29a7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ee781_316a1\rev_ee781-316a1.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_63b5d_8a7e1\rev_63b5d-8a7e1.revisions
Conflict type: EditSameMC
Number of Conflicts: 3
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 3, 0, 0
Conflict body: 
@GET
  @Path("/{taskId}/browse")
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var1_2589258381220106365
  public SingularitySandbox browse(@PathParam("taskId") String taskId, @QueryParam("path") String qPath) {
    final String path = getDefaultPath(taskId, qPath);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_base_3259664702349314669
  public Collection<MesosFileObject> browse(@PathParam("taskId") String taskId, @QueryParam("path") String qPath) {
    final String path = getDefaultPath(taskId, qPath);
=======
  public SingularitySandbox browse(@PathParam("taskId") String taskId, @QueryParam("path") String path) {
    final String currentDirectory = getCurrentDirectory(taskId, path);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var2_4714762004941911654
    final SingularityTaskHistory history = checkHistory(taskId);

    final String slaveHostname = history.getTask().getOffer().getHostname();
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var1_2589258381220106365
    final String rootPath = history.getDirectory().get();
    final String fullPath = new File(rootPath, path).toString();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_base_3259664702349314669
    final String fullPath = new File(history.getDirectory().get(), path).toString();
=======
    final String pathToRoot = history.getDirectory().get();
    final String fullPath = new File(pathToRoot, currentDirectory).toString();

    final int substringTruncationLength = currentDirectory.length() == 0 ? pathToRoot.length() + 1 : pathToRoot.length() + currentDirectory.length() + 2;
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var2_4714762004941911654

    try {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var1_2589258381220106365
      Collection<MesosFileObject> mesosFiles = sandboxManager.browse(slaveHostname, fullPath);
      List<MesosFileObject> mesosFilesRelativePaths = Lists.newArrayList(Iterables.transform(mesosFiles, new Function<MesosFileObject, MesosFileObject>() {

        @Override
        public MesosFileObject apply(MesosFileObject input) {
          return new MesosFileObject(input.getGid(), input.getMode(), input.getMtime(), input.getNlink(), input.getPath().substring(rootPath.length() + 1), input.getSize(), input.getUid());
        }

      }));

      return new SingularitySandbox(mesosFilesRelativePaths, rootPath);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_base_3259664702349314669
      return sandboxManager.browse(slaveHostname, fullPath);
=======
      Collection<MesosFileObject> mesosFiles = sandboxManager.browse(slaveHostname, fullPath);
      List<SingularitySandboxFile> sandboxFiles = Lists.newArrayList(Iterables.transform(mesosFiles, new Function<MesosFileObject, SingularitySandboxFile>() {

        @Override
        public SingularitySandboxFile apply(MesosFileObject input) {
          return new SingularitySandboxFile(input.getPath().substring(substringTruncationLength), input.getMtime(), input.getSize(), input.getMode());
        }

      }));

      return new SingularitySandbox(sandboxFiles, pathToRoot, currentDirectory, slaveHostname);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513274689044\fstmerge_var2_4714762004941911654
    } catch (SlaveNotFoundException snfe) {
      throw WebExceptions.notFound("Slave @ %s was not found, it is probably offline", slaveHostname);
    }
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_63b5d_8a7e1\rev_rev_left_63b5d-rev_right_8a7e1\SingularityService\src\main\java\com\hubspot\singularity\resources\SandboxResource.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c8ded_423ee\rev_c8ded-423ee.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_0eb42_19232\rev_0eb42-19232.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c7740_d4601\rev_c7740-d4601.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cb852_c5259\rev_cb852-c5259.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_58042_e4313\rev_58042-e4313.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_53ba6_e4313\rev_53ba6-e4313.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_90ba1_c5259\rev_90ba1-c5259.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fda0a_c7f2e\rev_fda0a-c7f2e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_17b08_42c57\rev_17b08-42c57.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f736a_32c35\rev_f736a-32c35.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_726ad_80332\rev_726ad-80332.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_49cd9_84b3a\rev_49cd9-84b3a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_58c1d_3a87d\rev_58c1d-3a87d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a600c_c0612\rev_a600c-c0612.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c68c0_78b14\rev_c68c0-78b14.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cca97_18007\rev_cca97-18007.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_18007_70603\rev_18007-70603.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_40593_8baeb\rev_40593-8baeb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_976d2_87861\rev_976d2-87861.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_aa2fe_a721d\rev_aa2fe-a721d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_46e77_aa2fe\rev_46e77-aa2fe.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1106b_31ae8\rev_1106b-31ae8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_55999_457ed\rev_55999-457ed.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1a595_5902c\rev_1a595-5902c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b8ac5_819a2\rev_b8ac5-819a2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f6a95_c638d\rev_f6a95-c638d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7a8d7_f789a\rev_7a8d7-f789a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_78459_f789a\rev_78459-f789a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9e15b_75db4\rev_9e15b-75db4.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f789a_bc635\rev_f789a-bc635.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_24a08_f3016\rev_24a08-f3016.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_66e8b_79f38\rev_66e8b-79f38.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f35c6_089a3\rev_f35c6-089a3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b9d43_d0a8a\rev_b9d43-d0a8a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ba427_c1098\rev_ba427-c1098.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c1098_1eebb\rev_c1098-1eebb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_5e601_3099c\rev_5e601-3099c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3099c_62438\rev_3099c-62438.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_23827_7707c\rev_23827-7707c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c7eb8_43b5d\rev_c7eb8-43b5d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4ff41_cac3c\rev_4ff41-cac3c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8bf0d_089a3\rev_8bf0d-089a3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e84cd_63e80\rev_e84cd-63e80.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_eb9ff_819a2\rev_eb9ff-819a2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_553df_d0a8a\rev_553df-d0a8a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_d198d_eff6b\rev_d198d-eff6b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_d067e_f8f27\rev_d067e-f8f27.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276416075\fstmerge_var1_7490138076105794514
@Override
  public void initialize(final Bootstrap<SingularityConfiguration> bootstrap) {
    final GuiceBundle<SingularityConfiguration> guiceBundle = GuiceBundle.defaultBuilder(SingularityConfiguration.class)
        .modules(new SingularityServiceModule())
        .build();
    bootstrap.addBundle(guiceBundle);

    bootstrap.addBundle(new CorsBundle());
    bootstrap.addBundle(new ViewBundle());
    bootstrap.addBundle(new AssetsBundle("/static/static/", "/static/"));
    bootstrap.addBundle(new AssetsBundle("/static/api-docs/", "/api-docs/", "index.html", "api-docs"));
    bootstrap.addBundle(new MigrationsBundle<SingularityConfiguration>() {
      @Override
      public DataSourceFactory getDataSourceFactory(final SingularityConfiguration configuration) {
        return configuration.getDatabaseConfiguration().get();
      }
    });

    bootstrap.getObjectMapper().registerModule(new ProtobufModule());
    bootstrap.getObjectMapper().registerModule(new GuavaModule());
    bootstrap.getObjectMapper().setSerializationInclusion(Include.NON_NULL);
    bootstrap.getObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276416075\fstmerge_base_4562730773760565421
@Override
  public void initialize(final Bootstrap<SingularityConfiguration> bootstrap) {
    final GuiceBundle<SingularityConfiguration> guiceBundle = GuiceBundle.defaultBuilder(SingularityConfiguration.class)
        .modules(new SingularityServiceModule())
        .build();
    bootstrap.addBundle(guiceBundle);

    bootstrap.addBundle(new AcceptLanguageFilterBundle());
    bootstrap.addBundle(new CorsBundle());
    bootstrap.addBundle(new ViewBundle());
    bootstrap.addBundle(new AssetsBundle("/static/static/", "/static/"));
    bootstrap.addBundle(new AssetsBundle("/static/api-docs/", "/api-docs/", "index.html", "api-docs"));
    bootstrap.addBundle(new MigrationsBundle<SingularityConfiguration>() {
      @Override
      public DataSourceFactory getDataSourceFactory(final SingularityConfiguration configuration) {
        return configuration.getDatabaseConfiguration().get();
      }
    });

    bootstrap.getObjectMapper().registerModule(new ProtobufModule());
    bootstrap.getObjectMapper().registerModule(new GuavaModule());
    bootstrap.getObjectMapper().setSerializationInclusion(Include.NON_NULL);
    bootstrap.getObjectMapper().configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276416075\fstmerge_var2_3708338808724337918

File path: C:\download\ssmerge\Singularity\revisions\rev_d067e_f8f27\rev_rev_left_d067e-rev_right_f8f27\SingularityService\src\main\java\com\hubspot\singularity\SingularityService.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_eeacb_eb5dc\rev_eeacb-eb5dc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a292f_4c960\rev_a292f-4c960.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8e4a9_b3fb4\rev_8e4a9-b3fb4.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_79abf_dea84\rev_79abf-dea84.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a7715_25e39\rev_a7715-25e39.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_51665_55b86\rev_51665-55b86.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f8f27_c63a8\rev_f8f27-c63a8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b32a0_22b9d\rev_b32a0-22b9d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4ebd8_3c843\rev_4ebd8-3c843.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_77740_f07b0\rev_77740-f07b0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e6a93_1e7ed\rev_e6a93-1e7ed.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9c072_d6610\rev_9c072-d6610.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e97fd_033f6\rev_e97fd-033f6.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948515\fstmerge_var1_6689798820985356282
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948515\fstmerge_base_4207177308488917685
@Override
  public T transcode(byte[] data) throws SingularityJsonException {
    String string = JavaUtils.toString(data);
    return fromString(string);
  }
=======
@Override
  public T transcode(byte[] data) throws SingularityJsonException {
    return fromString(new String(data, UTF_8));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948515\fstmerge_var2_6919613481610181879

File path: C:\download\ssmerge\Singularity\revisions\rev_e97fd_033f6\rev_rev_left_e97fd-rev_right_033f6\SingularityService\src\main\java\com\hubspot\singularity\data\transcoders\EnumTranscoder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948984\fstmerge_var1_1925958610966517952
@Override
  public byte[] toBytes(@Nullable T object) throws SingularityTranscoderException {
    return object == null ? EMPTY_BYTES : object.name().getBytes(UTF_8);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948984\fstmerge_base_3461299103427459097
@Override
  public byte[] toBytes(T object) throws SingularityJsonException {
    return JavaUtils.toBytes(object.name());
=======
@Override
  public byte[] toBytes(T object) throws SingularityJsonException {
    return object.name().getBytes(UTF_8);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276948984\fstmerge_var2_5029672252185992776
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_e97fd_033f6\rev_rev_left_e97fd-rev_right_033f6\SingularityService\src\main\java\com\hubspot\singularity\data\transcoders\EnumTranscoder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276951956\fstmerge_var1_1375415790277425691
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276951956\fstmerge_base_1492254926144740138
@Override
  public String transcode(byte[] data) {
    return JavaUtils.toString(data);
  }
=======
@Override
  public String transcode(byte[] data) {
    return new String(data, UTF_8);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276951956\fstmerge_var2_8210713203834956084

File path: C:\download\ssmerge\Singularity\revisions\rev_e97fd_033f6\rev_rev_left_e97fd-rev_right_033f6\SingularityService\src\main\java\com\hubspot\singularity\data\transcoders\StringTranscoder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276952034\fstmerge_var1_5266708954162707724
@Override
  public byte[] toBytes(@Nullable String object) {
    return object == null ? EMPTY_BYTES : object.getBytes(UTF_8);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276952034\fstmerge_base_2320920007906411378
@Override
  public byte[] toBytes(String object) {
    return JavaUtils.toBytes(object);
=======
@Override
  public byte[] toBytes(String object) {
    return object.getBytes(UTF_8);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513276952034\fstmerge_var2_1489045061055806969
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_e97fd_033f6\rev_rev_left_e97fd-rev_right_033f6\SingularityService\src\main\java\com\hubspot\singularity\data\transcoders\StringTranscoder.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_f3f95-e8205.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018162\fstmerge_var1_2909786564827568500
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018162\fstmerge_base_8150491723159789515
public static SingularityPendingTaskId fromString(String string) {
    String[] splits = null;

    try {
      splits = JavaUtils.reverseSplit(string, 5, "-");
    } catch (IllegalStateException ise) {
      throw new InvalidSingularityTaskIdException(String.format("PendingTaskId %s was invalid (%s)", string, ise.getMessage()));
    }

    try {
      final String requestId = splits[0];
      final String deployId = splits[1];
      final long nextRunAt = Long.parseLong(splits[2]);
      final int instanceNo = Integer.parseInt(splits[3]);
      final PendingType pendingType = PendingType.valueOf(splits[4]);

      return new SingularityPendingTaskId(requestId, deployId, nextRunAt, instanceNo, pendingType);
    } catch (IllegalArgumentException e) {
      throw new InvalidSingularityTaskIdException(String.format("PendingTaskId %s had an invalid parameter (%s)", string, e.getMessage()));
    }

  }
=======
public static SingularityPendingTaskId fromString(String string) {
    String[] splits = null;

    try {
      splits = JavaUtils.reverseSplit(string, 6, "-");
    } catch (IllegalStateException ise) {
      throw new InvalidSingularityTaskIdException(String.format("PendingTaskId %s was invalid (%s)", string, ise.getMessage()));
    }

    try {
      final String requestId = splits[0];
      final String deployId = splits[1];
      final long nextRunAt = Long.parseLong(splits[2]);
      final int instanceNo = Integer.parseInt(splits[3]);
      final PendingType pendingType = PendingType.valueOf(splits[4]);
      final long createdAt = Long.parseLong(splits[5]);

      return new SingularityPendingTaskId(requestId, deployId, nextRunAt, instanceNo, pendingType, createdAt);
    } catch (IllegalArgumentException e) {
      throw new InvalidSingularityTaskIdException(String.format("PendingTaskId %s had an invalid parameter (%s)", string, e.getMessage()));
    }

  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018162\fstmerge_var2_2011294787405264848

File path: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_rev_left_f3f95-rev_right_e8205\SingularityBase\src\main\java\com\hubspot\singularity\SingularityPendingTaskId.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018255\fstmerge_var1_9092548104193346887
    return getId();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018255\fstmerge_base_7776403457855942529
    return String.format("%s-%s-%s-%s-%s", getRequestId(), getDeployId(), getNextRunAt(), getInstanceNo(), getPendingType());
=======
    return String.format("%s-%s-%s-%s-%s-%s", getRequestId(), getDeployId(), getNextRunAt(), getInstanceNo(), getPendingType(), getCreatedAt());
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277018255\fstmerge_var2_2570814597741805271
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_rev_left_f3f95-rev_right_e8205\SingularityBase\src\main\java\com\hubspot\singularity\SingularityPendingTaskId.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private void createTaskAndDeletePendingTaskPrivate(SingularityTask task) throws Exception {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277082856\fstmerge_var1_1479078783373583746
    final String scheduledPath = getPendingPath(task.getTaskRequest().getPendingTask().getPendingTaskId());
    final String activePath = getActivePath(task.getTaskId().getId());

    curator.delete().forPath(scheduledPath);

    final byte[] data = taskTranscoder.toBytes(task);

    // TODO - right now, for consistency, we double write this. should review this and check for
    // what happens in failure cases
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277082856\fstmerge_base_7836510498775108552
    final String scheduledPath = getPendingPath(task.getTaskRequest().getPendingTask().getPendingTaskId());
    final String activePath = getActivePath(task.getTaskId().getId());

    curator.delete().forPath(scheduledPath);

    final byte[] data = taskTranscoder.toBytes(task);

    // TODO - right now, for consistency, we double write this. should review this and check for what happens in failure cases
=======
    delete(getPendingPath(task.getTaskRequest().getPendingTask().getPendingTaskId()));
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277082856\fstmerge_var2_539289234622940102

    final long now = System.currentTimeMillis();

    saveTaskHistoryUpdate(new SingularityTaskHistoryUpdate(task.getTaskId(), now, ExtendedTaskState.TASK_LAUNCHED, Optional.<String>absent()));
    saveLastActiveTaskStatus(new SingularityTaskStatusHolder(task.getTaskId(), Optional.<TaskStatus>absent(), now, serverId, Optional.of(task.getOffer().getSlaveId().getValue())));

    create(getTaskPath(task.getTaskId()), task, taskTranscoder);
    create(getActivePath(task.getTaskId().getId()));
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_rev_left_f3f95-rev_right_e8205\SingularityService\src\main\java\com\hubspot\singularity\data\TaskManager.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private SingularityTaskId getTaskIdFromStr(String activeTaskIdStr) {
    try {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277141438\fstmerge_var1_3695754391765083138
      return singularityPendingTaskIdTranscoder.fromString(pendingTaskIdStr);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277141438\fstmerge_base_99045308020536173
      return SingularityPendingTaskId.fromString(pendingTaskIdStr);
=======
      return SingularityTaskId.fromString(activeTaskIdStr);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277141438\fstmerge_var2_5969438417400516404
    } catch (InvalidSingularityTaskIdException e) {
      throw WebExceptions.badRequest("%s is not a valid taskId: %s", activeTaskIdStr, e.getMessage());
    }
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_rev_left_f3f95-rev_right_e8205\SingularityService\src\main\java\com\hubspot\singularity\resources\TaskResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void drainPendingQueue(final SingularitySchedulerStateCache stateCache) {
    final long start = System.currentTimeMillis();

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277150781\fstmerge_var1_157512199716756098
    final ImmutableList<SingularityPendingRequest> pendingRequests = ImmutableList.copyOf(filterPendingRequestsByDeployAndPriority(requestManager.getPendingRequests()));
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277150781\fstmerge_base_1791553716466320603
    final Collection<SingularityPendingRequest> pendingRequests = filterPendingRequestsByDeployAndPriority(requestManager.getPendingRequests());
=======
    final Collection<SingularityPendingRequest> pendingRequests = requestManager.getPendingRequests();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513277150781\fstmerge_var2_8995492048870790450

    if (pendingRequests.isEmpty()) {
      LOG.trace("Pending queue was empty");
      return;
    }

    LOG.info("Pending queue had {} requests", pendingRequests.size());

    int totalNewScheduledTasks = 0;
    int heldForScheduledActiveTask = 0;
    int obsoleteRequests = 0;

    for (SingularityPendingRequest pendingRequest : pendingRequests) {
      Optional<SingularityRequestWithState> maybeRequest = requestManager.getRequest(pendingRequest.getRequestId());

      if (shouldScheduleTasks(pendingRequest, maybeRequest)) {
        final List<SingularityTaskId> matchingTaskIds = getMatchingTaskIds(stateCache, maybeRequest.get().getRequest(), pendingRequest);
        final SingularityDeployStatistics deployStatistics = getDeployStatistics(pendingRequest.getRequestId(), pendingRequest.getDeployId());

        final RequestState requestState = checkCooldown(maybeRequest.get(), deployStatistics);

        int numScheduledTasks = scheduleTasks(stateCache, maybeRequest.get().getRequest(), requestState, deployStatistics, pendingRequest, matchingTaskIds);

        if (numScheduledTasks == 0 && !matchingTaskIds.isEmpty() && maybeRequest.get().getRequest().isScheduled() && pendingRequest.getPendingType() == PendingType.NEW_DEPLOY) {
          LOG.trace("Holding pending request {} because it is scheduled and has an active task", pendingRequest);
          heldForScheduledActiveTask++;
          continue;
        }

        LOG.debug("Pending request {} resulted in {} new scheduled tasks", pendingRequest, numScheduledTasks);

        totalNewScheduledTasks += numScheduledTasks;
      } else {
        LOG.debug("Pending request {} was obsolete (request {})", pendingRequest, SingularityRequestWithState.getRequestState(maybeRequest));

        obsoleteRequests++;
      }

      requestManager.deletePendingRequest(pendingRequest);
    }

    LOG.info("Scheduled {} new tasks ({} obsolete requests, {} held) in {}", totalNewScheduledTasks, obsoleteRequests, heldForScheduledActiveTask, JavaUtils.duration(start));
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_f3f95_e8205\rev_rev_left_f3f95-rev_right_e8205\SingularityService\src\main\java\com\hubspot\singularity\scheduler\SingularityScheduler.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_13033_75975\rev_13033-75975.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_033f6_3200f\rev_033f6-3200f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e4248_16d64\rev_e4248-16d64.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1e650_033f6\rev_1e650-033f6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_4584c-66364.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278092950\fstmerge_var1_3433574025593054966
    return "SingularityRequest [id=" + id + ", requestType=" + requestType + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule + ", quartzSchedule="
        + quartzSchedule + ", scheduleType=" + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", daemon=" + daemon + ", instances=" + instances
        + ", rackSensitive=" + rackSensitive + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced=" + loadBalanced + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278092950\fstmerge_base_170077679545432437
    return "SingularityRequest [id=" + id + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule + ", quartzSchedule=" + quartzSchedule + ", scheduleType="
        + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", daemon=" + daemon + ", instances=" + instances + ", rackSensitive=" + rackSensitive
        + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced=" + loadBalanced + "]";
=======
    return "SingularityRequest [id=" + id + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule + ", quartzSchedule=" + quartzSchedule + ", scheduleType="
        + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", scheduledExpectedRuntimeMillis=" + scheduledExpectedRuntimeMillis + ", daemon="
        + daemon + ", instances=" + instances + ", rackSensitive=" + rackSensitive + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced=" + loadBalanced + "]";
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278092950\fstmerge_var2_1016143214745060944
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityBase\src\main\java\com\hubspot\singularity\SingularityRequest.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094689\fstmerge_var1_1846385157924549022
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094689\fstmerge_base_5305958882106045426
public SingularityRequestBuilder(String id) {
    this.id = id;
    this.owners = Optional.absent();
    this.numRetriesOnFailure = Optional.absent();
    this.schedule = Optional.absent();
    this.scheduleType = Optional.absent();
    this.killOldNonLongRunningTasksAfterMillis = Optional.absent();
    this.daemon = Optional.absent();
    this.instances = Optional.absent();
    this.rackSensitive = Optional.absent();
    this.loadBalanced = Optional.absent();
    this.quartzSchedule = Optional.absent();
    this.rackAffinity = Optional.absent();
    this.slavePlacement = Optional.absent();
  }
=======
public SingularityRequestBuilder(String id) {
    this.id = id;
    this.owners = Optional.absent();
    this.numRetriesOnFailure = Optional.absent();
    this.schedule = Optional.absent();
    this.scheduleType = Optional.absent();
    this.killOldNonLongRunningTasksAfterMillis = Optional.absent();
    this.daemon = Optional.absent();
    this.instances = Optional.absent();
    this.rackSensitive = Optional.absent();
    this.loadBalanced = Optional.absent();
    this.quartzSchedule = Optional.absent();
    this.rackAffinity = Optional.absent();
    this.slavePlacement = Optional.absent();
    this.scheduledExpectedRuntimeMillis = Optional.absent();
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094689\fstmerge_var2_1209028812157553279

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityBase\src\main\java\com\hubspot\singularity\SingularityRequestBuilder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public SingularityRequest build() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094766\fstmerge_var1_3656992697655690347
    return new SingularityRequest(id, requestType, owners, numRetriesOnFailure, schedule, daemon, instances, rackSensitive, loadBalanced, killOldNonLongRunningTasksAfterMillis, scheduleType, quartzSchedule, rackAffinity, slavePlacement);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094766\fstmerge_base_2536432542140369893
    return new SingularityRequest(id, owners, numRetriesOnFailure, schedule, daemon, instances, rackSensitive, loadBalanced, killOldNonLongRunningTasksAfterMillis, scheduleType, quartzSchedule, rackAffinity, slavePlacement);
=======
    return new SingularityRequest(id, owners, numRetriesOnFailure, schedule, daemon, instances, rackSensitive, loadBalanced, killOldNonLongRunningTasksAfterMillis, scheduleType, quartzSchedule,
        rackAffinity, slavePlacement, scheduledExpectedRuntimeMillis);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278094766\fstmerge_var2_2241591681077687467
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityBase\src\main\java\com\hubspot\singularity\SingularityRequestBuilder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278095702\fstmerge_var1_4849428550642809079
    return "SingularityRequestBuilder [id=" + id + ", requestType=" + requestType + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule
        + ", quartzSchedule=" + quartzSchedule + ", scheduleType=" + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", daemon=" + daemon
        + ", instances=" + instances + ", rackSensitive=" + rackSensitive + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced=" + loadBalanced + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278095702\fstmerge_base_7494344632811423342
    return "SingularityRequestBuilder [id=" + id + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule + ", quartzSchedule=" + quartzSchedule
        + ", scheduleType=" + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", daemon=" + daemon + ", instances=" + instances
        + ", rackSensitive=" + rackSensitive + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced=" + loadBalanced + "]";
=======
    return "SingularityRequestBuilder [id=" + id + ", owners=" + owners + ", numRetriesOnFailure=" + numRetriesOnFailure + ", schedule=" + schedule + ", quartzSchedule=" + quartzSchedule
        + ", scheduleType=" + scheduleType + ", killOldNonLongRunningTasksAfterMillis=" + killOldNonLongRunningTasksAfterMillis + ", scheduledExpectedRuntimeMillis=" + scheduledExpectedRuntimeMillis
        + ", daemon=" + daemon + ", instances=" + instances + ", rackSensitive=" + rackSensitive + ", rackAffinity=" + rackAffinity + ", slavePlacement=" + slavePlacement + ", loadBalanced="
        + loadBalanced + "]";
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278095702\fstmerge_var2_5700947285401007674
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityBase\src\main\java\com\hubspot\singularity\SingularityRequestBuilder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278260665\fstmerge_var1_7076518500180325484
@SuppressWarnings("serial")
  private static <T> void addJerseyBindings(Environment environment, Injector injector, String propertyName, Class<T> clazz) {
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278260665\fstmerge_base_8947068207370071346
private static <T> void addJerseyBindings(Environment environment, Injector injector, String propertyName, Class<T> clazz)
  {
=======
private static <T> void addJerseyBindings(Environment environment, Injector injector, String propertyName, Class<T> clazz) {
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278260665\fstmerge_var2_1203309829247794591
    TypeToken<Set<T>> setToken = new TypeToken<Set<T>>() {}.where(new TypeParameter<T>() {}, clazz);

    @SuppressWarnings("unchecked")
    Key<Set<T>> key = (Key<Set<T>>) Key.get(setToken.getType());

    Binding<? super Set<T>> binding = injector.getExistingBinding(key);

    if (binding != null) {
      Set<T> values = injector.getInstance(key);
      environment.jersey().property(propertyName, ImmutableList.copyOf(values));
    }
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityService\src\main\java\com\hubspot\singularity\guice\GuiceBundle.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316336\fstmerge_var1_8550403324766606263
private void privateInitRequest(boolean isLoadBalanced, boolean isScheduled) {
    requestId = "test-request";

    SingularityRequestBuilder bldr = new SingularityRequestBuilder(requestId, isScheduled ? RequestType.SCHEDULED : RequestType.WORKER)
    .setLoadBalanced(Optional.of(isLoadBalanced));

    if (isScheduled) {
      bldr.setQuartzSchedule(Optional.of(schedule));
    }

    request = bldr.build();

    saveRequest(request);
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316336\fstmerge_base_6244777083562988256
private void privateInitRequest(boolean isLoadBalanced, boolean isScheduled) {
    requestId = "test-request";

    SingularityRequestBuilder bldr = new SingularityRequestBuilder(requestId)
    .setLoadBalanced(Optional.of(isLoadBalanced));

    if (isScheduled) {
      bldr.setQuartzSchedule(Optional.of(schedule));
    }

    request = bldr.build();

    saveRequest(request);
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316336\fstmerge_var2_7798079639649179183

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityService\src\test\java\com\hubspot\singularity\scheduler\SingularitySchedulerTest.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316430\fstmerge_var1_5707003711818338639
private SingularityRequest buildRequest(String requestId) {
    SingularityRequest request = new SingularityRequestBuilder("request1", RequestType.WORKER).build();

    saveRequest(request);

    return request;
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316430\fstmerge_base_8251438261372319037
private SingularityRequest buildRequest(String requestId) {
    SingularityRequest request = new SingularityRequestBuilder("request1").build();

    saveRequest(request);

    return request;
  }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513278316430\fstmerge_var2_3363841384254062563

File path: C:\download\ssmerge\Singularity\revisions\rev_4584c_66364\rev_rev_left_4584c-rev_right_66364\SingularityService\src\test\java\com\hubspot\singularity\scheduler\SingularitySchedulerTest.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4c538_ec3e5\rev_4c538-ec3e5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_27663_2ae89\rev_27663-2ae89.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_30a24_8ba4b\rev_30a24-8ba4b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b636b_ef4ef\rev_b636b-ef4ef.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b027d_efc19\rev_b027d-efc19.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c8e38_916d3\rev_c8e38-916d3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9e2b2_9fd49\rev_9e2b2-9fd49.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_722a5_8bf2f\rev_722a5-8bf2f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a49df_653f1\rev_a49df-653f1.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4177c_27e76\rev_4177c-27e76.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_6249d_5c50c\rev_6249d-5c50c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4bfce_41c5c\rev_4bfce-41c5c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_41c5c_17e0a\rev_41c5c-17e0a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ec1dc_55d31\rev_ec1dc-55d31.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_5d2f6_116ab\rev_5d2f6-116ab.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_18c08_5bb42\rev_18c08-5bb42.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_5bb42_39819\rev_5bb42-39819.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_218f4_ee3a7\rev_218f4-ee3a7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_ddfed_01b51\rev_ddfed-01b51.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2de85_101f3\rev_2de85-101f3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f4fa9_ad415\rev_f4fa9-ad415.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2f4e4_91d67\rev_2f4e4-91d67.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a9d34_c248d\rev_a9d34-c248d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_101f3_521aa\rev_101f3-521aa.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_511b2_99027\rev_511b2-99027.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_37e37_ae602\rev_37e37-ae602.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_bb8d0_d9e33\rev_bb8d0-d9e33.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_bb8d0_049b8\rev_bb8d0-049b8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_36397_92b39\rev_36397-92b39.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1c861_27e5c\rev_1c861-27e5c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_88c49_c96e6\rev_88c49-c96e6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f6474_8cff7\rev_f6474-8cff7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a599c_f8a23\rev_a599c-f8a23.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e4cc3_a76a3\rev_e4cc3-a76a3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f987d_b7f28\rev_f987d-b7f28.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a76a3_4b9ff\rev_a76a3-4b9ff.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_f8a23_c96e6\rev_f8a23-c96e6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_39454_ad415\rev_39454-ad415.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_92d8a_4f627\rev_92d8a-4f627.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_09e48-92510.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942329\fstmerge_var1_2893106920466568103
    return "ExecutorData [cmd=" + cmd + ", embeddedArtifacts=" + embeddedArtifacts + ", externalArtifacts=" + externalArtifacts + ", s3Artifacts=" + s3Artifacts + ", successfulExitCodes="
        + successfulExitCodes + ", runningSentinel=" + runningSentinel + ", user=" + user + ", extraCmdLineArgs=" + extraCmdLineArgs + ", loggingTag=" + loggingTag + ", loggingExtraFields="
        + loggingExtraFields + ", sigKillProcessesAfterMillis=" + sigKillProcessesAfterMillis + ", maxTaskThreads=" + maxTaskThreads + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942329\fstmerge_base_6990875569307876736
    return Objects.toStringHelper(this)
        .add("cmd", cmd)
        .add("embeddedArtifacts", embeddedArtifacts)
        .add("externalArtifacts", externalArtifacts)
        .add("s3Artifacts", s3Artifacts)
        .add("user", user)
        .add("successfulExitCodes", successfulExitCodes)
        .add("runningSentinel", runningSentinel)
        .add("extraCmdLineArgs", extraCmdLineArgs)
        .add("loggingTag", loggingTag)
        .add("loggingExtraFields", loggingExtraFields)
        .add("sigKillProcessesAfterMillis", sigKillProcessesAfterMillis)
        .toString();
=======
    return Objects.toStringHelper(this)
        .add("cmd", cmd)
        .add("embeddedArtifacts", embeddedArtifacts)
        .add("externalArtifacts", externalArtifacts)
        .add("s3Artifacts", s3Artifacts)
        .add("user", user)
        .add("successfulExitCodes", successfulExitCodes)
        .add("runningSentinel", runningSentinel)
        .add("extraCmdLineArgs", extraCmdLineArgs)
        .add("loggingTag", loggingTag)
        .add("loggingExtraFields", loggingExtraFields)
        .add("sigKillProcessesAfterMillis", sigKillProcessesAfterMillis)
        .add("maxTaskThreads", maxTaskThreads)
        .toString();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942329\fstmerge_var2_2922503268669528513
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityBase\src\main\java\com\hubspot\deploy\ExecutorData.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942626\fstmerge_var1_843221339276607697
    return "ExecutorDataBuilder [cmd=" + cmd + ", embeddedArtifacts=" + embeddedArtifacts + ", externalArtifacts=" + externalArtifacts + ", s3Artifacts=" + s3Artifacts + ", successfulExitCodes="
        + successfulExitCodes + ", runningSentinel=" + runningSentinel + ", user=" + user + ", extraCmdLineArgs=" + extraCmdLineArgs + ", loggingTag=" + loggingTag + ", loggingExtraFields="
        + loggingExtraFields + ", sigKillProcessesAfterMillis=" + sigKillProcessesAfterMillis + ", maxTaskThreads=" + maxTaskThreads + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942626\fstmerge_base_4927440237636461839
    return Objects.toStringHelper(this)
        .add("cmd", cmd)
        .add("embeddedArtifacts", embeddedArtifacts)
        .add("externalArtifacts", externalArtifacts)
        .add("s3Artifacts", s3Artifacts)
        .add("user", user)
        .add("successfulExitCodes", successfulExitCodes)
        .add("runningSentinel", runningSentinel)
        .add("extraCmdLineArgs", extraCmdLineArgs)
        .add("loggingTag", loggingTag)
        .add("loggingExtraFields", loggingExtraFields)
        .add("sigKillProcessesAfterMillis", sigKillProcessesAfterMillis)
        .toString();
=======
    return Objects.toStringHelper(this)
        .add("cmd", cmd)
        .add("embeddedArtifacts", embeddedArtifacts)
        .add("externalArtifacts", externalArtifacts)
        .add("s3Artifacts", s3Artifacts)
        .add("user", user)
        .add("successfulExitCodes", successfulExitCodes)
        .add("runningSentinel", runningSentinel)
        .add("extraCmdLineArgs", extraCmdLineArgs)
        .add("loggingTag", loggingTag)
        .add("loggingExtraFields", loggingExtraFields)
        .add("sigKillProcessesAfterMillis", sigKillProcessesAfterMillis)
        .add("maxTaskThreads", maxTaskThreads)
        .toString();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279942626\fstmerge_var2_6823239169297937817
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityBase\src\main\java\com\hubspot\deploy\ExecutorDataBuilder.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279991319\fstmerge_var1_2913713997912187803
    return "SingularityExecutorConfiguration [executorJavaLog=" + executorJavaLog + ", executorBashLog=" + executorBashLog + ", serviceLog=" + serviceLog + ", defaultRunAsUser=" + defaultRunAsUser
        + ", taskAppDirectory=" + taskAppDirectory + ", shutdownTimeoutWaitMillis=" + shutdownTimeoutWaitMillis + ", idleExecutorShutdownWaitMillis=" + idleExecutorShutdownWaitMillis
        + ", stopDriverAfterMillis=" + stopDriverAfterMillis + ", globalTaskDefinitionDirectory=" + globalTaskDefinitionDirectory + ", globalTaskDefinitionSuffix=" + globalTaskDefinitionSuffix
        + ", hardKillAfterMillis=" + hardKillAfterMillis + ", killThreads=" + killThreads + ", threadCheckThreads=" + threadCheckThreads + ", checkThreadsEveryMillis=" + checkThreadsEveryMillis
        + ", maxTaskMessageLength=" + maxTaskMessageLength + ", logrotateCommand=" + logrotateCommand + ", logrotateStateFile=" + logrotateStateFile + ", logrotateConfDirectory="
        + logrotateConfDirectory + ", logrotateToDirectory=" + logrotateToDirectory + ", logrotateMaxageDays=" + logrotateMaxageDays + ", logrotateCount=" + logrotateCount + ", logrotateDateformat="
        + logrotateDateformat + ", logrotateExtrasDateformat=" + logrotateExtrasDateformat + ", logrotateExtrasFiles=" + Arrays.toString(logrotateExtrasFiles) + ", logMetadataDirectory="
        + logMetadataDirectory + ", logMetadataSuffix=" + logMetadataSuffix + ", tailLogLinesToSave=" + tailLogLinesToSave + ", serviceFinishedTailLog=" + serviceFinishedTailLog
        + ", s3MetadataSuffix=" + s3MetadataSuffix + ", s3MetadataDirectory=" + s3MetadataDirectory + ", s3KeyPattern=" + s3KeyPattern + ", s3Bucket=" + s3Bucket + ", useLocalDownloadService="
        + useLocalDownloadService + ", localDownloadServiceTimeoutMillis=" + localDownloadServiceTimeoutMillis + ", maxTaskThreads=" + maxTaskThreads + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279991319\fstmerge_base_8508234972067925227
    return "SingularityExecutorConfiguration [executorJavaLog=" + executorJavaLog + ", executorBashLog=" + executorBashLog + ", serviceLog=" + serviceLog + ", defaultRunAsUser=" + defaultRunAsUser
        + ", taskAppDirectory=" + taskAppDirectory + ", shutdownTimeoutWaitMillis=" + shutdownTimeoutWaitMillis + ", idleExecutorShutdownWaitMillis=" + idleExecutorShutdownWaitMillis + ", stopDriverAfterMillis=" + stopDriverAfterMillis
        + ", globalTaskDefinitionDirectory=" + globalTaskDefinitionDirectory + ", globalTaskDefinitionSuffix=" + globalTaskDefinitionSuffix + ", hardKillAfterMillis=" + hardKillAfterMillis + ", killThreads=" + killThreads
        + ", maxTaskMessageLength=" + maxTaskMessageLength + ", logrotateCommand=" + logrotateCommand + ", logrotateStateFile=" + logrotateStateFile + ", logrotateConfDirectory=" + logrotateConfDirectory + ", logrotateToDirectory="
        + logrotateToDirectory + ", logrotateMaxageDays=" + logrotateMaxageDays + ", logrotateCount=" + logrotateCount + ", logrotateDateformat=" + logrotateDateformat + ", logrotateExtrasDateformat=" + logrotateExtrasDateformat
        + ", logrotateExtrasFiles=" + Arrays.toString(logrotateExtrasFiles) + ", logMetadataDirectory=" + logMetadataDirectory + ", logMetadataSuffix=" + logMetadataSuffix + ", tailLogLinesToSave=" + tailLogLinesToSave
        + ", serviceFinishedTailLog=" + serviceFinishedTailLog + ", s3MetadataSuffix=" + s3MetadataSuffix + ", s3MetadataDirectory=" + s3MetadataDirectory + ", s3KeyPattern=" + s3KeyPattern + ", s3Bucket=" + s3Bucket
        + ", useLocalDownloadService=" + useLocalDownloadService + ", localDownloadServiceTimeoutMillis=" + localDownloadServiceTimeoutMillis + "]";
=======
    return "SingularityExecutorConfiguration [" +
        "executorJavaLog='" + executorJavaLog + '\'' +
        ", executorBashLog='" + executorBashLog + '\'' +
        ", serviceLog='" + serviceLog + '\'' +
        ", defaultRunAsUser='" + defaultRunAsUser + '\'' +
        ", taskAppDirectory='" + taskAppDirectory + '\'' +
        ", shutdownTimeoutWaitMillis=" + shutdownTimeoutWaitMillis +
        ", idleExecutorShutdownWaitMillis=" + idleExecutorShutdownWaitMillis +
        ", stopDriverAfterMillis=" + stopDriverAfterMillis +
        ", globalTaskDefinitionDirectory='" + globalTaskDefinitionDirectory + '\'' +
        ", globalTaskDefinitionSuffix='" + globalTaskDefinitionSuffix + '\'' +
        ", hardKillAfterMillis=" + hardKillAfterMillis +
        ", killThreads=" + killThreads +
        ", maxTaskMessageLength=" + maxTaskMessageLength +
        ", logrotateCommand='" + logrotateCommand + '\'' +
        ", logrotateStateFile='" + logrotateStateFile + '\'' +
        ", logrotateConfDirectory=" + logrotateConfDirectory +
        ", logrotateToDirectory='" + logrotateToDirectory + '\'' +
        ", logrotateMaxageDays='" + logrotateMaxageDays + '\'' +
        ", logrotateCount='" + logrotateCount + '\'' +
        ", logrotateDateformat='" + logrotateDateformat + '\'' +
        ", logrotateExtrasDateformat='" + logrotateExtrasDateformat + '\'' +
        ", logrotateExtrasFiles=" + Arrays.toString(logrotateExtrasFiles) +
        ", logMetadataDirectory=" + logMetadataDirectory +
        ", logMetadataSuffix='" + logMetadataSuffix + '\'' +
        ", tailLogLinesToSave=" + tailLogLinesToSave +
        ", serviceFinishedTailLog='" + serviceFinishedTailLog + '\'' +
        ", s3MetadataSuffix='" + s3MetadataSuffix + '\'' +
        ", s3MetadataDirectory=" + s3MetadataDirectory +
        ", s3KeyPattern='" + s3KeyPattern + '\'' +
        ", s3Bucket='" + s3Bucket + '\'' +
        ", useLocalDownloadService=" + useLocalDownloadService +
        ", localDownloadServiceTimeoutMillis=" + localDownloadServiceTimeoutMillis +
        ", maxTaskThreads=" + maxTaskThreads +
        ']';
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279991319\fstmerge_var2_1220805412877551205
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityExecutor\src\main\java\com\hubspot\singularity\executor\config\SingularityExecutorConfiguration.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Provides
  @Singleton
  public Handlebars providesHandlebars() {
    final Handlebars handlebars = new Handlebars();

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279992412\fstmerge_var1_4454234011065266476
    handlebars.registerHelper(BashEscapedHelper.NAME, new BashEscapedHelper());
    handlebars.registerHelper(IfPresentHelper.NAME, new IfPresentHelper());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279992412\fstmerge_base_494647465808546862
    handlebars.registerHelper("bashEscaped", new BashEscapedHelper());
=======
    handlebars.registerHelper(BashEscapedHelper.NAME, BashEscapedHelper.INSTANCE);
    handlebars.registerHelper(IfPresentHelper.NAME, IfPresentHelper.INSTANCE);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279992412\fstmerge_var2_6762636455892815805

    return handlebars;
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityExecutor\src\main\java\com\hubspot\singularity\executor\config\SingularityExecutorModule.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private void copyLogTail() {
    if (configuration.getTailLogLinesToSave() <= 0) {
      return;
    }

    final Path tailOfLogPath = taskDefinition.getTaskDirectoryPath().resolve(configuration.getServiceFinishedTailLog());

    if (Files.exists(tailOfLogPath)) {
      log.debug("{} already existed, skipping tail", tailOfLogPath);
      return;
    }

    final List<String> cmd = ImmutableList.of(
        "tail",
        "-n",
        Integer.toString(configuration.getTailLogLinesToSave()),
        taskDefinition.getServiceLogOut());

    try {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279996630\fstmerge_var1_9197659293228695455
      new SimpleProcessManager(log).runCommand(cmd, Redirect.to(tailOfLogPath.toFile()));
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279996630\fstmerge_base_4220089181316879887
      super.runCommand(cmd, Redirect.to(taskDefinition.getTaskDirectoryPath().resolve(configuration.getServiceFinishedTailLog()).toFile()));
=======
      super.runCommand(cmd, Redirect.to(tailOfLogPath.toFile()));
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513279996630\fstmerge_var2_1874719407327268430
    } catch (Throwable t) {
      log.error("Failed saving tail of log {} to {}", taskDefinition.getServiceLogOut(), configuration.getServiceFinishedTailLog(), t);
    }
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityExecutor\src\main\java\com\hubspot\singularity\executor\task\SingularityExecutorTaskLogManager.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113346\fstmerge_var1_4631052537591079382
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113346\fstmerge_base_150837142500780798
@Inject
  public SingularityMailer(SingularityConfiguration configuration, Optional<SMTPConfiguration> maybeSmtpConfiguration, SingularityCloser closer, TaskManager taskManager, AsyncHttpClient asyncHttpClient,
      ObjectMapper objectMapper, @Named(SingularityServiceModule.TASK_COMPLETED_TEMPLATE) JadeTemplate taskCompletedTemplate, @Named(SingularityServiceModule.REQUEST_IN_COOLDOWN_TEMPLATE) JadeTemplate requestInCooldownTemplate,
      @Named(SingularityServiceModule.REQUEST_MODIFIED_TEMPLATE) JadeTemplate requestModifiedTemplate, SingularityExceptionNotifier exceptionNotifier) {
    this.maybeSmtpConfiguration = maybeSmtpConfiguration;
    this.closer = closer;
    this.configuration = configuration;
    this.uiHostnameAndPath = configuration.getUiConfiguration().getBaseUrl();
    this.taskManager = taskManager;
    this.asyncHttpClient = asyncHttpClient;
    this.objectMapper = objectMapper;
    this.adminJoiner = Joiner.on(", ").skipNulls();

    if (maybeSmtpConfiguration.isPresent()) {
      mailSenderExecutorService = Optional.of(
          new ThreadPoolExecutor(maybeSmtpConfiguration.get().getMailThreads(), maybeSmtpConfiguration.get().getMailMaxThreads(), 0L, TimeUnit.MILLISECONDS,
              new LinkedBlockingQueue<Runnable>(),
              new ThreadFactoryBuilder().setNameFormat("SingularityMailer-%d")
              .build()));
    } else {
      mailSenderExecutorService = Optional.absent();
    }

    this.requestModifiedTemplate = requestModifiedTemplate;
    this.taskCompletedTemplate = taskCompletedTemplate;
    this.requestInCooldownTemplate = requestInCooldownTemplate;

    this.exceptionNotifier = exceptionNotifier;
  }
=======
@Inject
  public SingularityMailer(SingularityConfiguration configuration, Optional<SMTPConfiguration> maybeSmtpConfiguration, SingularityCloser closer, TaskManager taskManager, AsyncHttpClient asyncHttpClient,
      ObjectMapper objectMapper, @Named(SingularityServiceModule.TASK_COMPLETED_TEMPLATE) JadeTemplate taskCompletedTemplate, @Named(SingularityServiceModule.REQUEST_IN_COOLDOWN_TEMPLATE) JadeTemplate requestInCooldownTemplate,
      @Named(SingularityServiceModule.REQUEST_MODIFIED_TEMPLATE) JadeTemplate requestModifiedTemplate, SingularityExceptionNotifier exceptionNotifier) {
    this.maybeSmtpConfiguration = maybeSmtpConfiguration;
    this.closer = closer;
    this.configuration = configuration;
    this.uiHostnameAndPath = configuration.getUiConfiguration().getBaseUrl();
    this.taskManager = taskManager;
    this.adminJoiner = Joiner.on(", ").skipNulls();

    if (maybeSmtpConfiguration.isPresent()) {
      mailSenderExecutorService = Optional.of(
          new ThreadPoolExecutor(maybeSmtpConfiguration.get().getMailThreads(), maybeSmtpConfiguration.get().getMailMaxThreads(), 0L, TimeUnit.MILLISECONDS,
              new LinkedBlockingQueue<Runnable>(),
              new ThreadFactoryBuilder().setNameFormat("SingularityMailer-%d")
              .build()));
    } else {
      mailSenderExecutorService = Optional.absent();
    }

    this.requestModifiedTemplate = requestModifiedTemplate;
    this.taskCompletedTemplate = taskCompletedTemplate;
    this.requestInCooldownTemplate = requestInCooldownTemplate;

    this.exceptionNotifier = exceptionNotifier;
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113346\fstmerge_var2_1985853036446047065

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityService\src\main\java\com\hubspot\singularity\smtp\SingularityMailer.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113435\fstmerge_var1_2435958346212375586
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113435\fstmerge_base_3924759136321202361
private void populateTaskEmailProperties(Builder<String, Object> templateProperties, SingularityTaskId taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, ExtendedTaskState taskState) {
    templateProperties.put("singularityTaskLink", getSingularityTaskLink(taskId));
    templateProperties.put("stdout", getTaskLogFile(taskId, "stdout").or(new String[0]));
    templateProperties.put("stderr", getTaskLogFile(taskId, "stderr").or(new String[0]));
    templateProperties.put("taskId", taskId.getId());
    templateProperties.put("deployId", taskId.getDeployId());

    templateProperties.put("taskDirectory", taskManager.getDirectory(taskId).or("directory missing"));

    Optional<SingularityTask> task = taskManager.getTask(taskId);

    if (task.isPresent()) {
      templateProperties.put("slaveHostname", task.get().getOffer().getHostname());
    }

    boolean needsBeenPrefix = (taskState == ExtendedTaskState.TASK_LOST) || (taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("status", String.format("%s%s", needsBeenPrefix ? "been " : "", taskState.getDisplayName()));
    templateProperties.put("taskStateLost", taskState == ExtendedTaskState.TASK_LOST);
    templateProperties.put("taskStateFailed", taskState == ExtendedTaskState.TASK_FAILED);
    templateProperties.put("taskStateFinished", taskState == ExtendedTaskState.TASK_FINISHED);
    templateProperties.put("taskStateKilled", taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("taskUpdates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateProperties.put("taskRan", didTaskRun(taskHistory));
  }
=======
private void populateTaskEmailProperties(Builder<String, Object> templateProperties, SingularityTaskId taskId, Collection<SingularityTaskHistoryUpdate> taskHistory, ExtendedTaskState taskState) {
    templateProperties.put("singularityTaskLink", getSingularityTaskLink(taskId));
    templateProperties.put("taskId", taskId.getId());
    templateProperties.put("deployId", taskId.getDeployId());

    templateProperties.put("taskDirectory", taskManager.getDirectory(taskId).or("directory missing"));

    Optional<SingularityTask> task = taskManager.getTask(taskId);

    if (task.isPresent()) {
      templateProperties.put("slaveHostname", task.get().getOffer().getHostname());
    }

    boolean needsBeenPrefix = (taskState == ExtendedTaskState.TASK_LOST) || (taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("status", String.format("%s%s", needsBeenPrefix ? "been " : "", taskState.getDisplayName()));
    templateProperties.put("taskStateLost", taskState == ExtendedTaskState.TASK_LOST);
    templateProperties.put("taskStateFailed", taskState == ExtendedTaskState.TASK_FAILED);
    templateProperties.put("taskStateFinished", taskState == ExtendedTaskState.TASK_FINISHED);
    templateProperties.put("taskStateKilled", taskState == ExtendedTaskState.TASK_KILLED);

    templateProperties.put("taskUpdates", JadeHelper.getJadeTaskHistory(taskHistory));
    templateProperties.put("taskRan", didTaskRun(taskHistory));
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513280113435\fstmerge_var2_2955602345694807420

File path: C:\download\ssmerge\Singularity\revisions\rev_09e48_92510\rev_rev_left_09e48-rev_right_92510\SingularityService\src\main\java\com\hubspot\singularity\smtp\SingularityMailer.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_92510_8dd0f\rev_92510-8dd0f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_947ed_cb11e\rev_947ed-cb11e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c3cd5_ffa2f\rev_c3cd5-ffa2f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b3c6c_97bd7\rev_b3c6c-97bd7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_09e48_da323\rev_09e48-da323.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_da323_d74bb\rev_da323-d74bb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4b9ff_9d010\rev_4b9ff-9d010.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c22b8_7632d\rev_c22b8-7632d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b6640_09244\rev_b6640-09244.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_dc2a5_09244\rev_dc2a5-09244.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_09244_6d45c\rev_09244-6d45c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3b82e_d12c2\rev_3b82e-d12c2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7632d_549cf\rev_7632d-549cf.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_11da5_9f7a1\rev_11da5-9f7a1.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_d391e_ee080\rev_d391e-ee080.revisions
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: renamedMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281036401\fstmerge_var1_1840553151312525722
@Test
  public void testUnpauseOnDeploy() {
    initRequest();
    initFirstDeploy();

    requestManager.pause(request, System.currentTimeMillis(), Optional.<String> absent());

    boolean exception = false;

    try {
      deploy("d2");
    } catch (Exception e) {
      exception = true;
    }

    Assert.assertTrue(exception);

    deploy("d3", Optional.of(true));

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.DEPLOYING_TO_UNPAUSE);

    scheduler.drainPendingQueue(stateCacheProvider.get());
    sms.resourceOffers(driver, Arrays.asList(createOffer(20, 20000, "slave1", "host1")));
    statusUpdate(taskManager.getActiveTasks().get(0), TaskState.TASK_FAILED);

    deployChecker.checkDeploys();

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.PAUSED);

    Assert.assertTrue(taskManager.getActiveTaskIds().isEmpty());
    Assert.assertTrue(taskManager.getPendingTaskIds().isEmpty());
    Assert.assertTrue(requestManager.getPendingRequests().isEmpty());

    deploy("d4", Optional.of(true));

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.DEPLOYING_TO_UNPAUSE);

    scheduler.drainPendingQueue(stateCacheProvider.get());
    sms.resourceOffers(driver, Arrays.asList(createOffer(20, 20000, "slave1", "host1")));

    statusUpdate(taskManager.getActiveTasks().get(0), TaskState.TASK_RUNNING);
    deployChecker.checkDeploys();

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.ACTIVE);
  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281036401\fstmerge_base_226747317502134653
=======
@Test
  public void testUnpauseOnDeploy() {
    initRequest();
    initFirstDeploy();

    requestManager.pause(request, System.currentTimeMillis(), Optional.<String> absent());

    boolean exception = false;

    try {
      deploy("d2");
    } catch (Exception e) {
      exception = true;
    }

    Assert.assertTrue(exception);

    deploy("d3", Optional.of(true));

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.DEPLOYING_TO_UNPAUSE);

    scheduler.drainPendingQueue(stateCacheProvider.get());
    sms.resourceOffers(driver, Arrays.asList(createOffer(20, 20000, "slave1", "host1")));
    statusUpdate(taskManager.getActiveTasks().get(0), TaskState.TASK_FAILED);

    deployChecker.checkDeploys();

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.PAUSED);

    Assert.assertTrue(taskManager.getActiveTaskIds().isEmpty());
    Assert.assertTrue(taskManager.getPendingTaskIds().isEmpty());
    Assert.assertTrue(requestManager.getPendingRequests().isEmpty());

    deploy("d4", Optional.of(true));

    Assert.assertTrue(requestManager.getRequest(requestId).get().getState() == RequestState.DEPLOYING_TO_UNPAUSE);

    scheduler.drainPendingQueue(stateCacheProvider.get());
    sms.resourceOffers(driver, Arrays.asList(createOffer(20, 20000, "slave1", "host1")));

    statusUpdate(taskManager.getActiveTasks().get(0), TaskState.TASK_RUNNING);
    deployChecker.checkDeploys();

    RequestState requestState = requestManager.getRequest(requestId).get().getState();

    Assert.assertTrue(requestState == RequestState.ACTIVE);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281036401\fstmerge_var2_24599868252749956

File path: C:\download\ssmerge\Singularity\revisions\rev_d391e_ee080\rev_rev_left_d391e-rev_right_ee080\SingularityService\src\test\java\com\hubspot\singularity\scheduler\SingularitySchedulerTest.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4e017_d9eae\rev_4e017-d9eae.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_549cf_94cf5\rev_549cf-94cf5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_c23b2_3bc67\rev_c23b2-3bc67.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_24059_78cc8\rev_24059-78cc8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_08dd9_d9eae\rev_08dd9-d9eae.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_fdbad_9fb37\rev_fdbad-9fb37.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public void configure(Binder binder) {
    binder.bind(ZkDataMigrationRunner.class).in(Scopes.SINGLETON);

    Multibinder<ZkDataMigration> dataMigrations = Multibinder.newSetBinder(binder, ZkDataMigration.class);
    dataMigrations.addBinding().to(LastTaskStatusMigration.class);
    dataMigrations.addBinding().to(SingularityPendingTaskIdMigration.class);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281379868\fstmerge_var1_2439560819958780312
    dataMigrations.addBinding().to(SlaveAndRackMigration.class);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281379868\fstmerge_base_3370006038564025717
=======
    dataMigrations.addBinding().to(SingularityCmdLineArgsMigration.class);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281379868\fstmerge_var2_3859877554956061388
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_fdbad_9fb37\rev_rev_left_fdbad-rev_right_9fb37\SingularityService\src\main\java\com\hubspot\singularity\data\zkmigrations\SingularityZkMigrationsModule.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_71a0b_5aee5\rev_71a0b-5aee5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_08dd9_5aee5\rev_08dd9-5aee5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_68c99_15e56\rev_68c99-15e56.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private CheckLBState checkLbState(SingularityTaskId taskId) {
    Optional<SingularityLoadBalancerUpdate> lbAddUpdate = taskManager.getLoadBalancerState(taskId, LoadBalancerRequestType.ADD);

    if (!lbAddUpdate.isPresent()) {
      return CheckLBState.NOT_LOAD_BALANCED;
    }

    if (!shouldRemoveLbState(taskId, lbAddUpdate.get())) {
      return CheckLBState.LOAD_BALANCE_FAILED;
    }

    Optional<SingularityLoadBalancerUpdate> maybeLbRemoveUpdate = taskManager.getLoadBalancerState(taskId, LoadBalancerRequestType.REMOVE);
    SingularityLoadBalancerUpdate lbRemoveUpdate = null;

    final LoadBalancerRequestId loadBalancerRequestId = getLoadBalancerRequestId(taskId, maybeLbRemoveUpdate);

    if (shouldEnqueueLbRequest(maybeLbRemoveUpdate)) {
      final Optional<SingularityTask> task = taskManager.getTask(taskId);

      if (!task.isPresent()) {
        LOG.error("Missing task {}", taskId);
        return CheckLBState.MISSING_TASK;
      }

      lbRemoveUpdate = lbClient.enqueue(loadBalancerRequestId, task.get().getTaskRequest().getRequest(), task.get().getTaskRequest().getDeploy(), Collections.<SingularityTask> emptyList(), Collections.singletonList(task.get()));

      taskManager.saveLoadBalancerState(taskId, LoadBalancerRequestType.REMOVE, lbRemoveUpdate);
    } else if (maybeLbRemoveUpdate.get().getLoadBalancerState() == BaragonRequestState.WAITING || maybeLbRemoveUpdate.get().getLoadBalancerState() == BaragonRequestState.CANCELING) {
      lbRemoveUpdate = lbClient.getState(loadBalancerRequestId);

      taskManager.saveLoadBalancerState(taskId, LoadBalancerRequestType.REMOVE, lbRemoveUpdate);
    } else {
      lbRemoveUpdate = maybeLbRemoveUpdate.get();
    }

    switch (lbRemoveUpdate.getLoadBalancerState()) {
      case SUCCESS:
        return CheckLBState.DONE;
      case FAILED:
      case CANCELED:
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281554844\fstmerge_var1_8161763611787996455
        final String errorMessage = String.format("LB removal request for %s (%s) got unexpected response %s", lbAddUpdate.get(), loadBalancerRequestId, lbRemoveUpdate.getLoadBalancerState());
        LOG.error(errorMessage);
        exceptionNotifier.notify(new LbUpdateException(errorMessage), getClass());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281554844\fstmerge_base_4824665057576999830
        final String errorMsg = String.format("LB removal request for %s (%s) got unexpected response %s", lbAddUpdate.get(), loadBalancerRequestId, lbRemoveUpdate.getLoadBalancerState());
        LOG.error(errorMsg);
        exceptionNotifier.notify(errorMsg);
=======
        LOG.error("LB removal request {} ({}) got unexpected response {}", lbAddUpdate.get(), loadBalancerRequestId, lbRemoveUpdate.getLoadBalancerState());
        exceptionNotifier.notify(String.format("LB removal failed for %s", lbAddUpdate.get().getLoadBalancerRequestId().toString()),
            ImmutableMap.<String, String> of("state", lbRemoveUpdate.getLoadBalancerState().name(), "loadBalancerRequestId", loadBalancerRequestId.toString(), "addUpdate", lbAddUpdate.get().toString()));
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281554844\fstmerge_var2_872095765698355723
        return CheckLBState.RETRY;
      case UNKNOWN:
      case CANCELING:
      case WAITING:
        LOG.trace("Waiting on LB cleanup request {} in state {}", loadBalancerRequestId, lbRemoveUpdate.getLoadBalancerState());
    }

    return CheckLBState.WAITING;
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_68c99_15e56\rev_rev_left_68c99-rev_right_15e56\SingularityService\src\main\java\com\hubspot\singularity\scheduler\SingularityCleaner.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281570297\fstmerge_var1_1547528502725608069
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281570297\fstmerge_base_7518350002045686993
public void notify(String message) {
    if (!raven.isPresent()) {
      return;
    }

    try {
      notify(raven.get(), message);
    } catch (Throwable e) {
      LOG.error("Caught exception while trying to report {} to Sentry", message, e);
    }
  }
=======
public void notify(String subject) {
    notify(subject, Collections.<String, String> emptyMap());
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281570297\fstmerge_var2_3573825359404981711

File path: C:\download\ssmerge\Singularity\revisions\rev_68c99_15e56\rev_rev_left_68c99-rev_right_15e56\SingularityService\src\main\java\com\hubspot\singularity\sentry\SingularityExceptionNotifier.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_15e56_83271\rev_15e56-83271.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_cb4a7-b8ad9.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678391\fstmerge_var1_6303456044781530091
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678391\fstmerge_base_8752388613490232609
public void markAsDead(String objectId) {
    Optional<T> objectHolder = getActiveObject(objectId);

    if (!objectHolder.isPresent()) {
      LOG.warn(String.format("Marking an object %s as dead - but it wasn't active", objectId));
      return;
    }

    if (delete(getActivePath(objectId)) != SingularityDeleteResult.DELETED) {
      LOG.warn(String.format("Deleting active object at %s failed", getActivePath(objectId)));
    }

    T object = objectHolder.get();

    object.setState(SingularityMachineState.DEAD);
    object.setDeadAt(Optional.of(System.currentTimeMillis()));

    if (create(getDeadPath(objectId), Optional.of(transcoder.toBytes(object))) != SingularityCreateResult.CREATED) {
      LOG.warn(String.format("Creating dead object at %s failed", getDeadPath(objectId)));
    }
  }
=======
public void markAsDead(String objectId) {
    Optional<T> objectHolder = getActiveObject(objectId);

    if (!objectHolder.isPresent()) {
      LOG.warn(format("Marking an object %s as dead - but it wasn't active", objectId));
      return;
    }

    if (delete(getActivePath(objectId)) != SingularityDeleteResult.DELETED) {
      LOG.warn(format("Deleting active object at %s failed", getActivePath(objectId)));
    }

    T object = objectHolder.get();

    object.setState(SingularityMachineState.DEAD);
    object.setDeadAt(Optional.of(System.currentTimeMillis()));

    if (create(getDeadPath(objectId), Optional.of(transcoder.toBytes(object))) != SingularityCreateResult.CREATED) {
      LOG.warn(format("Creating dead object at %s failed", getDeadPath(objectId)));
    }
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678391\fstmerge_var2_9015850787326816250

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\data\AbstractMachineManager.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678485\fstmerge_var1_2370491234456704863
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678485\fstmerge_base_7819330249978444243
private void mark(T object, String path, SingularityMachineState state) {
    object.setState(state);

    final byte[] data = transcoder.toBytes(object);

    try {
      curator.setData().forPath(path, data);
    } catch (NoNodeException nne) {
      LOG.warn(String.format("Unexpected no node exception while storing decomissioned state for %s on path %s", object, path));
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }
  }
=======
private void mark(T object, String path, SingularityMachineState state) {
    object.setState(state);

    final byte[] data = transcoder.toBytes(object);

    try {
      curator.setData().forPath(path, data);
    } catch (NoNodeException nne) {
      LOG.warn(format("Unexpected no node exception while storing decomissioned state for %s on path %s", object, path));
    } catch (Exception e) {
      throw Throwables.propagate(e);
    }
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281678485\fstmerge_var2_6869202891656146921

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\data\AbstractMachineManager.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private void checkForIllegalChanges(SingularityRequest request, SingularityRequest existingRequest) {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684381\fstmerge_var1_3123149511878124298
    check(request.getRequestType() == existingRequest.getRequestType(), String.format("Request can not change requestType from %s to %s", existingRequest.getRequestType(), request.getRequestType()));
    check(request.isLoadBalanced() == existingRequest.isLoadBalanced(), "Request can not change whether it is load balanced");
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684381\fstmerge_base_7321053131656116298
    check(request.isScheduled() == existingRequest.isScheduled(), "Request can not change whether it is a scheduled request");
    check(request.isDaemon() == existingRequest.isDaemon(), "Request can not change whether it is a daemon");
    check(request.isLoadBalanced() == existingRequest.isLoadBalanced(), "Request can not change whether it is load balanced");
=======
    checkBadRequest(request.isScheduled() == existingRequest.isScheduled(), "Request can not change whether it is a scheduled request");
    checkBadRequest(request.isDaemon() == existingRequest.isDaemon(), "Request can not change whether it is a daemon");
    checkBadRequest(request.isLoadBalanced() == existingRequest.isLoadBalanced(), "Request can not change whether it is load balanced");
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684381\fstmerge_var2_7507140427662276464
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\data\SingularityValidator.java
Conflict type: EditSameMC
Number of Conflicts: 2
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 2, 0, 0
Conflict body: 
public SingularityRequest checkSingularityRequest(SingularityRequest request, Optional<SingularityRequest> existingRequest, Optional<SingularityDeploy> activeDeploy,
      Optional<SingularityDeploy> pendingDeploy) {
    checkBadRequest(request.getId() != null && !request.getId().contains("/"), "Id can not be null or contain / characters");

    if (!allowRequestsWithoutOwners) {
      checkBadRequest(request.getOwners().isPresent() && !request.getOwners().get().isEmpty(), "Request must have owners defined (this can be turned off in Singularity configuration)");
    }

    checkBadRequest(request.getId().length() < maxRequestIdSize, "Request id must be less than %s characters, it is %s (%s)", maxRequestIdSize, request.getId().length(), request.getId());
    checkBadRequest(!request.getInstances().isPresent() || request.getInstances().get() > 0, "Instances must be greater than 0");

    checkBadRequest(request.getInstancesSafe() <= maxInstancesPerRequest,"Instances (%s) be greater than %s (maxInstancesPerRequest in mesos configuration)", request.getInstancesSafe(), maxInstancesPerRequest);

    if (existingRequest.isPresent()) {
      checkForIllegalChanges(request, existingRequest.get());
    }

    if (activeDeploy.isPresent()) {
      checkForIllegalResources(request, activeDeploy.get());
    }

    if (pendingDeploy.isPresent()) {
      checkForIllegalResources(request, pendingDeploy.get());
    }

    String quartzSchedule = null;

    if (request.isScheduled()) {
      final String originalSchedule = request.getQuartzScheduleSafe();

      checkBadRequest(request.getQuartzSchedule().isPresent() || request.getSchedule().isPresent(), "Specify at least one of schedule or quartzSchedule");

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_var1_6259863133730820419
      check(request.getInstances().or(1) == 1, "Scheduled requests can not be ran on more than one instance");
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_base_7910855673224920173
      check(!request.getDaemon().isPresent(), "Scheduled request must not set a daemon flag");
      check(request.getInstances().or(1) == 1, "Scheduled requests can not be ran on more than one instance");
=======
      checkBadRequest(!request.getDaemon().isPresent(), "Scheduled request must not set a daemon flag");
      checkBadRequest(request.getInstances().or(1) == 1, "Scheduled requests can not be ran on more than one instance");
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_var2_480843380042833874

      if (request.getQuartzSchedule().isPresent() && !request.getSchedule().isPresent()) {
        checkBadRequest(request.getScheduleType().or(ScheduleType.QUARTZ) == ScheduleType.QUARTZ, "If using quartzSchedule specify scheduleType QUARTZ or leave it blank");
      }

      if (request.getQuartzSchedule().isPresent() || (request.getScheduleType().isPresent() && request.getScheduleType().get() == ScheduleType.QUARTZ)) {
        quartzSchedule = originalSchedule;
      } else {
        checkBadRequest(request.getScheduleType().or(ScheduleType.CRON) == ScheduleType.CRON, "If not using quartzSchedule specify scheduleType CRON or leave it blank");
        checkBadRequest(!request.getQuartzSchedule().isPresent(), "If using schedule type CRON do not specify quartzSchedule");

        quartzSchedule = getQuartzScheduleFromCronSchedule(originalSchedule);
      }

      checkBadRequest(isValidCronSchedule(quartzSchedule), "Schedule %s (from: %s) was not valid", quartzSchedule, originalSchedule);
    } else {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_var1_6259863133730820419
      check(!request.getQuartzSchedule().isPresent() && !request.getSchedule().isPresent(), "Non-scheduled requests can not specify a schedule");
      check(!request.getScheduleType().isPresent(), "ScheduleType can only be set for scheduled requests");
      check(!request.getNumRetriesOnFailure().isPresent(), "NumRetriesOnFailure can only be set for scheduled requests");
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_base_7910855673224920173
      check(!request.getScheduleType().isPresent(), "ScheduleType can only be set for scheduled requests");
      check(!request.getNumRetriesOnFailure().isPresent(), "NumRetriesOnFailure can only be set for scheduled requests");
=======
      checkBadRequest(!request.getScheduleType().isPresent(), "ScheduleType can only be set for scheduled requests");
      checkBadRequest(!request.getNumRetriesOnFailure().isPresent(), "NumRetriesOnFailure can only be set for scheduled requests");
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281684836\fstmerge_var2_480843380042833874
    }

    if (!request.isLongRunning()) {
      checkBadRequest(!request.isLoadBalanced(), "non-longRunning (scheduled/oneoff) requests can not be load balanced");
      checkBadRequest(!request.isRackSensitive(), "non-longRunning (scheduled/oneoff) requests can not be rack sensitive");
    } else {
      checkBadRequest(!request.getKillOldNonLongRunningTasksAfterMillis().isPresent(), "longRunning requests can not define a killOldNonLongRunningTasksAfterMillis value");
    }

    if (request.isScheduled()) {
      checkBadRequest(request.getInstances().or(1) == 1, "Scheduler requests can not be ran on more than one instance");
    } else if (request.isOneOff()) {
      checkBadRequest(!request.getInstances().isPresent(), "one-off requests can not define a # of instances");
    }

    return request.toBuilder().setQuartzSchedule(Optional.fromNullable(quartzSchedule)).build();
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\data\SingularityValidator.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718651\fstmerge_var1_3085381858414717257
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718651\fstmerge_base_4957774314711562254
public void removeDead(String objectId) {
    if (manager.removeDead(objectId) ==  SingularityDeleteResult.DIDNT_EXIST) {
      throw new NotFoundException(String.format("Couldn't find dead %s with id %s", getObjectTypeString(), objectId));
    }
  }
=======
public void removeDead(String objectId) {
    checkNotFound(manager.removeDead(objectId) == SingularityDeleteResult.DELETED, "Couldn't find dead %s with id %s", getObjectTypeString(), objectId);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718651\fstmerge_var2_5896089098458481079

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\AbstractMachineResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718741\fstmerge_var1_5243952058994631723
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718741\fstmerge_base_283261841618555489
public void removeDecomissioning(String objectId) {
    if (manager.removeDecomissioning(objectId) ==  SingularityDeleteResult.DIDNT_EXIST) {
      throw new NotFoundException(String.format("Couldn't find decomissioning %s with id %s", getObjectTypeString(), objectId));
    }
  }
=======
public void removeDecomissioning(String objectId) {
    checkNotFound(manager.removeDecomissioning(objectId) == SingularityDeleteResult.DELETED, "Couldn't find decomissioning %s with id %s", getObjectTypeString(), objectId);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718741\fstmerge_var2_1784919217641507019

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\AbstractMachineResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718816\fstmerge_var1_2601692177375695810
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718816\fstmerge_base_899573173113080595
public void decomission(String objectId, Optional<String> user) {
    DecomissionResult result = manager.decomission(objectId, user);

    if (result == DecomissionResult.FAILURE_NOT_FOUND || result == DecomissionResult.FAILURE_DEAD) {
      throw new NotFoundException(String.format("Couldn't find an active %s with id %s (result: %s)", getObjectTypeString(), objectId, result.name()));
    } else if (result == DecomissionResult.FAILURE_ALREADY_DECOMISSIONING) {
      throw new ConflictException(String.format("%s %s is already in decomissioning state", getObjectTypeString(), objectId));
    }
  }
=======
public void decomission(String objectId, Optional<String> user) {
    DecomissionResult result = manager.decomission(objectId, user);

    if (result == DecomissionResult.FAILURE_NOT_FOUND || result == DecomissionResult.FAILURE_DEAD) {
      throw notFound("Couldn't find an active %s with id %s (result: %s)", getObjectTypeString(), objectId, result.name());
    } else if (result == DecomissionResult.FAILURE_ALREADY_DECOMISSIONING) {
      throw conflict("%s %s is already in decomissioning state", getObjectTypeString(), objectId);
    }
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281718816\fstmerge_var2_3897123210995097972

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\AbstractMachineResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@POST
  @Consumes({ MediaType.APPLICATION_JSON })
  @ApiOperation(value="Start a new deployment for a Request", response=SingularityRequestParent.class)
  @ApiResponses({
    @ApiResponse(code=400, message="Deploy object is invalid"),
    @ApiResponse(code=409, message="A current deploy is in progress. It may be canceled by calling DELETE"),
  })
  public SingularityRequestParent deploy(@ApiParam(required=true) SingularityDeployRequest deployRequest) {

    final Optional<String> deployUser = deployRequest.getUser();

    SingularityDeploy deploy = deployRequest.getDeploy();
    checkNotNullBadRequest(deploy, "DeployRequest must have a deploy object");

    final String requestId = checkNotNullBadRequest(deploy.getRequestId(), "DeployRequest must have a non-null requestId");

    SingularityRequestWithState requestWithState = fetchRequestWithState(requestId);
    SingularityRequest request = requestWithState.getRequest();

    if (!deployRequest.getUnpauseOnSuccessfulDeploy().isPresent() || !deployRequest.getUnpauseOnSuccessfulDeploy().get().booleanValue()) {
      checkConflict(requestWithState.getState() != RequestState.PAUSED, "Request %s is paused. Unable to deploy (it must be manually unpaused first)", requestWithState.getRequest().getId());
    }

    validator.checkDeploy(request, deploy);

    final long now = System.currentTimeMillis();

    SingularityDeployMarker deployMarker = new SingularityDeployMarker(requestId, deploy.getId(), now, deployUser);
    SingularityPendingDeploy pendingDeployObj = new SingularityPendingDeploy(deployMarker, Optional.<SingularityLoadBalancerUpdate> absent(), DeployState.WAITING);

    checkConflict(deployManager.createPendingDeploy(pendingDeployObj) != SingularityCreateResult.EXISTED,
        "Pending deploy already in progress for %s - cancel it or wait for it to complete (%s)", requestId, deployManager.getPendingDeploy(requestId).orNull());

    deployManager.saveDeploy(request, deployMarker, deploy);

    if (requestWithState.getState() == RequestState.PAUSED) {
      requestManager.deployToUnpause(request, now, deployUser);
    }

    if (request.isDeployable()) {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281722898\fstmerge_var1_8936223432194713135
      requestManager.addToPendingQueue(new SingularityPendingRequest(requestId, deployMarker.getDeployId(), now, deployRequest.getUser(), PendingType.NEW_DEPLOY, Collections.<String> emptyList()));
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281722898\fstmerge_base_2300196991169245412
      requestManager.addToPendingQueue(new SingularityPendingRequest(requestId, deployMarker.getDeployId(), now, Optional.<String> absent(), deployRequest.getUser(), PendingType.NEW_DEPLOY));
=======
      requestManager.addToPendingQueue(new SingularityPendingRequest(requestId, deployMarker.getDeployId(), now, Optional.<String> absent(), deployUser, PendingType.NEW_DEPLOY));
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281722898\fstmerge_var2_2363059700679628414
    }

    return fillEntireRequest(requestWithState);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\DeployResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@POST
  @Path("/request/{requestId}/bounce")
  @ApiOperation(value="Bounce a specific Singularity request. A bounce launches replacement task(s), and then kills the original task(s) if the replacement(s) are healthy.",
  response=SingularityRequestParent.class)
  public SingularityRequestParent bounce(@ApiParam("The request ID to bounce") @PathParam("requestId") String requestId,
      @ApiParam("Username of the person requesting the bounce") @QueryParam("user") Optional<String> user) {
    SingularityRequestWithState requestWithState = fetchRequestWithState(requestId);

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281729915\fstmerge_var1_1329213014768181737
    if (!requestWithState.getRequest().isLongRunning()) {
      throw WebExceptions.badRequest("Can not bounce a %s request (%s)", requestWithState.getRequest().getRequestType(), requestWithState);
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281729915\fstmerge_base_283080816778837131
    if (!requestWithState.getRequest().isLongRunning()) {
      throw WebExceptions.badRequest("Can not bounce a scheduled or one-off request (%s)", requestWithState);
    }
=======
    checkBadRequest(requestWithState.getRequest().isLongRunning(), "Can not bounce a scheduled or one-off request (%s)", requestWithState);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281729915\fstmerge_var2_2375537230691153587

    checkConflict(requestWithState.getState() != RequestState.PAUSED, "Request %s is paused. Unable to bounce (it must be manually unpaused first)", requestWithState.getRequest().getId());

    SingularityCreateResult createResult = requestManager.createCleanupRequest(
        new SingularityRequestCleanup(user, RequestCleanupType.BOUNCE, System.currentTimeMillis(), Optional.<Boolean> absent(), requestId, Optional.of(getAndCheckDeployId(requestId))));

    checkConflict(createResult != SingularityCreateResult.EXISTED, "%s is already bouncing", requestId);

    return fillEntireRequest(requestWithState);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\RequestResource.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281730007\fstmerge_var1_18245448411033360
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281730007\fstmerge_base_8288093679120718295
@POST
  @Path("/request/{requestId}/run")
  @ApiOperation(value="Schedule a one-off or scheduled Singularity request for immediate execution.", response=SingularityRequestParent.class)
  @ApiResponses({
    @ApiResponse(code=400, message="Singularity Request is not scheduled or one-off"),
  })
  public SingularityRequestParent scheduleImmediately(@ApiParam("The request ID to run") @PathParam("requestId") String requestId,
      @ApiParam("Username of the person requesting the execution") @QueryParam("user") Optional<String> user,
      @ApiParam("Additional command line arguments to append to the task") String commandLineArgs) {
    SingularityRequestWithState requestWithState = fetchRequestWithState(requestId);

    checkRequestStateNotPaused(requestWithState, "run now");

    Optional<String> maybeCmdLineArgs = Optional.absent();

    PendingType pendingType = null;

    if (requestWithState.getRequest().isScheduled()) {
      pendingType = PendingType.IMMEDIATE;

      if (!taskManager.getActiveTaskIdsForRequest(requestId).isEmpty()) {
        throw WebExceptions.conflict("Can not request an immediate run of a scheduled job which is currently running (%s)", taskManager.getActiveTaskIdsForRequest(requestId));
      }
    } else if (requestWithState.getRequest().isOneOff()) {
      pendingType = PendingType.ONEOFF;
    } else {
      throw WebExceptions.badRequest("Can not request an immediate run of a non-scheduled / always running request (%s)", requestWithState.getRequest());
    }

    if (!Strings.isNullOrEmpty(commandLineArgs)) {
      maybeCmdLineArgs = Optional.of(commandLineArgs);
    }

    SingularityCreateResult result = requestManager.addToPendingQueue(new SingularityPendingRequest(requestId, getAndCheckDeployId(requestId), System.currentTimeMillis(), maybeCmdLineArgs, user, pendingType));

    if (result == SingularityCreateResult.EXISTED) {
      throw WebExceptions.conflict("%s is already pending, please try again soon", requestId);
    }

    return fillEntireRequest(requestWithState);
  }
=======
@POST
  @Path("/request/{requestId}/run")
  @ApiOperation(value="Schedule a one-off or scheduled Singularity request for immediate execution.", response=SingularityRequestParent.class)
  @ApiResponses({
    @ApiResponse(code=400, message="Singularity Request is not scheduled or one-off"),
  })
  public SingularityRequestParent scheduleImmediately(@ApiParam("The request ID to run") @PathParam("requestId") String requestId,
      @ApiParam("Username of the person requesting the execution") @QueryParam("user") Optional<String> user,
      @ApiParam("Additional command line arguments to append to the task") String commandLineArgs) {
    SingularityRequestWithState requestWithState = fetchRequestWithState(requestId);

    checkConflict(requestWithState.getState() != RequestState.PAUSED, "Request %s is paused. Unable to run now (it must be manually unpaused first)", requestWithState.getRequest().getId());

    Optional<String> maybeCmdLineArgs = Optional.absent();

    PendingType pendingType = null;

    if (requestWithState.getRequest().isScheduled()) {
      pendingType = PendingType.IMMEDIATE;
      checkConflict(taskManager.getActiveTaskIdsForRequest(requestId).isEmpty(), "Can not request an immediate run of a scheduled job which is currently running (%s)", taskManager.getActiveTaskIdsForRequest(requestId));
    } else if (requestWithState.getRequest().isOneOff()) {
      pendingType = PendingType.ONEOFF;
    } else {
      throw badRequest("Can not request an immediate run of a non-scheduled / always running request (%s)", requestWithState.getRequest());
    }

    if (!Strings.isNullOrEmpty(commandLineArgs)) {
      maybeCmdLineArgs = Optional.of(commandLineArgs);
    }

    SingularityCreateResult result = requestManager.addToPendingQueue(new SingularityPendingRequest(requestId, getAndCheckDeployId(requestId), System.currentTimeMillis(), maybeCmdLineArgs, user, pendingType));

    checkConflict(result != SingularityCreateResult.EXISTED, "%s is already pending, please try again soon", requestId);

    return fillEntireRequest(requestWithState);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513281730007\fstmerge_var2_5393272574948764564

File path: C:\download\ssmerge\Singularity\revisions\rev_cb4a7_b8ad9\rev_rev_left_cb4a7-rev_right_b8ad9\SingularityService\src\main\java\com\hubspot\singularity\resources\RequestResource.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b8ad9_a19d0\rev_b8ad9-a19d0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_78cc8_3c1fd\rev_78cc8-3c1fd.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_9e766_e9c84\rev_9e766-e9c84.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_b8ad9_701f0\rev_b8ad9-701f0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e9c84_a52e0\rev_e9c84-a52e0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_3ff8d_c9566\rev_3ff8d-c9566.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_05a3c_d3453\rev_05a3c-d3453.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_4ce7f_87e43\rev_4ce7f-87e43.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a061a_c9566\rev_a061a-c9566.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public SingularityState generateState(boolean includeRequestIds) {
    final int activeTasks = taskManager.getNumActiveTasks();
    final int scheduledTasks = taskManager.getNumScheduledTasks();
    final int cleaningTasks = taskManager.getNumCleanupTasks();
    final int lbCleanupTasks = taskManager.getNumLbCleanupTasks();

    final SingularityScheduledTasksInfo scheduledTasksInfo = SingularityScheduledTasksInfo.getInfo(taskManager.getPendingTasks(), singularityConfiguration.getDeltaAfterWhichTasksAreLateMillis());

    final List<String> overProvisionedRequestIds = new ArrayList<>();
    final List<String> possiblyUnderProvisionedRequestIds = new ArrayList<>();

    final List<SingularityRequestWithState> requests = requestManager.getRequests();

    final Map<String, Long> numInstances = getNumTasks(requests);

    int numActiveRequests = 0;
    int numPausedRequests = 0;
    int cooldownRequests = 0;
    int numFinishedRequests = 0;

    for (SingularityRequestWithState requestWithState : requests) {
      switch (requestWithState.getState()) {
        case DEPLOYING_TO_UNPAUSE:
        case ACTIVE:
          numActiveRequests++;
          break;
        case FINISHED:
          numFinishedRequests++;
          break;
        case PAUSED:
          numPausedRequests++;
          break;
        case SYSTEM_COOLDOWN:
          cooldownRequests++;
          break;
        case DELETED:
          break;
      }

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282237175\fstmerge_var1_2205213226375573895
      if (requestWithState.getState().isRunnable() && !requestWithState.getRequest().isAlwaysRunning()) {
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282237175\fstmerge_base_8873689184022546736
      if (requestWithState.getState().isRunnable() && !requestWithState.getRequest().isOneOff()) {
=======
      if (requestWithState.getState().isRunnable() && requestWithState.getRequest().isAlwaysRunning()) {
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282237175\fstmerge_var2_4256775599812534691
        final int instances = requestWithState.getRequest().getInstancesSafe();

        final Long numActualInstances = numInstances.get(requestWithState.getRequest().getId());

        if (numActualInstances == null || numActualInstances.longValue() < instances) {
          possiblyUnderProvisionedRequestIds.add(requestWithState.getRequest().getId());
        } else if (numActualInstances.longValue() > instances) {
          overProvisionedRequestIds.add(requestWithState.getRequest().getId());
        }
      }
    }

    final List<String> underProvisionedRequestIds = new ArrayList<>(possiblyUnderProvisionedRequestIds.size());
    if (!possiblyUnderProvisionedRequestIds.isEmpty()) {
      Map<String, SingularityRequestDeployState> deployStates = deployManager.getRequestDeployStatesByRequestIds(possiblyUnderProvisionedRequestIds);

      for (SingularityRequestDeployState deployState : deployStates.values()) {
        if (deployState.getActiveDeploy().isPresent() || deployState.getPendingDeploy().isPresent()) {
          underProvisionedRequestIds.add(deployState.getRequestId());
        }
      }
    }

    final int pendingRequests = requestManager.getSizeOfPendingQueue();
    final int cleaningRequests = requestManager.getSizeOfCleanupQueue();

    final int activeRacks = rackManager.getNumActive();
    final int deadRacks = rackManager.getNumDead();
    final int decomissioningRacks = rackManager.getNumDecomissioning();

    final int activeSlaves = slaveManager.getNumActive();
    final int deadSlaves = slaveManager.getNumDead();
    final int decomissioningSlaves = slaveManager.getNumDecomissioning();

    final List<SingularityHostState> states = getHostStates();

    int numDeploys = 0;
    long oldestDeploy = 0;
    final long now = System.currentTimeMillis();

    for (SingularityPendingDeploy pendingDeploy : deployManager.getPendingDeploys()) {
      long delta = now - pendingDeploy.getDeployMarker().getTimestamp();
      if (delta > oldestDeploy) {
        oldestDeploy = delta;
      }
      numDeploys++;
    }

    return new SingularityState(activeTasks, numActiveRequests, cooldownRequests, numPausedRequests, scheduledTasks, pendingRequests, lbCleanupTasks, cleaningRequests, activeSlaves,
        deadSlaves, decomissioningSlaves, activeRacks, deadRacks, decomissioningRacks, cleaningTasks, states, oldestDeploy, numDeploys, scheduledTasksInfo.getNumLateTasks(),
        scheduledTasksInfo.getNumFutureTasks(), scheduledTasksInfo.getMaxTaskLag(), System.currentTimeMillis(), includeRequestIds ? overProvisionedRequestIds : null,
        includeRequestIds ? underProvisionedRequestIds : null, overProvisionedRequestIds.size(), underProvisionedRequestIds.size(), numFinishedRequests);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_a061a_c9566\rev_rev_left_a061a-rev_right_c9566\SingularityService\src\main\java\com\hubspot\singularity\data\StateManager.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
private Optional<PendingType> handleCompletedTaskWithStatistics(SingularityTaskId taskId, long timestamp, ExtendedTaskState state, SingularityDeployStatistics deployStatistics, SingularityCreateResult taskHistoryUpdateCreateResult, SingularitySchedulerStateCache stateCache) {
    final Optional<SingularityRequestWithState> maybeRequestWithState = requestManager.getRequest(taskId.getRequestId());

    if (!isRequestActive(maybeRequestWithState)) {
      LOG.warn("Not scheduling a new task, {} is {}", taskId.getRequestId(), SingularityRequestWithState.getRequestState(maybeRequestWithState));
      return Optional.absent();
    }

    RequestState requestState = maybeRequestWithState.get().getState();
    final SingularityRequest request = maybeRequestWithState.get().getRequest();

    final Optional<SingularityRequestDeployState> requestDeployState = deployManager.getRequestDeployState(request.getId());

    if (!isDeployInUse(requestDeployState, taskId.getDeployId(), true)) {
      LOG.debug("Task {} completed, but it didn't match active deploy state {} - ignoring", taskId.getId(), requestDeployState);
      return Optional.absent();
    }

    if (taskHistoryUpdateCreateResult == SingularityCreateResult.CREATED && requestState != RequestState.SYSTEM_COOLDOWN) {
      mailer.sendTaskCompletedMail(taskId, request, state);
    } else if (requestState == RequestState.SYSTEM_COOLDOWN) {
      LOG.debug("Not sending a task completed email because task {} is in SYSTEM_COOLDOWN", taskId);
    } else {
      LOG.debug("Not sending a task completed email for task {} because Singularity already processed this update", taskId);
    }

    if (!state.isSuccess() && taskHistoryUpdateCreateResult == SingularityCreateResult.CREATED && cooldown.shouldEnterCooldown(request, taskId, requestState, deployStatistics, timestamp)) {
      LOG.info("Request {} is entering cooldown due to task {}", request.getId(), taskId);
      requestState = RequestState.SYSTEM_COOLDOWN;
      requestManager.cooldown(request, System.currentTimeMillis());
      mailer.sendRequestInCooldownMail(request);
    }

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282246047\fstmerge_var1_938199607124087395
    PendingType pendingType = PendingType.TASK_DONE;

    if (!state.isSuccess() && shouldRetryImmediately(request, deployStatistics)) {
      LOG.debug("Retrying {} because {}", request.getId(), state);
      pendingType = PendingType.RETRY;
    } else if (!request.isAlwaysRunning()) {
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282246047\fstmerge_base_3302565238526219542
    if (request.isOneOff()) {
=======
    if (!request.isAlwaysRunning()) {
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282246047\fstmerge_var2_7336674633275693580
      return Optional.absent();
    }

    if (state.isSuccess()) {
      if (requestState == RequestState.SYSTEM_COOLDOWN) {
        // TODO send not cooldown anymore email
        LOG.info("Request {} succeeded a task, removing from cooldown", request.getId());
        requestState = RequestState.ACTIVE;
        requestManager.exitCooldown(request, System.currentTimeMillis());
      }
    }

    SingularityPendingRequest pendingRequest = new SingularityPendingRequest(request.getId(), requestDeployState.get().getActiveDeploy().get().getDeployId(), System.currentTimeMillis(), pendingType);

    scheduleTasks(stateCache, request, requestState, deployStatistics, pendingRequest, getMatchingTaskIds(stateCache, request, pendingRequest));

    return Optional.of(pendingType);
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_a061a_c9566\rev_rev_left_a061a-rev_right_c9566\SingularityService\src\main\java\com\hubspot\singularity\scheduler\SingularityScheduler.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: noPattern
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282255997\fstmerge_var1_5998837602895887514
@Test
  public void testRunOnceRunOnlyOnce() {
    SingularityRequestBuilder bldr = new SingularityRequestBuilder(requestId, RequestType.RUN_ONCE);
    request = bldr.build();
    saveRequest(request);

    // TODO

  }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282255997\fstmerge_base_3132657149284453939
=======
@Test
  public void testRunOnceRunOnlyOnce() {
    SingularityRequestBuilder bldr = new SingularityRequestBuilder(requestId, RequestType.RUN_ONCE);
    request = bldr.build();
    saveRequest(request);

    deployResource.deploy(new SingularityDeployRequest(new SingularityDeployBuilder(requestId, "d1").setCommand(Optional.of("cmd")).build(), Optional.<String> absent(), Optional.<Boolean> absent()));

    scheduler.drainPendingQueue(stateCacheProvider.get());

    deployChecker.checkDeploys();

    resourceOffers();

    Assert.assertTrue(deployManager.getRequestDeployState(requestId).get().getActiveDeploy().isPresent());
    Assert.assertTrue(!deployManager.getRequestDeployState(requestId).get().getPendingDeploy().isPresent());

    Assert.assertEquals(1, taskManager.getActiveTaskIds().size());

    statusUpdate(taskManager.getActiveTasks().get(0), TaskState.TASK_FINISHED);

    resourceOffers();

    Assert.assertTrue(taskManager.getActiveTaskIds().isEmpty());
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513282255997\fstmerge_var2_2693878771122574004

File path: C:\download\ssmerge\Singularity\revisions\rev_a061a_c9566\rev_rev_left_a061a-rev_right_c9566\SingularityService\src\test\java\com\hubspot\singularity\scheduler\SingularitySchedulerTest.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_a68e0_85057\rev_a68e0-85057.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_85057_27e81\rev_85057-27e81.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e646f_37637\rev_e646f-37637.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_37637_c80f8\rev_37637-c80f8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_7317c_fc363\rev_7317c-fc363.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_33510_99fb6\rev_33510-99fb6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_50034_4a8a1\rev_50034-4a8a1.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_be7d2_e8605\rev_be7d2-e8605.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public SingularityRequest checkSingularityRequest(SingularityRequest request, Optional<SingularityRequest> existingRequest, Optional<SingularityDeploy> activeDeploy,
      Optional<SingularityDeploy> pendingDeploy) {
    checkBadRequest(request.getId() != null && !request.getId().contains("/"), "Id can not be null or contain / characters");

    if (!allowRequestsWithoutOwners) {
      checkBadRequest(request.getOwners().isPresent() && !request.getOwners().get().isEmpty(), "Request must have owners defined (this can be turned off in Singularity configuration)");
    }

    checkBadRequest(request.getId().length() < maxRequestIdSize, "Request id must be less than %s characters, it is %s (%s)", maxRequestIdSize, request.getId().length(), request.getId());
    checkBadRequest(!request.getInstances().isPresent() || request.getInstances().get() > 0, "Instances must be greater than 0");

    checkBadRequest(request.getInstancesSafe() <= maxInstancesPerRequest,"Instances (%s) be greater than %s (maxInstancesPerRequest in mesos configuration)", request.getInstancesSafe(), maxInstancesPerRequest);

    if (existingRequest.isPresent()) {
      checkForIllegalChanges(request, existingRequest.get());
    }

    if (activeDeploy.isPresent()) {
      checkForIllegalResources(request, activeDeploy.get());
    }

    if (pendingDeploy.isPresent()) {
      checkForIllegalResources(request, pendingDeploy.get());
    }

    String quartzSchedule = null;

    if (request.isScheduled()) {
      final String originalSchedule = request.getQuartzScheduleSafe();

      checkBadRequest(request.getQuartzSchedule().isPresent() || request.getSchedule().isPresent(), "Specify at least one of schedule or quartzSchedule");

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283316326\fstmerge_var1_6347714599886955442
      checkBadRequest(request.getInstances().or(1) == 1, "Scheduled requests can not be ran on more than one instance");
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283316326\fstmerge_base_6333616725571917140
      checkBadRequest(!request.getDaemon().isPresent(), "Scheduled request must not set a daemon flag");
      checkBadRequest(request.getInstances().or(1) == 1, "Scheduled requests can not be ran on more than one instance");
=======
      checkBadRequest(!request.getDaemon().isPresent(), "Scheduled request must not set a daemon flag");
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283316326\fstmerge_var2_4626612703817637709

      if (request.getQuartzSchedule().isPresent() && !request.getSchedule().isPresent()) {
        checkBadRequest(request.getScheduleType().or(ScheduleType.QUARTZ) == ScheduleType.QUARTZ, "If using quartzSchedule specify scheduleType QUARTZ or leave it blank");
      }

      if (request.getQuartzSchedule().isPresent() || (request.getScheduleType().isPresent() && request.getScheduleType().get() == ScheduleType.QUARTZ)) {
        quartzSchedule = originalSchedule;
      } else {
        checkBadRequest(request.getScheduleType().or(ScheduleType.CRON) == ScheduleType.CRON, "If not using quartzSchedule specify scheduleType CRON or leave it blank");
        checkBadRequest(!request.getQuartzSchedule().isPresent(), "If using schedule type CRON do not specify quartzSchedule");

        quartzSchedule = getQuartzScheduleFromCronSchedule(originalSchedule);
      }

      checkBadRequest(isValidCronSchedule(quartzSchedule), "Schedule %s (from: %s) was not valid", quartzSchedule, originalSchedule);
    } else {
      checkBadRequest(!request.getQuartzSchedule().isPresent() && !request.getSchedule().isPresent(), "Non-scheduled requests can not specify a schedule");
      checkBadRequest(!request.getScheduleType().isPresent(), "ScheduleType can only be set for scheduled requests");
    }

    if (!request.isLongRunning()) {
      checkBadRequest(!request.isLoadBalanced(), "non-longRunning (scheduled/oneoff) requests can not be load balanced");
      checkBadRequest(!request.isRackSensitive(), "non-longRunning (scheduled/oneoff) requests can not be rack sensitive");
    } else {
      checkBadRequest(!request.getNumRetriesOnFailure().isPresent(), "NumRetriesOnFailure can only be set for non-long running requests");
      checkBadRequest(!request.getKillOldNonLongRunningTasksAfterMillis().isPresent(), "longRunning requests can not define a killOldNonLongRunningTasksAfterMillis value");
    }

    if (request.isScheduled()) {
      checkBadRequest(request.getInstances().or(1) == 1, "Scheduler requests can not be ran on more than one instance");
    } else if (request.isOneOff()) {
      checkBadRequest(!request.getInstances().isPresent(), "one-off requests can not define a # of instances");
    }

    return request.toBuilder().setQuartzSchedule(Optional.fromNullable(quartzSchedule)).build();
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_be7d2_e8605\rev_rev_left_be7d2-rev_right_e8605\SingularityService\src\main\java\com\hubspot\singularity\data\SingularityValidator.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e8605_7d7d0\rev_e8605-7d7d0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_8af74_27ed5\rev_8af74-27ed5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_e4e31_b2deb\rev_e4e31-b2deb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_1f1d5_a6c2b\rev_1f1d5-a6c2b.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654887\fstmerge_var1_2234997176911299105
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654887\fstmerge_base_6804715085527888402
@JsonCreator
  public SingularityPendingTask(@JsonProperty("pendingTaskId") SingularityPendingTaskId pendingTaskId, @JsonProperty("cmdLineArgs") List<String> cmdLineArgs) {
    this.pendingTaskId = pendingTaskId;
    this.cmdLineArgs = JavaUtils.nonNullImmutable(cmdLineArgs);
  }
=======
@JsonCreator
  public SingularityPendingTask(@JsonProperty("pendingTaskId") SingularityPendingTaskId pendingTaskId, @JsonProperty("cmdLineArgsList") List<String> cmdLineArgsList) {
    this.pendingTaskId = pendingTaskId;
    this.cmdLineArgsList = JavaUtils.nonNullImmutable(cmdLineArgsList);
  }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654887\fstmerge_var2_7260751918730155602

File path: C:\download\ssmerge\Singularity\revisions\rev_1f1d5_a6c2b\rev_rev_left_1f1d5-rev_right_a6c2b\SingularityBase\src\main\java\com\hubspot\singularity\SingularityPendingTask.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@Override
  public String toString() {
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654965\fstmerge_var1_381266600406972289
    return "SingularityPendingTask [pendingTaskId=" + pendingTaskId + ", user=" + user + ", cmdLineArgs=" + cmdLineArgs + "]";
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654965\fstmerge_base_3771126269108152606
    return "SingularityPendingTask [pendingTaskId=" + pendingTaskId + ", cmdLineArgs=" + cmdLineArgs + "]";
=======
    return "SingularityPendingTask [pendingTaskId=" + pendingTaskId + ", cmdLineArgsList=" + cmdLineArgsList + "]";
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513283654965\fstmerge_var2_3237970242879105904
  }

File path: C:\download\ssmerge\Singularity\revisions\rev_1f1d5_a6c2b\rev_rev_left_1f1d5-rev_right_a6c2b\SingularityBase\src\main\java\com\hubspot\singularity\SingularityPendingTask.java

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_80a82_bbe6f\rev_80a82-bbe6f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_740b1_2de90\rev_740b1-2de90.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_2876f_fba95\rev_2876f-fba95.revisions

==================================================================================================================
Revision: C:\download\ssmerge\Singularity\revisions\rev_0ed12_fed56\rev_0ed12-fed56.revisions

=========================================================
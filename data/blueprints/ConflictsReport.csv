=========================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_cb5c9_6339d\rev_cb5c9-6339d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_55458_adcfc\rev_55458-adcfc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_0fb7a_23e10\rev_0fb7a-23e10.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_b0bc7_409a5\rev_b0bc7-409a5.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_07faf_3a18d\rev_07faf-3a18d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_e3f50_77a7f\rev_e3f50-77a7f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_77a7f_e3f50\rev_77a7f-e3f50.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_91792_8b227\rev_91792-8b227.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_01c39_3b407\rev_01c39-3b407.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_45910_fc494\rev_45910-fc494.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_17955_57d5b\rev_17955-57d5b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_3afed_a0540\rev_3afed-a0540.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_6de4d_5378c\rev_6de4d-5378c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_8c2d8_a12cc\rev_8c2d8-a12cc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_e976b_a12cc\rev_e976b-a12cc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_866af_c7c21\rev_866af-c7c21.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_a1366_a9d14\rev_a1366-a9d14.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_b4f3d_8347b\rev_b4f3d-8347b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_55511_eed83\rev_55511-eed83.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_84438_777f9\rev_84438-777f9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_e8ee2_e9def\rev_e8ee2-e9def.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_8e4bb_b8e32\rev_8e4bb-b8e32.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_092c4_28c39\rev_092c4-28c39.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_59d9b_9dc03\rev_59d9b-9dc03.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_0f057_0dc08\rev_0f057-0dc08.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_f2f8c_e7eb9\rev_f2f8c-e7eb9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_9ed50_b769e\rev_9ed50-b769e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_665db_0d5eb\rev_665db-0d5eb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_720b1_a8654\rev_720b1-a8654.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_31861_04e60\rev_31861-04e60.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_38a29_d64df\rev_38a29-d64df.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_0e308_d5276\rev_0e308-d5276.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_2158f_a5a87\rev_2158f-a5a87.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_fcd34_ef948\rev_fcd34-ef948.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_851cc_97b0d\rev_851cc-97b0d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_74e1c_96173\rev_74e1c-96173.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_f2d38_ca64c\rev_f2d38-ca64c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_3f5f9_1a5bc\rev_3f5f9-1a5bc.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_16999_952b0\rev_16999-952b0.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144131303\fstmerge_var1_8767146937031182895
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144131303\fstmerge_base_232195484843450836
@Override
    public void stopTransaction(Conclusion conclusion) {
      final OrientGraphContext context = getContext(false);
        if (context.rawGraph.isClosed() || context.rawGraph.getTransaction() instanceof OTransactionNoTx || context.rawGraph.getTransaction().getStatus() != TXSTATUS.BEGUN)
            return;
      
        if (Conclusion.SUCCESS == conclusion)
            commit();
        else
            rollback();
    }
=======
@Override
    public void stopTransaction(Conclusion conclusion) {
      final OrientGraphContext context = getContext(false);
        if (context == null || context.rawGraph == null ||
                context.rawGraph.isClosed() ||
                context.rawGraph.getTransaction() == null ||
                context.rawGraph.getTransaction() instanceof OTransactionNoTx ||
                context.rawGraph.getTransaction().getStatus() != TXSTATUS.BEGUN)
            return;
      
        if (Conclusion.SUCCESS == conclusion)
            commit();
        else
            rollback();
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144131303\fstmerge_var2_87799643919349836

File path: C:\download\ssmerge\blueprints\revisions\rev_16999_952b0\rev_rev_left_16999-rev_right_952b0\blueprints-orient-graph\src\main\java\com\tinkerpop\blueprints\impls\orient\OrientGraph.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4e4c0_b98bb\rev_4e4c0-b98bb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_29eb4_19780\rev_29eb4-19780.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_58507_a6aad\rev_58507-a6aad.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_ec13a-efbb2.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void removeVertex(final Vertex vertex) {
        Vertex vertexToRemove = vertex;
        if (vertex instanceof EventVertex) {
            vertexToRemove = ((EventVertex) vertex).getBaseVertex();
        }

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144315754\fstmerge_var1_1502915381270616935
        final Map<String, Object> props = ElementHelper.getProperties(vertex);
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144315754\fstmerge_base_3951634211815814578
=======
        Map<String, Object> props = ElementHelper.getProperties(vertex);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144315754\fstmerge_var2_3102679485095922364
        this.baseGraph.removeVertex(vertexToRemove);
        this.onVertexRemoved(vertex, props);
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_rev_left_ec13a-rev_right_efbb2\blueprints-core\src\main\java\com\tinkerpop\blueprints\util\wrappers\event\EventGraph.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144333017\fstmerge_var1_4004263346435651132
public EdgeRemovedEvent(final Edge edge) {
        this.edge = edge;
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144333017\fstmerge_base_8304550602789016141
public EdgeRemovedEvent(Edge edge) {
        this.edge = edge;
    }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144333017\fstmerge_var2_9090718875298761179

File path: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_rev_left_ec13a-rev_right_efbb2\blueprints-core\src\main\java\com\tinkerpop\blueprints\util\wrappers\event\listener\EdgeRemovedEvent.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: smallMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144336878\fstmerge_var1_5185898486938012346
public void vertexRemoved(final Vertex vertex, final Map<String, Object> props) {
        vertexRemovedEvent.incrementAndGet();
        order.add("v-removed-" + vertex.getId());
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144336878\fstmerge_base_2889491457323145144
=======
public void vertexRemoved(Vertex vertex, Map<String, Object> props) {
        vertexRemovedEvent++;
        order.add("v-removed-" + vertex.getId());
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144336878\fstmerge_var2_8732503560888957932

File path: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_rev_left_ec13a-rev_right_efbb2\blueprints-core\src\main\java\com\tinkerpop\blueprints\util\wrappers\event\listener\StubGraphChangedListener.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144340947\fstmerge_var1_4062818754568197840
public void edgeRemoved(final Edge edge) {
        edgeRemovedEvent.incrementAndGet();
        order.add("e-removed-" + edge.getId());
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144340947\fstmerge_base_9096189527870687543
public void edgeRemoved(Edge edge) {
        edgeRemovedEvent++;
        order.add("e-removed-" + edge.getId());
    }
=======
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144340947\fstmerge_var2_9028707618475958762

File path: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_rev_left_ec13a-rev_right_efbb2\blueprints-core\src\main\java\com\tinkerpop\blueprints\util\wrappers\event\listener\StubGraphChangedListener.java
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: smallMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144349439\fstmerge_var1_1088229727914372377
public VertexRemovedEvent(final Vertex vertex, final Map<String, Object> props) {
        this.vertex = vertex;
        this.props = props;
    }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144349439\fstmerge_base_2824697171422769685
=======
public VertexRemovedEvent(Vertex vertex, Map<String, Object> props) {
        this.vertex = vertex;
        this.props = props;
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144349439\fstmerge_var2_8738795875660804356

File path: C:\download\ssmerge\blueprints\revisions\rev_ec13a_efbb2\rev_rev_left_ec13a-rev_right_efbb2\blueprints-core\src\main\java\com\tinkerpop\blueprints\util\wrappers\event\listener\VertexRemovedEvent.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_3d426_e49ba\rev_3d426-e49ba.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_5b0ea_ca557\rev_5b0ea-ca557.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_67cb8_4130e\rev_67cb8-4130e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4130e_dee98\rev_4130e-dee98.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_a89b9_d2764\rev_a89b9-d2764.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_2107d_b41b2\rev_2107d-b41b2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_a525e_3702d\rev_a525e-3702d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_dc8eb_81fbb\rev_dc8eb-81fbb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_7d285_197a3\rev_7d285-197a3.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_7d3cf_64a26\rev_7d3cf-64a26.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 1
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
@SuppressWarnings("deprecation")
    @Override
    public void stopTransaction(final Conclusion conclusion) {
        final OrientGraphContext context = getContext(false);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144834183\fstmerge_var1_8280023773139328486
        if( context == null )
        	return;
        if (context.rawGraph.isClosed() || context.rawGraph.getTransaction() instanceof OTransactionNoTx
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144834183\fstmerge_base_1573342547984118396
        if (context.rawGraph.isClosed() || context.rawGraph.getTransaction() instanceof OTransactionNoTx
=======
        if (context == null || context.rawGraph.isClosed() || context.rawGraph.getTransaction() instanceof OTransactionNoTx
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513144834183\fstmerge_var2_6435740390397529306
                || context.rawGraph.getTransaction().getStatus() != TXSTATUS.BEGUN)
            return;

        if (Conclusion.SUCCESS == conclusion)
            commit();
        else
            rollback();
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_7d3cf_64a26\rev_rev_left_7d3cf-rev_right_64a26\blueprints-orient-graph\src\main\java\com\tinkerpop\blueprints\impls\orient\OrientTransactionalGraph.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_6a496_ee120\rev_6a496-ee120.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_83e9e_b0406\rev_83e9e-b0406.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_91049_caa41\rev_91049-caa41.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_af74c_adccb\rev_af74c-adccb.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_90238_8ec17\rev_90238-8ec17.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_bf1d3_e8df2\rev_bf1d3-e8df2.revisions
Conflict type: EditSameMC
Number of Conflicts: 3
Different Spacing: 3
Consecutive Lines: 1
Intersection: 1
Cause same signature: 
Possible renaming: 0
EditSameMCType: 3, 0, 0
Conflict body: 
@Override
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var1_4608479853399187123
    public Iterable<Vertex> vertices() {
        if (maximum == 0)
            return Collections.emptyList();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_base_8051770301690814117
    public Iterable<Vertex> vertices() {
        if (limit == 0)
            return Collections.emptyList();
=======
	public Iterable<Vertex> vertices() {
		if (limit == 0)
			return Collections.emptyList();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var2_7864463258162109277

		final StringBuilder text = new StringBuilder();

		// GO DIRECTLY AGAINST E CLASS AND SUB-CLASSES
		text.append(QUERY_SELECT_FROM);

		if (((OrientBaseGraph) graph).isUseClassForVertexLabel()
				&& labels != null && labels.length > 0) {
			// FILTER PER CLASS SAVING CHECKING OF LABEL PROPERTY
			if (labels.length == 1)
				// USE THE CLASS NAME
				text.append(OrientBaseGraph.encodeClassName(labels[0]));
			else {
				// MULTIPLE CLASSES NOT SUPPORTED DIRECTLY: CREATE A SUB-QUERY
				return super.vertices();
			}
		} else
			text.append(OrientVertex.CLASS_NAME);

		// APPEND ALWAYS WHERE 1=1 TO MAKE CONCATENATING EASIER
		text.append(QUERY_WHERE);
		manageFilters(text);
		if (!((OrientBaseGraph) graph).isUseClassForVertexLabel())
			manageLabels(text);

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var1_4608479853399187123
        if (maximum > 0 && maximum < Long.MAX_VALUE) {
        	if( minimum > 0 && maximum < Long.MAX_VALUE ) {
	            text.append(" SKIP ");
	            text.append(minimum);
	            text.append(" LIMIT ");
	            text.append(maximum - minimum );
        	} else {
	            text.append(" LIMIT ");
	            text.append(maximum);
        	}
        }
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_base_8051770301690814117
        final OSQLSynchQuery<OIdentifiable> query = new OSQLSynchQuery<OIdentifiable>(text.toString());
=======
		final OSQLSynchQuery<OIdentifiable> query = new OSQLSynchQuery<OIdentifiable>(
				text.toString());
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var2_7864463258162109277

<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var1_4608479853399187123
        final OSQLSynchQuery<OIdentifiable> query = new OSQLSynchQuery<OIdentifiable>(text.toString());
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_base_8051770301690814117
        if (limit > 0 && limit < Long.MAX_VALUE)
            query.setLimit((int) limit);
=======
		if (limit > 0 && limit < Long.MAX_VALUE)
			query.setLimit((int) limit);
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513145290706\fstmerge_var2_7864463258162109277

		return new OrientElementIterable<Vertex>(((OrientBaseGraph) graph),
				((OrientBaseGraph) graph).getRawGraph().query(query));
	}

File path: C:\download\ssmerge\blueprints\revisions\rev_bf1d3_e8df2\rev_rev_left_bf1d3-rev_right_e8df2\blueprints-orient-graph\src\main\java\com\tinkerpop\blueprints\impls\orient\OrientGraphQuery.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_69b1d_4e284\rev_69b1d-4e284.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_f0d87_e39b7\rev_f0d87-e39b7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_c044c_351da\rev_c044c-351da.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_69cee_fe0e0\rev_69cee-fe0e0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_78a82_ef921\rev_78a82-ef921.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_6a851_49d8a\rev_6a851-49d8a.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_c9682_d6b8e\rev_c9682-d6b8e.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_942f7_8dec8\rev_942f7-8dec8.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_561cf_2b018\rev_561cf-2b018.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_76f5c_3934f\rev_76f5c-3934f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_d0f1e_d649f\rev_d0f1e-d649f.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_9408a_91d82\rev_9408a-91d82.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_d7fbb_91d82\rev_d7fbb-91d82.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_98345_f8723\rev_98345-f8723.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4987e_7b1ec\rev_4987e-7b1ec.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4fa2d_264a7\rev_4fa2d-264a7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_1eb56_085f4\rev_1eb56-085f4.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_16c25_d3de4\rev_16c25-d3de4.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328581\fstmerge_var1_1401553528446237048
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328581\fstmerge_base_3898066047296766029
public void testSimulateRexsterIntegrationTests() throws Exception {
    // this test simulates the flow of rexster integration test. integration tests requests are generally not made
    // in parallel, but it is expected each request they may be processed by different threads from a thread pool
    // for each request.
    final TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();
    if (graph.getFeatures().supportsKeyIndices) {
      final String id = "_ID";
      ((KeyIndexableGraph) graph).createKeyIndex(id, Vertex.class);

      final int numberOfVerticesToCreate = 100;
      final Random rand = new Random(12356);
      final List<String> graphAssignedIds = new ArrayList<String>();

      final ExecutorService executorService = Executors.newFixedThreadPool(4);

      for (int ix = 0; ix < numberOfVerticesToCreate; ix++) {
        final int id1 = ix;
        final int id2 = ix + numberOfVerticesToCreate + rand.nextInt();

        // add a vertex and block for the thread to complete
        executorService.submit(new Runnable() {
          @Override
          public void run() {
            final Vertex v = graph.addVertex(null);
            v.setProperty(id, id1);
            graph.commit();

            graphAssignedIds.add(v.getId().toString());
          }
        }).get();

        if (ix > 0) {
          // add a vertex and block for the thread to complete
          executorService.submit(new Runnable() {
            @Override
            public void run() {
              final Vertex v = graph.addVertex(null);
              v.setProperty(id, id2);
              graph.commit();

              graphAssignedIds.add(v.getId().toString());
            }
          }).get();

          // add an edge to two randomly selected vertices and block for the thread to complete. integration
          // tests tend to fail here, so the code is replicated pretty closely to what is in rexster
          // (i.e. serialization to JSON) even though that may have nothing to do with failures.
          executorService.submit(new Runnable() {
            @Override
            public void run() {
              int v1 = rand.nextInt(graphAssignedIds.size());
              int v2 = rand.nextInt(graphAssignedIds.size());

              for (int retry = 0; retry < MAX_RETRIES; ++retry) {
                try {
                  final Vertex vActual1 = graph.getVertex(graphAssignedIds.get(v1));
                  final Vertex vActual2 = graph.getVertex(graphAssignedIds.get(v2));
                  final Edge e = graph.addEdge(null, vActual1, vActual2, "knows");
                  e.setProperty("weight", rand.nextFloat());

                  // just replicating rexster
                  final JSONObject elementJson = GraphSONUtility.jsonFromElement(e, null, GraphSONMode.NORMAL);

                  graph.commit();

                  if (elementJson != null) {
                    // just replicating rexster
                    elementJson.put("_ID", e.getId());
                  }
                  break;
                } catch (Exception ex) {
                  if (!ex.getClass().getSimpleName().equals("OConcurrentModificationException"))
                    fail(ex.getMessage());
                }
              }
            }
          }).get();
        }
      }

      final Set<String> ids = new HashSet<String>();
      for (final Vertex v : graph.getVertices()) {
        ids.add(v.getId().toString());
      }

      for (final String idToRemove : ids) {
        executorService.submit(new Runnable() {
          @Override
          public void run() {
            final Vertex toRemove = graph.getVertex(idToRemove);
            graph.removeVertex(toRemove);

            graph.commit();
          }
        });
      }

      executorService.shutdown();
      executorService.awaitTermination(10, TimeUnit.SECONDS);
    }

    graph.shutdown();
  }
=======
public void testSimulateRexsterIntegrationTests() throws Exception {
        // this test simulates the flow of rexster integration test.  integration tests requests are generally not made
        // in parallel, but it is expected each request they may be processed by different threads from a thread pool
        // for each request.
        final TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();
        if (graph.getFeatures().supportsKeyIndices) {
            final String id = "_ID";
            ((KeyIndexableGraph) graph).createKeyIndex(id, Vertex.class);

            final int numberOfVerticesToCreate = 100;
            final Random rand = new Random(12356);
            final List<String> graphAssignedIds = new ArrayList<String>();

            final ExecutorService executorService = Executors.newFixedThreadPool(4);

            for (int ix = 0; ix < numberOfVerticesToCreate; ix++) {
                final int id1 = ix;
                final int id2 = ix + numberOfVerticesToCreate + rand.nextInt();

                // add a vertex and block for the thread to complete
                executorService.submit(new Runnable() {
                    @Override
                    public void run() {
                        final Vertex v = graph.addVertex(null);
                        v.setProperty(id, id1);
                        graph.commit();

                        graphAssignedIds.add(v.getId().toString());
                    }
                }).get();

                if (ix > 0) {
                    // add a vertex and block for the thread to complete
                    executorService.submit(new Runnable() {
                        @Override
                        public void run() {
                            final Vertex v = graph.addVertex(null);
                            v.setProperty(id, id2);
                            graph.commit();

                            graphAssignedIds.add(v.getId().toString());
                        }
                    }).get();

                    // add an edge to two randomly selected vertices and block for the thread to complete. integration
                    // tests tend to fail here, so the code is replicated pretty closely to what is in rexster
                    // (i.e. serialization to JSON) even though that may have nothing to do with failures.
                    executorService.submit(new Runnable() {
                        @Override
                        public void run() {

                          int v1 = rand.nextInt(graphAssignedIds.size());
                          int v2 = rand.nextInt(graphAssignedIds.size());

                          for (int retry = 0; retry < MAX_RETRIES; ++retry) {
                            try {
                              final Vertex vActual1 = graph.getVertex(graphAssignedIds.get(v1));
                              final Vertex vActual2 = graph.getVertex(graphAssignedIds.get(v2));
                              final Edge e = graph.addEdge(null, vActual1, vActual2, "knows");
                              e.setProperty("weight", rand.nextFloat());

                              // just replicating rexster
                              final JSONObject elementJson = GraphSONUtility.jsonFromElement(e, null, GraphSONMode.NORMAL);

                              graph.commit();

                              if (elementJson != null) {
                                // just replicating rexster
                                elementJson.put("_ID", e.getId());
                              }
                              break;
                            } catch (Exception ex) {
                              if (!ex.getClass().getSimpleName().equals("OConcurrentModificationException"))
                                fail(ex.getMessage());
                            }
                          }
                        }
                    }).get();
                }
            }

            final Set<String> ids = new HashSet<String>();
            for (final Vertex v : graph.getVertices()) {
                ids.add(v.getId().toString());
            }

            for (final String idToRemove : ids) {
                executorService.submit(new Runnable() {
                    @Override
                    public void run() {
                        final Vertex toRemove = graph.getVertex(idToRemove);
                        graph.removeVertex(toRemove);

                        graph.commit();
                    }
                });
            }

            executorService.shutdown();
            executorService.awaitTermination(10, TimeUnit.SECONDS);
        }

        graph.shutdown();
    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328581\fstmerge_var2_9076527766936748118

File path: C:\download\ssmerge\blueprints\revisions\rev_16c25_d3de4\rev_rev_left_16c25-rev_right_d3de4\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 1
EditSameMCType: 0, 0, 1
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328675\fstmerge_var1_8825555556263375474
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328675\fstmerge_base_8329842165904395915
public void testTransactionIsolationWithSeparateThreads() throws Exception {
    // the purpose of this test is to simulate rexster access to a graph instance, where one thread modifies
    // the graph and a separate thread reads before the transaction is committed. the expectation is that
    // the changes in the transaction are isolated to the thread that made the change and the second thread
    // should not see the change until commit() in the first thread.
    final TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

    final CountDownLatch latchCommit = new CountDownLatch(1);
    final CountDownLatch latchFirstRead = new CountDownLatch(1);
    final CountDownLatch latchSecondRead = new CountDownLatch(1);

    final Thread threadMod = new Thread() {
      public void run() {
        final Vertex v = graph.addVertex(null);
        // v.setProperty("name", "stephen");

        // System.out.println("added vertex");

        latchFirstRead.countDown();

        try {
          latchCommit.await();
        } catch (InterruptedException ie) {
          throw new RuntimeException(ie);
        }

        graph.commit();

        // System.out.println("committed vertex");

        latchSecondRead.countDown();
      }
    };

    threadMod.start();

    final Thread threadRead = new Thread() {
      public void run() {
        try {
          latchFirstRead.await();
        } catch (InterruptedException ie) {
          throw new RuntimeException(ie);
        }

        // System.out.println("reading vertex before tx");
        assertFalse(graph.getVertices().iterator().hasNext());
        // System.out.println("read vertex before tx");

        latchCommit.countDown();

        try {
          latchSecondRead.await();
        } catch (InterruptedException ie) {
          throw new RuntimeException(ie);
        }

        // System.out.println("reading vertex after tx");
        assertTrue(graph.getVertices().iterator().hasNext());
        // System.out.println("read vertex after tx");
      }
    };

    threadRead.start();

    threadMod.join();
    threadRead.join();

    graph.shutdown();

  }
=======
public void testTransactionIsolationWithSeparateThreads() throws Exception {
        // the purpose of this test is to simulate rexster access to a graph instance, where one thread modifies
        // the graph and a separate thread reads before the transaction is committed.  the expectation is that
        // the changes in the transaction are isolated to the thread that made the change and the second thread
        // should not see the change until commit() in the first thread.
        final TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

        final CountDownLatch latchCommit = new CountDownLatch(1);
        final CountDownLatch latchFirstRead = new CountDownLatch(1);
        final CountDownLatch latchSecondRead = new CountDownLatch(1);

        final Thread threadMod = new Thread() {
            public void run() {
                final Vertex v = graph.addVertex(null);
                //v.setProperty("name", "stephen");

                // System.out.println("added vertex");

                latchFirstRead.countDown();

                try {
                    latchCommit.await();
                } catch (InterruptedException ie) {
                    throw new RuntimeException(ie);
                }

                graph.commit();

                // System.out.println("committed vertex");

                latchSecondRead.countDown();
            }
        };

        threadMod.start();

        final Thread threadRead = new Thread() {
            public void run() {
                try {
                    latchFirstRead.await();
                } catch (InterruptedException ie) {
                    throw new RuntimeException(ie);
                }

                // System.out.println("reading vertex before tx");
                assertFalse(graph.getVertices().iterator().hasNext());
                // System.out.println("read vertex before tx");

                latchCommit.countDown();

                try {
                    latchSecondRead.await();
                } catch (InterruptedException ie) {
                    throw new RuntimeException(ie);
                }

                // System.out.println("reading vertex after tx");
                assertTrue(graph.getVertices().iterator().hasNext());
                // System.out.println("read vertex after tx");
            }
        };

        threadRead.start();

        threadMod.join();
        threadRead.join();


        graph.shutdown();

    }
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146328675\fstmerge_var2_6252524603973197885

File path: C:\download\ssmerge\blueprints\revisions\rev_16c25_d3de4\rev_rev_left_16c25-rev_right_d3de4\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_11f5f_a14ca\rev_11f5f-a14ca.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_d984c_a8e8c\rev_d984c-a8e8c.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_f3e8d_38c85\rev_f3e8d-38c85.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_0ef54_c78f2\rev_0ef54-c78f2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_33026_c78f2\rev_33026-c78f2.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_f4f35_f6129\rev_f4f35-f6129.revisions
Conflict type: SameSignatureCM
Number of Conflicts: 1
Different Spacing: 0
Consecutive Lines: 0
Intersection: 0
Cause same signature: smallMethod
Possible renaming: 0
EditSameMCType: 0, 0, 0
Conflict body: 
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146488061\fstmerge_var1_7050377840190013680
public void testGetEdgesWithTargetVertex() throws Exception {
		Graph graph = graphTest.generateGraph();

		OrientVertex v1 = (OrientVertex) graph.addVertex(null);
		OrientVertex v2 = (OrientVertex) graph.addVertex(null);
		OrientVertex v3 = (OrientVertex) graph.addVertex(null);
		v1.addEdge("targets", v2);
		v1.addEdge("targets", v3);

		Assert.assertEquals(1, count(v1.getEdges(v2, Direction.OUT, "targets")));
		Assert.assertEquals(0, count(v1.getEdges(v2, Direction.IN, "targets")));
		Assert.assertEquals(0, count(v1.getEdges(v2, Direction.OUT, "aaa")));
		Assert.assertEquals(1, count(v1.getEdges(v3, Direction.OUT, "targets")));
		Assert.assertEquals(0, count(v1.getEdges(v3, Direction.OUT, "bbb")));
		Assert.assertEquals(1, count(v1.getEdges(v2, Direction.OUT)));
		Assert.assertEquals(1, count(v1.getEdges(v3, Direction.OUT)));

		Assert.assertEquals(1, count(v2.getEdges(v1, Direction.IN, "targets")));
		Assert.assertEquals(0, count(v2.getEdges(v1, Direction.OUT, "targets")));
		Assert.assertEquals(0, count(v2.getEdges(v1, Direction.IN, "aaa")));
		Assert.assertEquals(1, count(v2.getEdges(v1, Direction.IN, "targets")));
		Assert.assertEquals(0, count(v2.getEdges(v1, Direction.IN, "bbb")));
		Assert.assertEquals(1, count(v2.getEdges(v1, Direction.IN)));

		graph.shutdown();
	}
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146488061\fstmerge_base_41202247996555897
=======
public void testGetEdgesWithTargetVertex() throws Exception {
		Graph graph = graphTest.generateGraph();

		OrientVertex v1 = (OrientVertex) graph.addVertex(null);
		OrientVertex v2 = (OrientVertex) graph.addVertex(null);
		OrientVertex v3 = (OrientVertex) graph.addVertex(null);
		v1.addEdge("targets", v2);
		v1.addEdge("targets", v3);

		Assert.assertEquals(1, count(v1.getEdges(v2, Direction.OUT, "targets")));
		Assert.assertEquals(0, count(v1.getEdges(v2, Direction.OUT, "aaa")));
		Assert.assertEquals(1, count(v1.getEdges(v3, Direction.OUT, "targets")));
		Assert.assertEquals(0, count(v1.getEdges(v3, Direction.OUT, "bbb")));
		Assert.assertEquals(1, count(v1.getEdges(v2, Direction.OUT)));
		Assert.assertEquals(1, count(v1.getEdges(v3, Direction.OUT)));

		graph.shutdown();
	}
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146488061\fstmerge_var2_1384592713121368135

File path: C:\download\ssmerge\blueprints\revisions\rev_f4f35_f6129\rev_rev_left_f4f35-rev_right_f6129\blueprints-orient-graph\src\test\java\com\tinkerpop\blueprints\impls\orient\OrientGraphSpecificTestSuite.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_d725a_3b4ba\rev_d725a-3b4ba.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_b9aeb_ce1f0\rev_b9aeb-ce1f0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_2525c_198e9\rev_2525c-198e9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_46c22_58b06\rev_46c22-58b06.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_75545_44cc7\rev_75545-44cc7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4f96f_8c8a9\rev_4f96f-8c8a9.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_00573_da687\rev_00573-da687.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_31b90_beb54\rev_31b90-beb54.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_56339_c7e93\rev_56339-c7e93.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_3cb22_1174d\rev_3cb22-1174d.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_c0811_cd0fe\rev_c0811-cd0fe.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_593f4_725d7\rev_593f4-725d7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_4f735_a2be6\rev_4f735-a2be6.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_30e3c_f0737\rev_30e3c-f0737.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_fd1fc-08fd0.revisions
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void testTransactionGraphHelperFireAndForget() {
        TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

        // first fail the tx
        new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
           @Override
           public Vertex execute(final TransactionalGraph graph) throws Exception {
               graph.addVertex(null);
               throw new Exception("fail");
           }
        }).build().fireAndForget();
        vertexCount(graph, 0);

        // this tx will work
        List<Vertex> vin = new ArrayList<Vertex>();
        TransactionRetryHelper<Vertex> trh = new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
            @Override
            public Vertex execute(final TransactionalGraph graph) throws Exception{
                return graph.addVertex(null);
            }
        }).build();
        vin.add(trh.fireAndForget());

        vertexCount(graph, 1);
        containsVertices(graph, vin);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888444\fstmerge_var1_8278443779618791504

        graph.shutdown();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888444\fstmerge_base_8820186724076157534
=======
        graph.shutdown();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888444\fstmerge_var2_8010405268404289218
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_rev_left_fd1fc-rev_right_08fd0\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void testTransactionGraphHelperOneAndDone() {
        TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

        // first fail the tx
        try {
            new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
                @Override
                public Vertex execute(final TransactionalGraph graph) throws Exception{
                    graph.addVertex(null);
                    throw new Exception("fail");
                }
            }).build().oneAndDone();
        } catch (Exception ex) {
            assertEquals("fail", ex.getCause().getMessage());
        }

        vertexCount(graph, 0);

        // this tx will work
        List<Vertex> vin = new ArrayList<Vertex>();
        vin.add(new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
            @Override
            public Vertex execute(final TransactionalGraph graph) throws Exception{
                return graph.addVertex(null);
            }
        }).build().oneAndDone());

        vertexCount(graph, 1);
        containsVertices(graph, vin);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888538\fstmerge_var1_4156774800900475897

        graph.shutdown();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888538\fstmerge_base_5791352480739652481
=======
        graph.shutdown();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888538\fstmerge_var2_2749146633130561874
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_rev_left_fd1fc-rev_right_08fd0\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void testTransactionGraphHelperExponentialBackoff() {
        TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

        // first fail the tx
        final AtomicInteger attempts = new AtomicInteger(0);
        try {
            new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
                @Override
                public Vertex execute(final TransactionalGraph graph) throws Exception {
                    graph.addVertex(null);
                    attempts.incrementAndGet();
                    throw new Exception("fail");
                }
            }).build().exponentialBackoff();
        } catch (Exception ex) {
            assertEquals("fail", ex.getCause().getMessage());
        }

        assertEquals(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES, attempts.get());
        vertexCount(graph, 0);

        // this tx will work after several tries
        final AtomicInteger tries = new AtomicInteger(0);
        List<Vertex> vin = new ArrayList<Vertex>();
        vin.add(new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
            @Override
            public Vertex execute(final TransactionalGraph graph) throws Exception{
                final int tryNumber = tries.incrementAndGet();
                if (tryNumber == TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES - 2)
                    return graph.addVertex(null);
                else
                    throw new Exception("fail");
            }
        }).build().exponentialBackoff());

        vertexCount(graph, 1);
        containsVertices(graph, vin);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888632\fstmerge_var1_5922605500192595878

        graph.shutdown();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888632\fstmerge_base_3499089633578335708
=======
        graph.shutdown();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888632\fstmerge_var2_2441769006414687948
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_rev_left_fd1fc-rev_right_08fd0\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void testTransactionGraphHelperExponentialBackoffWithExceptionChecks() {
        TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();
        Set<Class> exceptions = new HashSet<Class>() {{
            add(IllegalStateException.class);
        }};

        // immediately fail the tx
        final AtomicInteger attempts = new AtomicInteger(0);
        try {
            new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
                @Override
                public Vertex execute(final TransactionalGraph graph) throws Exception {
                    graph.addVertex(null);
                    attempts.incrementAndGet();
                    throw new Exception("fail");
                }
            }).build().exponentialBackoff(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES, 20, exceptions);
        } catch (Exception ex) {
            assertEquals("fail", ex.getCause().getMessage());
        }

        assertEquals(1, attempts.get());
        vertexCount(graph, 0);

        // this tx will fail after a few tries due to exception raised not in set
        final AtomicInteger setOfTries = new AtomicInteger(0);
        try {
            new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
                @Override
                public Vertex execute(final TransactionalGraph graph) throws Exception{
                    final int tryNumber = setOfTries.incrementAndGet();
                    if (tryNumber == TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES - 2)
                        throw new Exception("fail");
                    else
                        throw new IllegalStateException("fail");
                }
            }).build().exponentialBackoff(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES, 20, exceptions);
        } catch (Exception ex) {
            assertEquals("fail", ex.getCause().getMessage());
        }

        assertEquals(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES - 2, setOfTries.get());
        vertexCount(graph, 0);

        // this tx will work after several tries
        final AtomicInteger tries = new AtomicInteger(0);
        List<Vertex> vin = new ArrayList<Vertex>();
        vin.add(new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
            @Override
            public Vertex execute(final TransactionalGraph graph) throws Exception{
                final int tryNumber = tries.incrementAndGet();
                if (tryNumber == TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES - 2)
                    return graph.addVertex(null);
                else
                    throw new IllegalStateException("fail");
            }
        }).build().exponentialBackoff(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES, 20, exceptions));

        vertexCount(graph, 1);
        containsVertices(graph, vin);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888726\fstmerge_var1_6313766376276001949

        graph.shutdown();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888726\fstmerge_base_8498625892350028504
=======
        graph.shutdown();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888726\fstmerge_var2_1487179708476080296
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_rev_left_fd1fc-rev_right_08fd0\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java
Conflict type: EditSameMC
Number of Conflicts: 1
Different Spacing: 1
Consecutive Lines: 0
Intersection: 0
Cause same signature: 
Possible renaming: 0
EditSameMCType: 1, 0, 0
Conflict body: 
public void testTransactionGraphHelperRetry() {
        TransactionalGraph graph = (TransactionalGraph) graphTest.generateGraph();

        // first fail the tx
        final AtomicInteger attempts = new AtomicInteger(0);
        try {
            new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
                @Override
                public Vertex execute(final TransactionalGraph graph) throws Exception {
                    graph.addVertex(null);
                    attempts.incrementAndGet();
                    throw new Exception("fail");
                }
            }).build().retry();
        } catch (Exception ex) {
            assertEquals("fail", ex.getCause().getMessage());
        }

        assertEquals(TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES, attempts.get());
        vertexCount(graph, 0);

        // this tx will work after several tries
        final AtomicInteger tries = new AtomicInteger(0);
        List<Vertex> vin = new ArrayList<Vertex>();
        vin.add(new TransactionRetryHelper.Builder<Vertex>(graph).perform(new TransactionWork<Vertex>() {
            @Override
            public Vertex execute(final TransactionalGraph graph) throws Exception {
                final int tryNumber = tries.incrementAndGet();
                if (tryNumber == TransactionRetryStrategy.DelayedRetry.DEFAULT_TRIES - 2)
                    return graph.addVertex(null);
                else
                    throw new Exception("fail");
            }
        }).build().retry());

        vertexCount(graph, 1);
        containsVertices(graph, vin);
<<<<<<< C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888819\fstmerge_var1_3428882843534070372

        graph.shutdown();
||||||| C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888819\fstmerge_base_3456070335418985559
=======
        graph.shutdown();
>>>>>>> C:\Users\155 X-MX\Documents\dev\second_study\conflictsAnalyzer\fstmerge_tmp1513146888819\fstmerge_var2_8068432136511481203
    }

File path: C:\download\ssmerge\blueprints\revisions\rev_fd1fc_08fd0\rev_rev_left_fd1fc-rev_right_08fd0\blueprints-test\src\main\java\com\tinkerpop\blueprints\TransactionalGraphTestSuite.java

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_942a3_47d2b\rev_942a3-47d2b.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_3f897_5a205\rev_3f897-5a205.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_e7f8d_18283\rev_e7f8d-18283.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_8a1ff_d5a20\rev_8a1ff-d5a20.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_b8495_06d33\rev_b8495-06d33.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_cbaee_ccc76\rev_cbaee-ccc76.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_80023_1b5a7\rev_80023-1b5a7.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_175a7_30ee0\rev_175a7-30ee0.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_25bc6_b12d1\rev_25bc6-b12d1.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_1af6b_49200\rev_1af6b-49200.revisions

==================================================================================================================
Revision: C:\download\ssmerge\blueprints\revisions\rev_e0ff7_6f6ce\rev_e0ff7-6f6ce.revisions

=========================================================
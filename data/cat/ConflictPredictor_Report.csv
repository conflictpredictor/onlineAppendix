#MS_XXX_MS#
Merge scenario: rev_48573-a0dff
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a0dff-94c1e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_fe10a-c9305
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c9305-3467e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_30ae9-8a7a6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8a7a6-ab9b8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3e7dc-cca45
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7e1c9-da328
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9002e-58271
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7772d-f8041
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_23e96-48b27
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d7db3-eb395
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0ecdc-3d49a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_1859b-b823a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_1793a-14716
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c6c79-4a0b2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_4a0b2-1ddb9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f610b-8a318
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8a318-b3970
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_4f21e-6446e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6446e-8a9e8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0a51d-2c464
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_454b6-3777a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_97415-cd349
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_59eb4-3facb
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_2c464-454b6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9004a-a59ff
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_27fdb-bd448
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_03227-23aed
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_08f84-17631
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d1ad6-ddce2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_ba4b2-14942
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_86fec-5d6ba
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a59ff-ba4b2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3a91d-65210
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6be3d-bcf71
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b1cce-66f34
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9a0d5-d299b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a3473-dc3ee
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b9b1f-212bc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9e8c5-14b7f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_044ed-ba18e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_14b7f-ba18e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_57386-0b1c3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_03887-ef206
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5eb2e-59655
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_13bb6-10362
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_10362-6411a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_59655-6411a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6411a-7dcb1
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_430fb-2c464
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_bc069-744a6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_dbe49-15ab5
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_744a6-15ab5
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b486b-86891
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_86891-a94be
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f7b67-f6c6e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7e650-f6c6e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f6c6e-e51ab
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b8888-40276
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_40276-0359d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d1c44-eb16c
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_da54b-eb16c
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_dd4f0-c575a
#CP_===_CP#
Type: EditSameMC
File: C:\download\ssmerge\cat\revisions\rev_dd4f0_c575a\rev_rev_left_dd4f0-rev_right_c575a\cat-core\src\main\java\com\dianping\cat\build\ComponentsConfigurator.java
Different Spacing: false
Left editions: []
Right editions: []
Merged body: 
// START defineComponents({FormalParametersInternal})//@Override
	public List<Component> defineComponents() {
		List<Component> all = new ArrayList<Component>();

		all.add(C(DomainManager.class)//
		      .req(ServerConfigManager.class, ProjectDao.class, HostinfoDao.class));

		all.add(C(TaskManager.class).req(TaskDao.class));
		all.add(C(ServerConfigManager.class));
		all.add(C(ServerStatisticManager.class));

		all.add(C(MessagePathBuilder.class, DefaultMessagePathBuilder.class) //
		      .req(ClientConfigManager.class));

		all.add(C(MessageAnalyzerManager.class, DefaultMessageAnalyzerManager.class));

		all.add(C(TcpSocketReceiver.class).req(ServerConfigManager.class).req(ServerStatisticManager.class)
		      .req(MessageCodec.class, PlainTextMessageCodec.ID).req(MessageHandler.class));

		all.add(C(DecodeMessageTask.class));

		all.add(C(MessageBucket.class, LocalMessageBucket.ID, LocalMessageBucket.class) //
		      .is(PER_LOOKUP) //
		      .req(MessageCodec.class, PlainTextMessageCodec.ID));
		all.add(C(MessageBucketManager.class, LocalMessageBucketManager.ID, LocalMessageBucketManager.class) //
		      .req(ServerConfigManager.class, MessagePathBuilder.class, ServerStatisticManager.class));

		all.add(C(Module.class, CatCoreModule.ID, CatCoreModule.class));

		all.addAll(new CatCoreDatabaseConfigurator().defineComponents());
		all.addAll(new CodecComponentConfigurator().defineComponents());
		all.addAll(new StorageComponentConfigurator().defineComponents());

		return all;
// END defineComponents({FormalParametersInternal})//	}

#CP_===_CP#
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_eb16c-34cef
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_478e5-4d13c
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e10cb-3b454
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_ede84-d82ba
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f10f2-7971f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8b388-942ed
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d82ba-7971f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f2726-05dd9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c16b1-e008b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_706d8-f6119
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e008b-706d8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5be9f-803e2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_51508-803e2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f8abc-1594d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_1594d-d15f9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3881c-f8abc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3c42f-4e1c8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_2c763-885f2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_025e6-cca10
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b045c-4e1c8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_cca10-025e6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3fab2-5d86d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5d86d-3b430
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_44ad6-83c81
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9cc0f-7277a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5c5a1-6c347
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_dc0dd-9cc0f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_885f2-022d1
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5319b-7780c
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5d0ff-ae991
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_ec508-fd00b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_df744-fd00b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6cc48-a4323
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_9bcee-df803
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_53f0f-0c9d9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_45825-84bf8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_90a13-7c8ad
#CP_===_CP#
Type: EditSameMC
File: C:\download\ssmerge\cat\revisions\rev_90a13_7c8ad\rev_rev_left_90a13-rev_right_7c8ad\cat-consumer-advanced\src\main\java\com\dianping\cat\consumer\metric\MetricAnalyzer.java
Different Spacing: false
Left editions: [346]
Right editions: []
Merged body: 
// START storeReports(boolean-boolean)//protected void storeReports(boolean atEnd) {
		DefaultXmlBuilder builder = new DefaultXmlBuilder(true);
		Bucket<String> reportBucket = null;
		Transaction t = Cat.getProducer().newTransaction("Checkpoint", ID);

		t.setStatus(Message.SUCCESS);
		try {
// LEFT //			reportBucket = m_bucketManager.getReportBucket(m_startTime, MetricAnalyzer.ID);

			for (MetricReport report : m_reports.values()) {
				try {
					String xml = builder.buildXml(report);
					String product = report.getProduct();

					reportBucket.storeById(product, xml);
				} catch (Exception e) {
					t.setStatus(e);
					Cat.logError(e);
				}
			}

			if (atEnd && !isLocalMode()) {
				Date period = new Date(m_startTime);
				String ip = NetworkInterfaceManager.INSTANCE.getLocalHostAddress();
				int binary = 1;

				for (MetricReport report : m_reports.values()) {
					try {
						BusinessReport r = m_businessReportDao.createLocal();
						String product = report.getProduct();

						r.setName(ID);
						r.setProductLine(product);
						r.setPeriod(period);
						r.setIp(ip);
						r.setType(binary);
						r.setContent(DefaultNativeBuilder.build(report));
						r.setCreationDate(new Date());

						m_businessReportDao.insert(r);
					} catch (Throwable e) {
						m_logger.error(report.toString());
						t.setStatus(e);
						Cat.getProducer().logError(e);
					}
				}
				m_taskManager.createTask(period, Constants.CAT, ID, TaskProlicy.DAILY);
			}
		} catch (Exception e) {
			Cat.getProducer().logError(e);
			t.setStatus(e);
			m_logger.error(String.format("Error when storing metric reports of %s!", new Date(m_startTime)), e);
		} finally {
			t.complete();

			if (reportBucket != null) {
				m_bucketManager.closeBucket(reportBucket);
			}
		}
// END storeReports(boolean-boolean)//	}

#CP_===_CP#
#MS_XXX_MS#

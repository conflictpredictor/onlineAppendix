#MS_XXX_MS#
Merge scenario: rev_e2fbb-bf440
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f9dc9-ede3b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7e641-f5947
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_635b6-6ce1e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_dfc39-e80c2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_2b765-c5306
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_66968-502b9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_77c2a-9f3af
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c51b8-24567
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_05dba-caa91
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_50113-a832e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_886fd-d9cdf
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_01ea5-f2d5b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d7f5b-95b6b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b2575-0fb76
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7ec61-1c3dc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6128f-5d65e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_215a2-059b2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_ed72d-79223
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_24fdd-4e6d2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_db516-cea67
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d0f81-66b47
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c5a3e-7f865
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8ec7d-f1ba0
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0c671-e26ec
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8958f-5d044
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_053c2-73e5b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e4e84-4d1dd
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_94b33-4b2c6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_debbd-aae5f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_84d80-317ce
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f950d-ab748
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_91956-9a4e0
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8514c-e654c
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3f6a8-34289
#CP_===_CP#
Type: EditSameMC
File: C:\download\ssmerge\pac4j\revisions\rev_3f6a8_34289\rev_rev_left_3f6a8-rev_right_34289\pac4j-saml\src\main\java\org\pac4j\saml\client\Saml2Client.java
Different Spacing: false
Left editions: [315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331]
Right editions: [239, 240, 241, 265, 266, 268, 270, 277]
Merged body: 
// START internalInit({FormalParametersInternal})//@Override
    protected void internalInit() {

        CommonHelper.assertNotBlank("keystorePath", this.keystorePath);
        CommonHelper.assertNotBlank("keystorePassword", this.keystorePassword);
        CommonHelper.assertNotBlank("privateKeyPassword", this.privateKeyPassword);
// RIGHT //        CommonHelper.assertTrue(
// RIGHT //            CommonHelper.isNotBlank(this.idpMetadata) || CommonHelper.isNotBlank(this.idpMetadataPath),
// RIGHT //            "Either idpMetadata or idpMetadataPath must be provided");
        CommonHelper.assertNotBlank("callbackUrl", this.callbackUrl);
        if (!this.callbackUrl.startsWith("http")) {
            throw new TechnicalException("SAML callbackUrl must be absolute");
        }

        // Bootsrap OpenSAML
        try {
            DefaultBootstrap.bootstrap();
            NamedKeyInfoGeneratorManager manager = Configuration.getGlobalSecurityConfiguration()
                    .getKeyInfoGeneratorManager();
            X509KeyInfoGeneratorFactory generator = new X509KeyInfoGeneratorFactory();
            generator.setEmitEntityCertificate(true);
            generator.setEmitEntityCertificateChain(true);
            manager.registerFactory(Saml2Client.SAML_METADATA_KEY_INFO_GENERATOR, generator);
        } catch (ConfigurationException e) {
            throw new SamlException("Error bootstrapping OpenSAML", e);
        }

        // load private key from the keystore and provide it as OpenSAML credentials
        this.credentialProvider = new CredentialProvider(this.keystorePath, this.keystorePassword,
                this.privateKeyPassword);

        // required parserPool for XML processing
// RIGHT //        final StaticBasicParserPool parserPool = newStaticBasicParserPool();
// RIGHT //        final AbstractMetadataProvider idpMetadataProvider = idpMetadataProvider(parserPool);

// RIGHT //        final XMLObject md;
        try {
// RIGHT //          md = idpMetadataProvider.getMetadata();
        } catch (MetadataProviderException e) {
            throw new SamlException("Error initializing idpMetadataProvider", e);
        }

        // If no idpEntityId declared, select first EntityDescriptor entityId as our IDP entityId
        if (this.idpEntityId == null) {
// RIGHT //            this.idpEntityId = getIdpEntityId(md);
        }

        // Generate our Service Provider metadata
        Saml2MetadataGenerator metadataGenerator = new Saml2MetadataGenerator();
        metadataGenerator.setCredentialProvider(this.credentialProvider);
        // for the spEntityId, use the callback url
        String spEntityId = getCallbackUrl();
        metadataGenerator.setEntityId(spEntityId);
        // Assertion consumer service url is the callback url
        metadataGenerator.setAssertionConsumerServiceUrl(getCallbackUrl());
        // for now same for logout url
        metadataGenerator.setSingleLogoutServiceUrl(getCallbackUrl());
        AbstractMetadataProvider spMetadataProvider = metadataGenerator.buildMetadataProvider();

        // Initialize metadata provider for our SP and get the XML as a String
        try {
            spMetadataProvider.initialize();
            this.spMetadata = metadataGenerator.printMetadata();
        } catch (MetadataProviderException e) {
            throw new TechnicalException("Error initializing spMetadataProvider", e);
        } catch (MarshallingException e) {
            logger.warn("Unable to print SP metadata", e);
        }

        // Put IDP and SP metadata together
        ChainingMetadataProvider metadataManager = new ChainingMetadataProvider();
        try {
            metadataManager.addMetadataProvider(idpMetadataProvider);
            metadataManager.addMetadataProvider(spMetadataProvider);
        } catch (MetadataProviderException e) {
            throw new TechnicalException("Error adding idp or sp metadatas to manager", e);
        }

        // Build the contextProvider
        this.contextProvider = new Saml2ContextProvider(metadataManager, this.idpEntityId, spEntityId);

        // Get an AuthnRequest builder
// LEFT //        this.authnRequestBuilder = new Saml2AuthnRequestBuilder(forceAuth, comparisonType, destinationBindingType);

        // Build the WebSSO handler for sending and receiving SAML2 messages
// LEFT //        MessageEncoder encoder = null;
// LEFT //        if (SAMLConstants.SAML2_POST_BINDING_URI.equals(destinationBindingType)) {
// LEFT //            // Get a velocity engine for the HTTP-POST binding (building of an HTML document)
// LEFT //            VelocityEngine velocityEngine = VelocityEngineFactory.getEngine();
// LEFT //            encoder = new HTTPPostEncoder(velocityEngine, "/templates/saml2-post-binding.vm");
// LEFT //        } else if (SAMLConstants.SAML2_REDIRECT_BINDING_URI.equals(destinationBindingType)) {
// LEFT //            encoder = new HTTPRedirectDeflateEncoder();
// LEFT //        } else {
// LEFT //            throw new UnsupportedOperationException("Binding type - " + destinationBindingType + " is not supported"); 
// LEFT //        }
// LEFT //
// LEFT //        // Do we need binding specific decoder? 
// LEFT //        MessageDecoder decoder = new Pac4jHTTPPostDecoder(parserPool);
// LEFT //        this.handler = new Saml2WebSSOProfileHandler(this.credentialProvider, encoder, decoder, parserPool, destinationBindingType);

        // Build provider for digital signature validation and encryption
        this.signatureTrustEngineProvider = new SignatureTrustEngineProvider(metadataManager);
        this.encryptionProvider = new EncryptionProvider(this.credentialProvider);

        // Build the SAML response validator
        this.responseValidator = new Saml2ResponseValidator();
        if (this.maximumAuthenticationLifetime != null) {
            this.responseValidator.setMaximumAuthenticationLifetime(this.maximumAuthenticationLifetime);
        }

// END internalInit({FormalParametersInternal})//    }

#CP_===_CP#
#CP_===_CP#
Type: EditSameMC
File: C:\download\ssmerge\pac4j\revisions\rev_3f6a8_34289\rev_rev_left_3f6a8-rev_right_34289\pac4j-saml\src\main\java\org\pac4j\saml\client\Saml2Client.java
Different Spacing: false
Left editions: [357, 358, 359]
Right editions: [352]
Merged body: 
// START newClient({FormalParametersInternal})//@Override
    protected BaseClient<Saml2Credentials, Saml2Profile> newClient() {
        Saml2Client client = new Saml2Client();
        client.setKeystorePath(this.keystorePath);
        client.setKeystorePassword(this.keystorePassword);
        client.setPrivateKeyPassword(this.privateKeyPassword);
// RIGHT //        client.setIdpMetadata(this.idpMetadata);
        client.setIdpMetadataPath(this.idpMetadataPath);
        client.setIdpEntityId(this.idpEntityId);
        client.setMaximumAuthenticationLifetime(this.maximumAuthenticationLifetime);
        client.setCallbackUrl(this.callbackUrl);
// LEFT //        client.setCallbackUrl(this.callbackUrl);
// LEFT //        client.setDestinationBindingType(this.destinationBindingType);
// LEFT //        client.setComparisonType(this.comparisonType);
        return client;
// END newClient({FormalParametersInternal})//    }

#CP_===_CP#
#CP_===_CP#
Type: EditSameMC
File: C:\download\ssmerge\pac4j\revisions\rev_3f6a8_34289\rev_rev_left_3f6a8-rev_right_34289\pac4j-saml\src\test\java\org\pac4j\saml\client\TestSaml2Client.java
Different Spacing: false
Left editions: [170, 171]
Right editions: [163]
Merged body: 
// START getClient({FormalParametersInternal})//@Override
// RIGHT //    protected Saml2Client getClient() {
        final Saml2Client saml2Client = new Saml2Client();
        saml2Client.setKeystorePath("resource:samlKeystore.jks");
        saml2Client.setKeystorePassword("pac4j-demo-passwd");
        saml2Client.setPrivateKeyPassword("pac4j-demo-passwd");
        saml2Client.setIdpMetadataPath("resource:testshib-providers.xml");
        saml2Client.setMaximumAuthenticationLifetime(3600);
// LEFT //        saml2Client.setCallbackUrl(getCallbackUrl());
// LEFT //        saml2Client.setDestinationBindingType(getDestinationBindingType());
        return saml2Client;
// END getClient({FormalParametersInternal})//    }

#CP_===_CP#
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_34289-84cb3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_97157-e1cc9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_cdfe9-0f09e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_35930-df8af
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8dfd5-57e1d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e4f8f-2cfd3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e29c9-b4e44
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0b49a-baa0f
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_2e741-e2a38
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a3859-6fc62
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_35279-4c263
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b423d-5fc83
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8b665-24223
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_96a94-7b9cc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_7b9cc-735ba
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_160ea-8885e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b20a0-a9c5d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a9c5d-153f3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f4005-1a031
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f15ef-3b2cc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3b2cc-f5090
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e7523-22e16
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_942a3-5bcfc
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_34bf9-5fa62
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_78e9d-0206e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3dcd8-5f1fa
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_bda28-c4436
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e2a20-ae3e5
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_3134d-1f2da
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5ae0f-1f0f3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_31771-3cf64
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_ab268-fedb6
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b09ba-59b98
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_59b98-24544
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a34d1-21146
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_56986-e32e0
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f87d8-72a60
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_590ca-7765e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6217c-23ab7
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b75f3-d70e3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_d70e3-97b78
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0c79c-e0476
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c6696-5f7b3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c7a35-6f90e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_789f7-2da0e
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_31771-768a9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_1b3a5-50ec4
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_51f58-1b659
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_1b659-73b94
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_4085a-08f30
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_85713-338ab
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b495e-bc402
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_c45f8-65b25
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_82431-39c4a
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_4cc5b-d39ac
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_cd9e6-798b3
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_82431-001d8
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_90b96-fd888
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_fd888-ffa92
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f328e-85fab
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_df4fa-73ba9
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_931c2-1206b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5ade9-b7f29
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_de14f-f2e9d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_f2e9d-44190
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_408fa-cfba5
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_da783-01981
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8c5ac-9f494
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_16b3f-2496b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_2496b-45f36
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_b2d55-68740
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_fefb5-378fa
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_0a3d4-e6893
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_025de-75169
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_8744a-03b3b
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_6260f-b5e2d
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e0950-3d1ef
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_5c97b-e45f2
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_cf90f-ef408
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_e0157-4cea7
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_a4c7f-f23ad
#MS_XXX_MS#
#MS_XXX_MS#
Merge scenario: rev_48967-9fce5
#MS_XXX_MS#
